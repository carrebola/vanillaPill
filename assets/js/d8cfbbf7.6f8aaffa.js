"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8657],{3905:(e,a,t)=>{t.d(a,{Zo:()=>p,kt:()=>g});var r=t(7294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var i=r.createContext({}),c=function(e){var a=r.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},p=function(e){var a=c(e.components);return r.createElement(i.Provider,{value:a},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},m=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(t),m=n,g=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return t?r.createElement(g,s(s({ref:a},p),{},{components:t})):r.createElement(g,s({ref:a},p))}));function g(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,s=new Array(o);s[0]=m;var l={};for(var i in a)hasOwnProperty.call(a,i)&&(l[i]=a[i]);l.originalType=e,l[u]="string"==typeof e?e:n,s[1]=l;for(var c=2;c<o;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4657:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(7462),n=(t(7294),t(3905));const o={title:"Resumen del c\xf3digo JS necesario para la comunicaci\xf3n con la BD"},s=void 0,l={unversionedId:"Version 1.0/SPRINT 4 - BACKEND/Probando Supabase con Javascript/Resumen del codigo js necesario",id:"Version 1.0/SPRINT 4 - BACKEND/Probando Supabase con Javascript/Resumen del codigo js necesario",title:"Resumen del c\xf3digo JS necesario para la comunicaci\xf3n con la BD",description:"Este es el c\xf3digo que, a priori, necesitamos para conectar y comunicar nuestra app con la BD.",source:"@site/docs/03-Version 1.0/SPRINT 4 - BACKEND/06-Probando Supabase con Javascript/03-Resumen del codigo js necesario.md",sourceDirName:"03-Version 1.0/SPRINT 4 - BACKEND/06-Probando Supabase con Javascript",slug:"/Version 1.0/SPRINT 4 - BACKEND/Probando Supabase con Javascript/Resumen del codigo js necesario",permalink:"/vanillaPill/docs/Version 1.0/SPRINT 4 - BACKEND/Probando Supabase con Javascript/Resumen del codigo js necesario",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/03-Version 1.0/SPRINT 4 - BACKEND/06-Probando Supabase con Javascript/03-Resumen del codigo js necesario.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Resumen del c\xf3digo JS necesario para la comunicaci\xf3n con la BD"},sidebar:"tutorialSidebar",previous:{title:"Funciones en Supabase. Las Stored Procedures",permalink:"/vanillaPill/docs/Version 1.0/SPRINT 4 - BACKEND/Probando Supabase con Javascript/Stored Procedures"},next:{title:"Pruebas de conexi\xf3n a la bd desde proyecto javascript",permalink:"/vanillaPill/docs/Version 1.0/SPRINT 4 - BACKEND/Probando Supabase con Javascript/Pruebas de conexi\xf3n"}},i={},c=[{value:"APIS extraidas de API Docs de Supabase para gestion de usuarios",id:"apis-extraidas-de-api-docs-de-supabase-para-gestion-de-usuarios",level:2},{value:"APIS para tablas",id:"apis-para-tablas",level:2},{value:"Tabla perfiles",id:"tabla-perfiles",level:3},{value:"Tabla proyectos",id:"tabla-proyectos",level:3},{value:"Funciones",id:"funciones",level:2}],p={toc:c},u="wrapper";function d(e){let{components:a,...t}=e;return(0,n.kt)(u,(0,r.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Este es el c\xf3digo que, a priori, necesitamos para conectar y comunicar nuestra app con la BD.\nLo he copiado de la API Docs de Supabase para tenerlo como referencia para utilizarlo m\xe1s adelante, cuando empecemos a programar la l\xf3gica para comunicar nuestro frontEnd con la base de datos:"),(0,n.kt)("h2",{id:"apis-extraidas-de-api-docs-de-supabase-para-gestion-de-usuarios"},"APIS extraidas de API Docs de Supabase para gestion de usuarios"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="USER SIGNUP"',title:'"USER','SIGNUP"':!0},"let { data, error } = await supabase.auth.signUp({\n email: 'someone@email.com',\n password: 'TGeycKCsmEIyrHPhWiYF'\n})\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="USER LOGIN"',title:'"USER','LOGIN"':!0},"let { data, error } = await supabase.auth.signInWithPassword({\n email: 'someone@email.com',\n password: 'TGeycKCsmEIyrHPhWiYF'\n})\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="GET USER"',title:'"GET','USER"':!0},"const { data: { user } } = await supabase.auth.getUser()\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="PASSWORD RECOVERY"',title:'"PASSWORD','RECOVERY"':!0},"let { data, error } = await supabase.auth.resetPasswordForEmail(email)\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="UPDATE USER"',title:'"UPDATE','USER"':!0},'const { data, error } = await supabase.auth.updateUser({\n email: "new@email.com",\n password: "new-password",\n data: { hello: \'world\' }\n})\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="USER LOGOUT"',title:'"USER','LOGOUT"':!0},"let { error } = await supabase.auth.signOut()\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="INVITE USER"',title:'"INVITE','USER"':!0},"let { data, error } = await supabase.auth.api.inviteUserByEmail('someone@email.com')\n")),(0,n.kt)("h2",{id:"apis-para-tablas"},"APIS para tablas"),(0,n.kt)("h3",{id:"tabla-perfiles"},"Tabla perfiles"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="READ ALL ROWS"',title:'"READ',ALL:!0,'ROWS"':!0},"let { data: perfiles, error } = await supabase\n .from('perfiles')\n .select('*')\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="READ SPECIFIC COLUMNS"',title:'"READ',SPECIFIC:!0,'COLUMNS"':!0},"let { data: perfiles, error } = await supabase\n .from('perfiles')\n .select('some_column,other_column')\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="WITH PAGINATION"',title:'"WITH','PAGINATION"':!0},"let { data: perfiles, error } = await supabase\n .from('perfiles')\n .select('*')\n .range(0, 9)\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="WITH FILTERING"',title:'"WITH','FILTERING"':!0},"let { data: perfiles, error } = await supabase\n .from('perfiles')\n .select(\"*\")\n // Filters\n .eq('column', 'Equal to')\n .gt('column', 'Greater than')\n .lt('column', 'Less than')\n .gte('column', 'Greater than or equal to')\n .lte('column', 'Less than or equal to')\n .like('column', '%CaseSensitive%')\n .ilike('column', '%CaseInsensitive%')\n .is('column', null)\n .in('column', ['Array', 'Values'])\n .neq('column', 'Not equal to')\n\n // Arrays\n .cs('array_column', ['array', 'contains'])\n .cd('array_column', ['contained', 'by'])\n")),(0,n.kt)("h3",{id:"tabla-proyectos"},"Tabla proyectos"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="READ ALL ROWS"',title:'"READ',ALL:!0,'ROWS"':!0},"let { data: proyectos, error } = await supabase\n .from('proyectos')\n .select('*')\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="READ SPECIFIC COLUMNS"',title:'"READ',SPECIFIC:!0,'COLUMNS"':!0},"let { data: proyectos, error } = await supabase\n .from('proyectos')\n .select('some_column,other_column')\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="READ FOREIGN TABLES"',title:'"READ',FOREIGN:!0,'TABLES"':!0},"let { data: proyectos, error } = await supabase\n .from('proyectos')\n .select(`\n   some_column,\n   other_table (\n     foreign_key\n   )\n `)\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="WITH PAGINATION"',title:'"WITH','PAGINATION"':!0},"let { data: proyectos, error } = await supabase\n .from('proyectos')\n .select('*')\n .range(0, 9)\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="WITH FILTERING"',title:'"WITH','FILTERING"':!0},"let { data: proyectos, error } = await supabase\n .from('proyectos')\n .select(\"*\")\n // Filters\n .eq('column', 'Equal to')\n .gt('column', 'Greater than')\n .lt('column', 'Less than')\n .gte('column', 'Greater than or equal to')\n .lte('column', 'Less than or equal to')\n .like('column', '%CaseSensitive%')\n .ilike('column', '%CaseInsensitive%')\n .is('column', null)\n .in('column', ['Array', 'Values'])\n .neq('column', 'Not equal to')\n // Arrays\n .cs('array_column', ['array', 'contains'])\n .cd('array_column', ['contained', 'by'])\n")),(0,n.kt)("h2",{id:"funciones"},"Funciones"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="INVOKE FUNCTION perfil_detalle"',title:'"INVOKE',FUNCTION:!0,'perfil_detalle"':!0},"let { data, error } = await supabase\n .rpc('perfil_detalle', {\n   userid\n })\n\nif (error) console.error(error)\nelse console.log(data)\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="INVOKE FUNCTION perfil_detalle_todos',title:'"INVOKE',FUNCTION:!0,perfil_detalle_todos:!0},"let { data, error } = await supabase\n .rpc('perfil_detalle_todos')\n\nif (error) console.error(error)\nelse console.log(data)\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="INVOKE FUNCTION proyecto_detalle',title:'"INVOKE',FUNCTION:!0,proyecto_detalle:!0},"let { data, error } = await supabase\n .rpc('proyecto_detalle', {\n   proyecto_id\n })\n\nif (error) console.error(error)\nelse console.log(data)\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="INVOKE FUNCTION proyecto_detalle_todos',title:'"INVOKE',FUNCTION:!0,proyecto_detalle_todos:!0},"let { data, error } = await supabase\n .rpc('proyecto_detalle_todos')\n\nif (error) console.error(error)\nelse console.log(data)\n")))}d.isMDXComponent=!0}}]);