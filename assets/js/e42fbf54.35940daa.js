"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8172],{3905:(e,a,t)=>{t.d(a,{Zo:()=>c,kt:()=>g});var n=t(7294);function o(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){o(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,o=function(e,a){if(null==e)return{};var t,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(o[t]=e[t]);return o}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),p=function(e){var a=n.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},c=function(e){var a=p(e.components);return n.createElement(l.Provider,{value:a},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(t),u=o,g=m["".concat(l,".").concat(u)]||m[u]||d[u]||r;return t?n.createElement(g,i(i({ref:a},c),{},{components:t})):n.createElement(g,i({ref:a},c))}));function g(e,a){var t=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=u;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s[m]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<r;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9748:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var n=t(7462),o=(t(7294),t(3905));const r={sidebar_position:40},i="FrontEnd basado en vite.",s={unversionedId:"Version 1.0/Hist8 - Implementaci\xf3n del proyecto basado en SPA/h2",id:"Version 1.0/Hist8 - Implementaci\xf3n del proyecto basado en SPA/h2",title:"FrontEnd basado en vite.",description:"Como desarrollador quiero crear una infraestructura b\xe1sica para la creaci\xf3n del proyecto basada en vite. Adem\xe1s quiero crear un repositorio y publicarlo en github y desplegar la app en github pages.",source:"@site/docs/03-Version 1.0/09-Hist8 - Implementaci\xf3n del proyecto basado en SPA/h2.md",sourceDirName:"03-Version 1.0/09-Hist8 - Implementaci\xf3n del proyecto basado en SPA",slug:"/Version 1.0/Hist8 - Implementaci\xf3n del proyecto basado en SPA/h2",permalink:"/vanillaPill/docs/Version 1.0/Hist8 - Implementaci\xf3n del proyecto basado en SPA/h2",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/03-Version 1.0/09-Hist8 - Implementaci\xf3n del proyecto basado en SPA/h2.md",tags:[],version:"current",sidebarPosition:40,frontMatter:{sidebar_position:40},sidebar:"tutorialSidebar",previous:{title:"Validaciones basadas en html",permalink:"/vanillaPill/docs/Version 1.0/Hist7 - Validaciones/ValidacionHTML"},next:{title:"Historia 8. Configuraci\xf3n del entorno de desarrollo para nuestro proyecto. ESLint",permalink:"/vanillaPill/docs/Version 1.0/Hist8 - Implementaci\xf3n del proyecto basado en SPA/h8"}},l={},p=[{value:"Tarea 1 Creaci\xf3n del proyecto con vite",id:"tarea1",level:3},{value:"Tarea 2 Scaffolding",id:"tarea-2-scaffolding",level:3},{value:"Tarea 3 -  Vite.config.js",id:"tarea-3----viteconfigjs",level:2},{value:"Tarea 4 - Bootstrap, Bootswatch y SASS",id:"tarea-4---bootstrap-bootswatch-y-sass",level:2},{value:"Tarea 5 Repositorio despliegue en GitHub Pages",id:"tarea-5-repositorio-despliegue-en-github-pages",level:2}],c={toc:p},m="wrapper";function d(e){let{components:a,...t}=e;return(0,o.kt)(m,(0,n.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"frontend-basado-en-vite"},"FrontEnd basado en vite."),(0,o.kt)("p",null,"Como desarrollador quiero crear una infraestructura b\xe1sica para la creaci\xf3n del proyecto basada en vite. Adem\xe1s quiero crear un repositorio y publicarlo en github y desplegar la app en github pages."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Crearemos un proyecto html/javascript con bootstrap y sass utilizando vite"),(0,o.kt)("li",{parentName:"ol"},"Creamos el scaffolding de nuestro proyecto con algunos 'componentes' b\xe1sicos."),(0,o.kt)("li",{parentName:"ol"},"Crearemos archivo vite.config y verificamos que todo funciona de forma correcta"),(0,o.kt)("li",{parentName:"ol"},"Crearemos un repositorio y una rama de desarrollo y lo sincronizaremos con GitHub."),(0,o.kt)("li",{parentName:"ol"},"Crearemos un sistema de despliegue continuo basado en GitHub mediante gh-pages."),(0,o.kt)("li",{parentName:"ol"},"Crearemos una p\xe1gina b\xe1sica con una tabla para mostrar los datos de los perfiles de usuarios."),(0,o.kt)("li",{parentName:"ol"},"Programaremos la l\xf3gica para realizar la conexi\xf3n con la base de datos y  mostrar los datos de la tabla perfiles")),(0,o.kt)("h3",{id:"tarea1"},"Tarea 1 Creaci\xf3n del proyecto con vite"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Creamos una carpeta con nuestro proyecto y lo abrimos con vscode"),(0,o.kt)("li",{parentName:"ul"},"Creamos un proyecto con vite     ",(0,o.kt)("inlineCode",{parentName:"li"},"npm create vite@latest . ")),(0,o.kt)("li",{parentName:"ul"},"Instalamos las dependencias ",(0,o.kt)("inlineCode",{parentName:"li"},"npm install")),(0,o.kt)("li",{parentName:"ul"},"Y levantamos el servidor de pruebas ",(0,o.kt)("inlineCode",{parentName:"li"},"npm run dev"))),(0,o.kt)("h3",{id:"tarea-2-scaffolding"},"Tarea 2 Scaffolding"),(0,o.kt)("p",null,"Ahora que todo funciona bien, vamos a contruir la estructura del proyecto con la vista principal y algunos objetos a modo de componentes"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Eliminamos los archivos de muestrea y creamos una estructura de carpetas como la siguiente:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"        node_modules  \n        src\n            componentes\n                header.js\n                footer.js\n            vistas\n                home.js\n            index.html \n            main.js\n        .gitignore  \n        package.json  \n        package-lock.json  \n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Modificamos index.html para que solo tenga las etiquetas header, main y footer y enlazamos el archivo main.js")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="index.html"',title:'"index.html"'},'        <!DOCTYPE html>\n        <html lang="es">\n          <head>\n            <meta charset="UTF-8" />\n            <link rel="icon" type="image/svg+xml" href="/vite.svg" />\n            <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n            <title>Proyecto</title>\n          </head>\n          <body>\n            <header></header>\n            <main></main>\n            <footer></footer>\n            <script type="module" src="/main.js"><\/script>\n          </body>\n        </html>\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Creamos la vista principal y los componentes header y footer con un 'template' b\xe1sico")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="home.js"',title:'"home.js"'},"        export default {\n            template: `<h1>home</h1>`\n        }\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="header.js"',title:'"header.js"'},"        export const header = {\n            template: `header`\n        }\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"En main.js importamos los componentes header y footer y los inyectamos en sus etiquetas correspondients. Tambi\xe9n cargamos la vista home.js en la etiqueta main")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="home.js"',title:'"home.js"'},"        import './style.css'\n        import { header } from './componentes/header'\n        import { footer } from './componentes/footer'\n\n        //Importamos el componente por defecto\n        const componenteHome = await import('./vistas/homeVista')\n        //Extraemos el objeto\n        const homeVista = componenteHome.default\n        //Inyectamos el componente header\n        document.querySelector('header').innerHTML = header.template\n        //Inyectamos la vista home\n        document.querySelector('main').innerHTML = homeVista.template\n        //Inyectamos el componente footer\n        document.querySelector('footer').innerHTML = footer.template\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Ahora solo falta configurar vite para que sepa donde buscar los archivos index.html y main.js")),(0,o.kt)("h2",{id:"tarea-3----viteconfigjs"},"Tarea 3 -  Vite.config.js"),(0,o.kt)("p",null,"Cramos el archivo vite.config.js"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="vite.config.js"',title:'"vite.config.js"'},"import path from 'path'\n\nexport default {\n  root: path.resolve(__dirname, 'src'), // Carpeta donde alojamos el archivo main.js\n  \n  build: {\n    rollupOptions: {\n        /*\n            Opciones de configuraci\xf3n de Rollup externas, ser\xe1n mergeadas con la configuracion\n            interna de Rollup de Vite.\n        */\n        input: {\n            main: path.resolve(__dirname, 'src/index.html'), // Indicamos las p\xe1ginas que debe analizar\n        },\n        output: {\n            dir: path.resolve(__dirname, 'dist'), //Donde se va a crear el build de nuestra aplicacion\n            format: 'es', //Formato de ES modules\n        },\n    },\n    outDir: path.resolve(__dirname, 'dist'),\n    minify: false, //( Si no se quiere minificar el build) https://vitejs.dev/config/#build-minify (aplica solo a los JS no CSS)\n},\n  server: {\n    port: 8080,\n    hot: true\n  }\n}\n")),(0,o.kt)("h2",{id:"tarea-4---bootstrap-bootswatch-y-sass"},"Tarea 4 - Bootstrap, Bootswatch y SASS"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Instalamos bootstrap, bootswatch y sass ",(0,o.kt)("inlineCode",{parentName:"li"},"npm i bootstrap bootswatch @popperjs/core")," ",(0,o.kt)("inlineCode",{parentName:"li"},"npm i sass -D")),(0,o.kt)("li",{parentName:"ul"},"Creamos la carpeta scss y dentro creamos el archivo styles.scss "),(0,o.kt)("li",{parentName:"ul"},"Modificamos el archivo vite.config.js para que se procese sass a\xf1adiendo la siguiente linea:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"alias: {\n      '~bootstrap': path.resolve(__dirname, 'node_modules/bootstrap'),\n      '~bootswatch': path.resolve(__dirname, 'node_modules/bootswatch')\n    }\n")),(0,o.kt)("p",null,"El archivo vite.config.js quedar\xeda as\xed:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="vite.config.js"',title:'"vite.config.js"'},"import path from 'path'\n\nexport default {\n  root: path.resolve(__dirname, 'src'), // Carpeta donde alojamos el archivo main.js\n  resolve: {\n    alias: {\n      '~bootstrap': path.resolve(__dirname, 'node_modules/bootstrap'),\n      '~bootswatch': path.resolve(__dirname, 'node_modules/bootswatch'),\n    }\n  },\n  build: {\n    rollupOptions: {\n        /*\n            Opciones de configuraci\xf3n de Rollup externas, ser\xe1n mergeadas con la configuracion\n            interna de Rollup de Vite.\n        */\n        input: {\n            main: path.resolve(__dirname, 'src/index.html'), // Indicamos las p\xe1ginas que debe analizar\n        },\n        output: {\n            dir: path.resolve(__dirname, 'dist'), //Donde se va a crear el build de nuestra aplicacion\n            format: 'es', //Formato de ES modules\n        },\n    },\n    outDir: path.resolve(__dirname, 'dist'),\n    minify: false, //( Si no se quiere minificar el build) https://vitejs.dev/config/#build-minify (aplica solo a los JS no CSS)\n},\n  server: {\n    port: 8080,\n    hot: true\n  }\n}\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"En el archivo styles.scss cargamos bootstrap")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="styles.scss"',title:'"styles.scss"'},'// Import all of Bootstrap\'s CSS\n@import "~bootswatch/dist/superhero/variables";\n@import "~bootstrap/scss/bootstrap";\n@import "~bootswatch/dist/superhero/bootswatch";\n\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Finalmente a\xf1adimos la libreria bootstrap en el archivo main.js")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="main.js"',title:'"main.js"'},"// Import our custom CSS\nimport './scss/styles.scss'\n\n// Import all of Bootstrap's JS\nimport * as bootstrap from 'bootstrap'\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Ejecutamos nuestro proyecto para verificar que todo est\xe1 ok mediante ",(0,o.kt)("inlineCode",{parentName:"li"},"npm run dev"))),(0,o.kt)("h2",{id:"tarea-5-repositorio-despliegue-en-github-pages"},"Tarea 5 Repositorio despliegue en GitHub Pages"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Continuamos configurando el archivo vite.config.js para que al generar las p\xe1ginas minificadas en la carpeta dist, las urls comiencen con ",(0,o.kt)("inlineCode",{parentName:"li"},"./"),". Para ello a\xf1adimos el c\xf3digo: ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"base: './'\n")),(0,o.kt)("p",null,"Nuestro archivo vite.config.js quedar\xeda as\xed:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="vite.config.js"',title:'"vite.config.js"'},"import path from 'path'\n\nexport default {\n  root: path.resolve(__dirname, 'src'), // Carpeta donde alojamos el archivo main.js\n  base: './',\n  resolve: {\n    alias: {\n      '~bootstrap': path.resolve(__dirname, 'node_modules/bootstrap'),\n      '~bootswatch': path.resolve(__dirname, 'node_modules/bootswatch'),\n    }\n  },\n  build: {\n    rollupOptions: {\n        /*\n            Opciones de configuraci\xf3n de Rollup externas, ser\xe1n mergeadas con la configuracion\n            interna de Rollup de Vite.\n        */\n        input: {\n            main: path.resolve(__dirname, 'src/index.html'), // Indicamos las p\xe1ginas que debe analizar\n        },\n        output: {\n            dir: path.resolve(__dirname, 'dist'), //Donde se va a crear el build de nuestra aplicacion\n            format: 'es', //Formato de ES modules\n        },\n    },\n    outDir: path.resolve(__dirname, 'dist'),\n    minify: false, //( Si no se quiere minificar el build) https://vitejs.dev/config/#build-minify (aplica solo a los JS no CSS)\n},\n  server: {\n    port: 8080,\n    hot: true\n  }\n}\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Verificamos que se genera la carpeta ",(0,o.kt)("strong",{parentName:"li"},"dist")," con los archivos minificados mediante ",(0,o.kt)("inlineCode",{parentName:"li"},"npm run build")),(0,o.kt)("li",{parentName:"ul"},"Comprobamos que los archivos generados se muestran correctamente en el navegador (podemos utilizar el plugin ",(0,o.kt)("inlineCode",{parentName:"li"},"virtual server")," de vscode)"),(0,o.kt)("li",{parentName:"ul"},"Creamos un repositorio de git para el proyecto y lo sincronizamos con github (para ello utilizamos las herramientas de vscode)"),(0,o.kt)("li",{parentName:"ul"},"Instalamos gh-pages con ",(0,o.kt)("inlineCode",{parentName:"li"},"npm i gh-pages -D")),(0,o.kt)("li",{parentName:"ul"},"Ahora creamos, en el package.json, el script ",(0,o.kt)("strong",{parentName:"li"},"deploy")," necesario para poder ejecturar el deploy a gh pages.\nTambien hemos a\xf1adido la propiedad ",(0,o.kt)("inlineCode",{parentName:"li"},"--emptyOutDir")," a script ",(0,o.kt)("strong",{parentName:"li"},"build")," para que la sobreescritura se realice correctamente\nEl archivo quedar\xeda as\xed: ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n  "name": "trabajos_alumnos",\n  "private": true,\n  "version": "0.0.0",\n  "type": "module",\n  "scripts": {\n    "dev": "vite",\n    "build": "vite build --emptyOutDir",\n    "preview": "vite preview",\n    "deploy": "gh-pages -d dist"\n  },\n  "devDependencies": {\n    "gh-pages": "^5.0.0",\n    "sass": "^1.58.3",\n    "vite": "^4.1.0"\n  },\n  "dependencies": {\n    "@popperjs/core": "^2.11.6",\n    "bootstrap": "^5.2.3"\n  }\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Ahora ya podemos ejecutar ",(0,o.kt)("inlineCode",{parentName:"li"},"npm run build")," para contruir nuestra carpeta ",(0,o.kt)("strong",{parentName:"li"},"dist")," y a continuaci\xf3n ",(0,o.kt)("inlineCode",{parentName:"li"},"npm run deploy")," para que se cree la rama gh-pages y se publique."),(0,o.kt)("li",{parentName:"ul"},"Finalmente, vamos a la secci\xf3n ",(0,o.kt)("em",{parentName:"li"},"Pages")," del repositorio para comprobar que url se ha asignado para el despliegue y verificamos que efectivamente tenemos nuestro proyecto en la web. (A veces tarda unos minutos en actualizarse en GitHub, ten paciencia...)")))}d.isMDXComponent=!0}}]);