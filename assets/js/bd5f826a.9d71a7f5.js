"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8511],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>b});var o=t(7294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?s(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,o,n=function(e,a){if(null==e)return{};var t,o,n={},s=Object.keys(e);for(o=0;o<s.length;o++)t=s[o],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)t=s[o],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=o.createContext({}),c=function(e){var a=o.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},d=function(e){var a=c(e.components);return o.createElement(l.Provider,{value:a},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return o.createElement(o.Fragment,{},a)}},m=o.forwardRef((function(e,a){var t=e.components,n=e.mdxType,s=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(t),m=n,b=p["".concat(l,".").concat(m)]||p[m]||u[m]||s;return t?o.createElement(b,r(r({ref:a},d),{},{components:t})):o.createElement(b,r({ref:a},d))}));function b(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var s=t.length,r=new Array(s);r[0]=m;var i={};for(var l in a)hasOwnProperty.call(a,l)&&(i[l]=a[l]);i.originalType=e,i[p]="string"==typeof e?e:n,r[1]=i;for(var c=2;c<s;c++)r[c]=t[c];return o.createElement.apply(null,r)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2143:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var o=t(7462),n=(t(7294),t(3905));const s={title:"Vista proyectos"},r=void 0,i={unversionedId:"Version 1.0/SPRINT 3 - SPA/Dando funcionalidad a las vistas/Vista proyectos",id:"Version 1.0/SPRINT 3 - SPA/Dando funcionalidad a las vistas/Vista proyectos",title:"Vista proyectos",description:"Esta vista nos muestra una tabla con los datos de los proyectos que han creado los diferentes desarrolladores.",source:"@site/docs/03-Version 1.0/SPRINT 3 - SPA/06-Dando funcionalidad a las vistas/02-Vista proyectos.md",sourceDirName:"03-Version 1.0/SPRINT 3 - SPA/06-Dando funcionalidad a las vistas",slug:"/Version 1.0/SPRINT 3 - SPA/Dando funcionalidad a las vistas/Vista proyectos",permalink:"/vanillaPill/docs/Version 1.0/SPRINT 3 - SPA/Dando funcionalidad a las vistas/Vista proyectos",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/03-Version 1.0/SPRINT 3 - SPA/06-Dando funcionalidad a las vistas/02-Vista proyectos.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Vista proyectos"},sidebar:"tutorialSidebar",previous:{title:"Gesti\xf3n de sesiones (login y logout)",permalink:"/vanillaPill/docs/Version 1.0/SPRINT 3 - SPA/Dando funcionalidad a las vistas/Sesiones"},next:{title:"Vista admin",permalink:"/vanillaPill/docs/Version 1.0/SPRINT 3 - SPA/Dando funcionalidad a las vistas/Vista admin"}},l={},c=[{value:"\xbfQu\xe9 vamos a hacer?",id:"qu\xe9-vamos-a-hacer",level:2},{value:"Emulando datos de la consulta a la base de datos",id:"emulando-datos-de-la-consulta-a-la-base-de-datos",level:2},{value:"Generando los datos desde script de la vista",id:"generando-los-datos-desde-script-de-la-vista",level:2},{value:"Funci\xf3n pintaTabla()",id:"funci\xf3n-pintatabla",level:3},{value:"Funci\xf3n pintaTarjetas()",id:"funci\xf3n-pintatarjetas",level:3},{value:"Bot\xf3n para nuevo proyecto",id:"bot\xf3n-para-nuevo-proyecto",level:4},{value:"Botones para permutar entre vista tabla y vista tarjetas",id:"botones-para-permutar-entre-vista-tabla-y-vista-tarjetas",level:2},{value:"Implementando el buscador",id:"implementando-el-buscador",level:2},{value:"Borrando los datos del buscador",id:"borrando-los-datos-del-buscador",level:3},{value:"Gesti\xf3n de las pesta\xf1as &#39;Todos los proyectos&#39; / &#39;Mis proyectos&#39;",id:"gesti\xf3n-de-las-pesta\xf1as-todos-los-proyectos--mis-proyectos",level:2},{value:"Botones para editar, borrar y visualizar proyecto un proyecto",id:"botones-para-editar-borrar-y-visualizar-proyecto-un-proyecto",level:2},{value:"C\xf3digo final completo",id:"c\xf3digo-final-completo",level:2}],d={toc:c},p="wrapper";function u(e){let{components:a,...s}=e;return(0,n.kt)(p,(0,o.Z)({},d,s,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Esta vista nos ",(0,n.kt)("strong",{parentName:"p"},"muestra una tabla con los datos de los proyecto"),"s que han creado los diferentes desarrolladores. "),(0,n.kt)("p",null,"Por el momento, ",(0,n.kt)("strong",{parentName:"p"},"solo se muestra la tabla html"),", tal y como la hemos creado en el prototipo html. "),(0,n.kt)("h2",{id:"qu\xe9-vamos-a-hacer"},"\xbfQu\xe9 vamos a hacer?"),(0,n.kt)("p",null,"Para poner un poco de orden necesitamos preguntarnos: \xbfqu\xe9 funcionalidades debo implementar en esta vista?. Vamos a hacer una lista:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Generar la tabla a partir de datos obtenidos de la base de datos (o, en nuestro caso, simulando la consulta con un array de datos en formato json)"),(0,n.kt)("li",{parentName:"ol"},"Generar las tarjetas de la misma manera"),(0,n.kt)("li",{parentName:"ol"},"Dar funcionalidad al boton de 'subir proyecto' y de paso, mostrarlo o ocultarlo dependiendo del rol de usuario logueado."),(0,n.kt)("li",{parentName:"ol"},"Dar funcionalidad a los botones que permutan entre las vistas de tabla y de tarjetas cambiandoles el aspecto"),(0,n.kt)("li",{parentName:"ol"},"Dar funcionalidad al buscador (que genere nuevo array de datos filtrados dependiendo de la busqueda) y al bot\xf3n de borrar datos del mismo."),(0,n.kt)("li",{parentName:"ol"},"Dar funcionalidad a los botones que permutan entre la vista 'Todos los proyetos' y 'Mis proyectos'"),(0,n.kt)("li",{parentName:"ol"},"Dar funcionalidad a los botones de editar, borrar y mostrar detalle de cada proyecto")),(0,n.kt)("p",null,"Seguro que luego caemos en alguna funcionalidad que se nos ha pasado. \xa1Comenzamos!"),(0,n.kt)("h2",{id:"emulando-datos-de-la-consulta-a-la-base-de-datos"},"Emulando datos de la consulta a la base de datos"),(0,n.kt)("p",null,"Vamos a crear un array de datos que emulen una consulta a los proyectos almacenados en la base de datos."),(0,n.kt)("p",null,"Para eso necesitamos conocer el nombre de los campos de las tablas, por lo que vamos a consultar de nuevo el ",(0,n.kt)("strong",{parentName:"p"},"diagrama de clases")," que dise\xf1\xf3 nuestro '",(0,n.kt)("strong",{parentName:"p"},"yo-backend"),"''. El resultado podr\xeda ser algo as\xed:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"const proyectos = [\n  {\n    id,\n    created_at,\n    user_id,\n    nombre,\n    descripcion,\n    imagen,\n    enlace,\n    repositorio,\n    estado,\n    nombre_usuario,\n    apellidos_usuario\n\n  }\n\n]\n")),(0,n.kt)("p",null,"Y el array completo con datos inventados (gracias chatGPT \ud83d\ude00) usando los user_id de nuestra base de datos quedar\xeda as\xed:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="datosPrueba.js"',title:'"datosPrueba.js"'},"// Datos de prueba con perfiles inventados\nexport const perfiles = [\n  {\n    ...\n  }\n\n// Datos de prueba con proyectos inventados a partir de los usuarios (perfiles) anteriores \nexport const proyectos = [\n  {\n    id: 1,\n    created_at: '2023-08-29T10:00:00Z',\n    user_id: '36f66b5e-aa59-4f96-b6a8-3c890d6a452c',\n    nombre: 'Salto Espacial',\n    descripcion: 'Juego de plataforma espacial con saltos emocionantes',\n    imagen: 'imagen1.jpg',\n    enlace: 'https://salto-espacial.com',\n    repositorio: 'https://github.com/usuario/salto-espacial',\n    estado: 'En desarrollo',\n    nombre_usuario: 'Carmen',\n    apellidos_usuario: 'Maura'\n  },\n  {\n    id: 2,\n    created_at: '2023-08-28T15:30:00Z',\n    user_id: 'a3df05b0-91e7-4f68-a067-841fcf5de9f0',\n    nombre: 'Carrera Loca',\n    descripcion: 'Juego de carreras con obst\xe1culos y power-ups',\n    imagen: 'imagen2.jpg',\n    enlace: 'https://carrera-loca.com',\n    repositorio: 'https://github.com/usuario/carrera-loca',\n    estado: 'En desarrollo',\n    nombre_usuario: 'Antonio',\n    apellidos_usuario: 'Resines'\n  },\n  {\n    id: 3,\n    created_at: '2023-08-27T09:45:00Z',\n    user_id: 'd67e3b1c-875f-437f-bd2a-9ff50b72083d',\n    nombre: 'Aventuras en la Selva',\n    descripcion: 'Explora la selva en busca de tesoros y desaf\xedos',\n    imagen: 'imagen3.jpg',\n    enlace: 'https://aventuras-en-la-selva.com',\n    repositorio: 'https://github.com/usuario/aventuras-en-la-selva',\n    estado: 'En desarrollo',\n    nombre_usuario: 'Maribel',\n    apellidos_usuario: 'Verd\xfa'\n  },\n  {\n    id: 4,\n    created_at: '2023-08-26T11:20:00Z',\n    user_id: '36f66b5e-aa59-4f96-b6a8-3c890d6a452c',\n    nombre: 'Rompecabezas Divertido',\n    descripcion: 'Resuelve rompecabezas desafiantes con im\xe1genes divertidas',\n    imagen: 'imagen4.jpg',\n    enlace: 'https://rompecabezas-divertido.com',\n    repositorio: 'https://github.com/usuario/rompecabezas-divertido',\n    estado: 'En desarrollo',\n    nombre_usuario: 'CArmen',\n    apellidos_usuario: 'Maura'\n  },\n  {\n    id: 5,\n    created_at: '2023-08-25T14:15:00Z',\n    user_id: 'a3df05b0-91e7-4f68-a067-841fcf5de9f0',\n    nombre: 'Defensor Espacial',\n    descripcion: 'Protege la galaxia de invasores alien\xedgenas en este juego arcade',\n    imagen: 'imagen5.jpg',\n    enlace: 'https://defensor-espacial.com',\n    repositorio: 'https://github.com/usuario/defensor-espacial',\n    estado: 'En desarrollo',\n    nombre_usuario: 'Antonio',\n    apellidos_usuario: 'Resines'\n  }\n]\n\n")),(0,n.kt)("h2",{id:"generando-los-datos-desde-script-de-la-vista"},"Generando los datos desde script de la vista"),(0,n.kt)("p",null,"Vamos ahora a la vista ",(0,n.kt)("inlineCode",{parentName:"p"},"proyectos.js"),". Necesitamos crear un par de funciones, ",(0,n.kt)("strong",{parentName:"p"},"pintaTabla()")," y ",(0,n.kt)("strong",{parentName:"p"},"pintaTarjetas()"),". Estas funciones se encargar\xe1n de inyectar en la vista el resultado de recorrer el array anterior generando una fila ",(0,n.kt)("inlineCode",{parentName:"p"},"<tr></tr>"),"(en el caso de la tabla) o ",(0,n.kt)("inlineCode",{parentName:"p"},"card")," (en el caso de las tarjetas) por cada proyecto. "),(0,n.kt)("p",null,"De momento vamos a hacer que, en ambas vistas, se muestren los botones de editar y borrar proyecto. Estos enlaces tendr\xe1n una clase (",(0,n.kt)("strong",{parentName:"p"},"botonEditar")," y ",(0,n.kt)("strong",{parentName:"p"},"botonBorrar"),") para poder detectar su pulsaci\xf3n, y adem\xe1s, utilizando ",(0,n.kt)("strong",{parentName:"p"},"dataset"),", le a\xf1adiremos el ",(0,n.kt)("strong",{parentName:"p"},"id del proyecto"),". De esta manera, cuando hagamos clic en el bot\xf3n podremos extraer el id y llamar a la ",(0,n.kt)("strong",{parentName:"p"},"funci\xf3n de edici\xf3n")," o ",(0,n.kt)("strong",{parentName:"p"},"borrardo")," de ese proyecto."),(0,n.kt)("p",null,"M\xe1s adelante, haremos que estos botones se muestren u oculten, dependiendo de si el rol del usuario logueado es ",(0,n.kt)("em",{parentName:"p"},"desarrollador")," o ",(0,n.kt)("em",{parentName:"p"},"registrado"),", y de si el proyecto es de su creaci\xf3n"),(0,n.kt)("p",null,"Esta ser\xeda la funci\xf3n pintaTabla():"),(0,n.kt)("h3",{id:"funci\xf3n-pintatabla"},"Funci\xf3n pintaTabla()"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="script de proyectos.js"',title:'"script',de:!0,'proyectos.js"':!0},'// Funci\xf3n para pintar tabla a partir de array\n    const pintaTabla = (proyectos) => {\n      let tbodyProyectos = \'\'\n      // Para cada proyecto del array \'proyectos\'\n      proyectos.forEach(proyecto => {\n      // sumamos un tr con los datos del proyecto\n        tbodyProyectos += `\n      <tr>\n        <td>\n          <div class="containerImagen">\n            <img \n              width="200px" \n              src=${proyecto.imagen || \'images/imagenVacia.png\'} \n              alt="imagen proyecto" />\n          </div>\n        </td>\n        <td>${proyecto.nombre}</td>\n        <td>${proyecto.descripcion}</td>\n        <td><a href="${proyecto.enlace}"><i class="bi bi-link fs-4"></i></a></td>\n        <td><a href="${proyecto.repositorio}"><i class="bi bi-folder-symlink fs-4"></i></a></td>\n        <td>${proyecto.nombre_usuario} ${proyecto.apellidos_usuario}</td>\n        <td>${proyecto.created_at}</td>\n        <td>${proyecto.estado}</td>\n        <td>\n          <a\n          data-user_id = ${proyecto.user_id}\n          class="d-none d-sm-inline btn btn-sm btn-outline-primary bi bi-pencil"\n          ></a>\n        </td>\n        <td>\n          <a\n            data-user_id = ${proyecto.user_id}\n            class="d-none d-sm-inline btn btn-sm btn-outline-danger bi bi-trash3"\n          ></a>\n        </td>\n      </tr>\n            \n      `\n      })\n      // inyectamos el resultado en el tbody\n      document.querySelector(\'#tbodyProyectos\').innerHTML = tbodyProyectos\n    }\n    \n    // Ejecutamos la funci\xf3n\n    pintaTabla(proyectos)\n')),(0,n.kt)("p",null,"\xa1Mira que chulo!"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"tabla proyectos",src:t(8005).Z,width:"1292",height:"806"})),(0,n.kt)("h3",{id:"funci\xf3n-pintatarjetas"},"Funci\xf3n pintaTarjetas()"),(0,n.kt)("p",null,"Para las tarjetas haremos lo mismo:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'  // ####################################################################\n  // *** FUNCI\xd3N PARA PINTAR TABLA A PARTIR DE ARRAY datos ***\n  // ####################################################################\n  const pintaTarjetas = (proyectos) => {\n  let tarjetasProyectos = \'\'\n  // Para cada proyecto del array \'proyectos\'\n  proyectos.forEach(proyecto => {\n  // sumamos un tr con los datos del proyecto\n    tarjetasProyectos += // html\n  `\n  \x3c!-- tarjeta  --\x3e\n  <div class="col-12 col-lg-6">\n    <div class="card mb-3">\n      <div class="row g-0">\n        <div\n          class="col-4"\n          style="\n            background-image: url(${proyecto.imagen || \'images/imagenVacia.png\'});\n            background-position: center;\n            background-size: cover;\n          "\n        ></div>\n        <div class="col-8">\n          <div class="card-body">\n            <h5 class="card-title">${proyecto.nombre}</h5>\n            <p class="card-text">\n              ${proyecto.descripcion}\n            </p>\n            <p class="small m-0 text-end text-italic">Autor: ${proyecto.nombre_usuario} ${proyecto.apellidos_usuario}</p>\n            <p class="small text-end text-italic">Fecha: ${proyecto.created_at}</p>\n\n            <a class="btn btn-sm btn-outline-primary" href="${proyecto.enlace}"><i class="bi bi-link"></i></a>\n            <a class="btn btn-sm btn-outline-primary" href="${proyecto.repositorio}"><i class="bi bi-folder-symlink"></i></a>\n            <a class="btn btn-sm btn-success" href="#">${proyecto.estado}</a>\n            <a\n              data-user_id = ${proyecto.user_id}\n              class="d-none d-sm-inline btn btn-sm btn-outline-primary bi bi-pencil"\n            ></a>\n            <a\n              data-user_id = ${proyecto.user_id}\n              class="d-none d-sm-inline btn btn-sm btn-outline-danger bi bi-trash3"\n            ></a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>  \n  `\n  })\n  \n  document.querySelector(\'#tabTarjetas\').innerHTML = tarjetasProyectos\n}\n\n// ####################################################################\n// Funci\xf3n para pintar tarjetas\n// ####################################################################\n\npintaTarjetas(proyectos)  \n')),(0,n.kt)("p",null,"Y quedar\xe1 as\xed... \xa1\xa1\xa1Esto va cogiendo forma!!! \ud83d\ude04"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"tabla proyectos",src:t(1441).Z,width:"1057",height:"744"})),(0,n.kt)("h4",{id:"bot\xf3n-para-nuevo-proyecto"},"Bot\xf3n para nuevo proyecto"),(0,n.kt)("p",null,"Para el bot\xf3n 'Subir Proyecto' es muy f\xe1cil. Sustituye el bot\xf3n por una etiqueta 'a' que apunte a la vista ",(0,n.kt)("inlineCode",{parentName:"p"},"proyectoNuevo.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="proyectosVista.js"',title:'"proyectosVista.js"'},'<a href="#/proyectoNuevo" class="btn btn-primary w-100 router-link">Subir proyecto</a>\n')),(0,n.kt)("p",null,"Y ahora vamos a mostrarlo o ocultarlo, dependiendo del rol del usuario que tenga la sesi\xf3n abierta (solo debe mostrarse para el rol desarrollador)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="proyectosVista.js"',title:'"proyectosVista.js"'},"\n    // ####################################################################\n    // Mostrar/ocultar bot\xf3n 'subir proyecto'\n    // ####################################################################\n\n    // Capturamos los datos del usuario logueado\n    const usuario = ls.getUsuario()\n    // Ocultamos el bot\xf3n de subir proyecto si el rol es registrado\n    if (usuario.rol === 'registrado') {\n      document.querySelector('#botonSubirProyecto').classList.add('disabled')\n    }\n")),(0,n.kt)("h2",{id:"botones-para-permutar-entre-vista-tabla-y-vista-tarjetas"},"Botones para permutar entre vista tabla y vista tarjetas"),(0,n.kt)("p",null,"Para programar la funcionanlidad de los botones que nos permiten permutar entre la visualizaci\xf3n en formato tabla o tarjetas, a\xf1adimos una clase para identificarlos: '",(0,n.kt)("em",{parentName:"p"},"vistaTabla"),"' y '",(0,n.kt)("em",{parentName:"p"},"vistaTarjetas"),"'"),(0,n.kt)("admonition",{title:"Nota",type:"note"},(0,n.kt)("p",{parentName:"admonition"},"He eliminado la etiqueta ",(0,n.kt)("inlineCode",{parentName:"p"},"<i></i>")," insertando las clases del icono en el propio bot\xf3n para facilitar la detecci\xf3n y manipulaci\xf3n del mismo")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="proyectosVista.js"',title:'"proyectosVista.js"'},'<button class="btn btn-secondary me-2 bi bi-grid-3x3-gap vistaTabla">\n</button>\n<button class="btn btn-secondary me-2 bi bi-list vistaTarjetas">\n</button>\n')),(0,n.kt)("p",null,"Ahora creamos la l\xf3gica para detectar su pulsaci\xf3n"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="proyectosVista.js"',title:'"proyectosVista.js"'},"// Cambio entre vista de tablas y vista de tarjetas\n    document.querySelector('.vistaTabla').addEventListener('click', (boton) => {\n      console.log('vistaTabla');\n    })\n\n    document.querySelector('.vistaTarjetas').addEventListener('click', (boton) => {\n      console.log('vistaTarjetas');\n    })\n")),(0,n.kt)("p",null,"Y cambiamos la visualizaci\xf3n de cada uno de los tabs (mediante las clases ",(0,n.kt)("em",{parentName:"p"},"d-block")," y ",(0,n.kt)("em",{parentName:"p"},"d-none")," de bootstrap) en funci\xf3n del bot\xf3n que hemos pulsado. Tambi\xe9n vamos a ",(0,n.kt)("strong",{parentName:"p"},"modificar el aspecto de los botones (su color)")," mediante la suma o extracci\xf3n de la clase ",(0,n.kt)("em",{parentName:"p"},"btn-success")," o ",(0,n.kt)("em",{parentName:"p"},"btn-secondary")," de bootstrap."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="proyectosVista.js"',title:'"proyectosVista.js"'},"    // ####################################################################\n    // *** SELECCI\xd3N DE VISTA EN FORMATO TABLA O TARJETAS ***\n    // ####################################################################\n\n    // Selecci\xf3n vista tabla\n    document.querySelector('.vistaTabla').addEventListener('click', (boton) => {\n      // Lineas originales del html para los tabs:\n      // <div class=\"col-12 d-none d-xl-block\" style=\"overflow-x: auto\">\n      // <div class=\"d-xl-none row\">\n\n      // Pinta el boton de verde\n      boton.target.classList.add('btn-success')\n\n      // Pinta el otro bot\xf3n de gris y elimina el verde\n      const botonTarjeta = document.querySelector('.vistaTarjetas')\n      botonTarjeta.classList.remove('btn-success')\n      botonTarjeta.classList.add('btn-secondary')\n\n      // Muestra y oculta los tabs\n      document.querySelector('#tabTabla').setAttribute('class', 'col-12 d-block')\n      document.querySelector('#tabTarjetas').setAttribute('class', 'd-none')\n    })\n\n    // Selecci\xf3n vista tarjetas\n    document.querySelector('.vistaTarjetas').addEventListener('click', (boton) => {\n      console.log('vistaTarjetas')\n\n      // Pinta el boton de verde\n      boton.target.classList.add('btn-success')\n\n      // Pinta el otro bot\xf3n de gris y elimina el verde\n      const botonTabla = document.querySelector('.vistaTabla')\n      botonTabla.classList.remove('btn-success')\n      botonTabla.classList.add('btn-secondary')\n\n      // Muestra y oculta los tabs\n      document.querySelector('#tabTabla').setAttribute('class', 'd-none')\n      document.querySelector('#tabTarjetas').setAttribute('class', 'row')\n    })\n  \n")),(0,n.kt)("h2",{id:"implementando-el-buscador"},"Implementando el buscador"),(0,n.kt)("p",null,"Vamos a programar un c\xf3digo que cree un buscador que se encargar\xe1 de verificar cada campo de cada proyecto en el array en busca del texto ingresado en el input de b\xfasqueda. Los proyectos que coinciden con el texto de b\xfasqueda en al menos uno de sus campos se filtran y se almacenan en un nuevo array que, de momento, mostraremos por consola."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="proyectosVista.js"',title:'"proyectosVista.js"'},"    // ####################################################################\n    // *** FILTRO PARA BUSCADOR ***\n    // ####################################################################\n\n    // Capturamos el input de b\xfasqueda\n    const inputBusqueda = document.getElementById('inputBusqueda')\n\n    // Agregamos un evento de escucha para el evento de entrada en el input de b\xfasqueda\n    inputBusqueda.addEventListener('input', () => {\n      // Capturamos el texto de b\xfasqueda del input, convi\xe9rtelo a min\xfasculas y elimina espacios en blanco al principio y al final\n      const textoBusqueda = inputBusqueda.value.toLowerCase().trim()\n\n      // Filtramos los proyectos que coinciden con el texto de b\xfasqueda en cualquier campo\n      const proyectosFiltrados = datos.filter(proyecto => {\n        // Itera sobre las propiedades (campos) de cada proyecto\n        for (const key in proyecto) {\n          // Obtenemos el valor del campo actual\n          const valorCampo = proyecto[key]\n          // Verificamos si el valor del campo es una cadena y si contiene el texto de b\xfasqueda\n          if (typeof valorCampo === 'string' && valorCampo.toLowerCase().includes(textoBusqueda)) {\n            // Si hay coincidencia, devuelve true para incluir el proyecto en la lista filtrada\n            return true\n          }\n        }\n        // Si no se encontr\xf3 coincidencia en ning\xfan campo, devuelve false para excluir el proyecto\n        return false\n      })\n      // Volvemos a pintar los datos con los proyectos filtrados por el buscador\n      pintaTabla(proyectosFiltrados)\n      pintaTarjetas(proyectosFiltrados)\n    })\n")),(0,n.kt)("p",null,"Primero ",(0,n.kt)("strong",{parentName:"p"},"obtenemos una referencia al elemento de input")," de b\xfasqueda utilizando ",(0,n.kt)("inlineCode",{parentName:"p"},'document.getElementById("inputBusqueda")'),"."),(0,n.kt)("p",null,"A\xf1adimos un ",(0,n.kt)("strong",{parentName:"p"},"evento de escucha al input")," de b\xfasqueda usando addEventListener. El evento que estamos escuchando es el evento input, que se activa cuando el contenido del input cambia."),(0,n.kt)("p",null,"Dentro del controlador del evento input,",(0,n.kt)("strong",{parentName:"p"}," obtenemos el valor del input")," y realizamos algunas transformaciones para preparar el texto para la b\xfasqueda. Lo ",(0,n.kt)("strong",{parentName:"p"},"convertimos a min\xfasculas")," con ",(0,n.kt)("inlineCode",{parentName:"p"},"toLowerCase()")," para hacer la b\xfasqueda insensible a may\xfasculas y min\xfasculas, y luego ",(0,n.kt)("strong",{parentName:"p"},"eliminamos espacios en blanco")," al principio y al final con ",(0,n.kt)("inlineCode",{parentName:"p"},"trim()"),"."),(0,n.kt)("p",null,"Ahora, viene la parte clave del c\xf3digo. Utilizamos el m\xe9todo ",(0,n.kt)("strong",{parentName:"p"},"filter")," en el array proyectos. Este m\xe9todo crea un nuevo array con todos los elementos que cumplan con la condici\xf3n definida."),(0,n.kt)("p",null,"Para cada proyecto en el array, utilizamos un bucle ",(0,n.kt)("strong",{parentName:"p"},"for...in")," para iterar sobre las propiedades (campos) de cada objeto."),(0,n.kt)("p",null,"En cada iteraci\xf3n, obtenemos el valor del campo actual usando ",(0,n.kt)("strong",{parentName:"p"},"proyecto","[key]"),", donde key es el nombre de la propiedad actual."),(0,n.kt)("p",null,"Luego, verificamos si el valor del campo ",(0,n.kt)("strong",{parentName:"p"},"es una cadena de texto")," utilizando ",(0,n.kt)("inlineCode",{parentName:"p"},'typeof valorCampo === "string"'),". Si es una cadena, aplicamos ",(0,n.kt)("inlineCode",{parentName:"p"},"toLowerCase()")," al valor y utilizamos ",(0,n.kt)("inlineCode",{parentName:"p"},"includes(textoBusqueda)")," para verificar si el texto de b\xfasqueda est\xe1 presente en el campo."),(0,n.kt)("p",null,"Si el texto de b\xfasqueda se encuentra en el campo, devolvemos true en el bloque if, lo que significa que ese proyecto debe ser incluido en el array de proyectos filtrados."),(0,n.kt)("p",null,"Si no se encuentra coincidencia en el campo actual, continuamos iterando sobre los campos."),(0,n.kt)("p",null,"Si no se encontr\xf3 ninguna coincidencia en ning\xfan campo, se devuelve false fuera del bucle for...in, lo que significa que ese proyecto no cumple con el criterio de b\xfasqueda."),(0,n.kt)("p",null,"Finalmente, el resultado del m\xe9todo filter es un ",(0,n.kt)("strong",{parentName:"p"},"array proyectosFiltrados")," que contiene solo los proyectos que cumplen con el criterio de b\xfasqueda."),(0,n.kt)("p",null,"Observa como va ",(0,n.kt)("strong",{parentName:"p"},"mostrando por consola")," el array con ",(0,n.kt)("strong",{parentName:"p"},"tantos elementos como coincidencias")," encuentra:"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"filtro",src:t(1046).Z,width:"946",height:"625"})),(0,n.kt)("h3",{id:"borrando-los-datos-del-buscador"},"Borrando los datos del buscador"),(0,n.kt)("p",null,"Para borrar los datos del buscador cuando pulsamos el bot\xf3n de la cruz podemos hacer lo siguiente:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="proyectosVista.js"',title:'"proyectosVista.js"'},"    // ####################################################################\n    // Borrar datos del input del buscador al hacer click en 'x'\n    // ####################################################################\n\n    document.querySelector('#borrarBuscador').addEventListener('click', () => {\n      // Borramos contenido del buscador\n      inputBusqueda.value = ''\n      // Actualizamos array con todos los proyectos\n      // const proyectosFiltrados = datos\n      // Actualizamos los datos en el panel central\n      pintaTabla(datos)\n      pintaTarjetas(datos)\n    })\n")),(0,n.kt)("h2",{id:"gesti\xf3n-de-las-pesta\xf1as-todos-los-proyectos--mis-proyectos"},"Gesti\xf3n de las pesta\xf1as 'Todos los proyectos' / 'Mis proyectos'"),(0,n.kt)("p",null,"Para gestionar qu\xe9 pesta\xf1a debe mostrarse (la pesta\xf1a 'Todos los proyectos' o la pesta\xf1a 'Mis proyectos'), necesitamos una variable global ",(0,n.kt)("inlineCode",{parentName:"p"},"misProyectos")," que por defecto ser\xe1 false, es decir, la vista por defecto ser\xe1 de 'Todos los proyectos'."),(0,n.kt)("p",null,"El c\xf3digo para gestionar la visualizaci\xf3n de las pesta\xf1as podr\xeda ser algo as\xed: "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="proyectosVista.js"',title:'"proyectosVista.js"'},"    // ####################################################################\n    // Vista 'Todos los proyectos' / 'Mis proyectos'\n    // ####################################################################\n\n    // Definimos que por defecto se muestran 'mis proyectos'\n    let misProyectos = false\n\n    // *** Detectamos si se cambia de proyectos a mis proyectos al hacer click en las pesta\xf1as ***\n    document.querySelector('.nav-tabs').addEventListener('click', (event) => {\n      // Si click en 'Mis proyectos' cambiamos pesta\xf1a activa\n      if (event.target.classList.contains('fichaMisProyectos')) {\n        document.querySelector('.fichaMisProyectos').classList.add('active')\n        document.querySelector('.fichaProyectos').classList.remove('active')\n        misProyectos = true\n      } else {\n        // Si click en 'Todos los proyectos' cambiamos pesta\xf1a activa\n        document.querySelector('.fichaProyectos').classList.add('active')\n        document.querySelector('.fichaMisProyectos').classList.remove('active')\n        misProyectos = false\n      }\n      // Actualizamos los datos en el panel central\n      pintaTabla(datos)\n      pintaTarjetas(datos)\n    })\n")),(0,n.kt)("p",null,"Ahora ",(0,n.kt)("strong",{parentName:"p"},"vamos a actualizar las funciones ",(0,n.kt)("inlineCode",{parentName:"strong"},"pintaTabla(datos)")," y ",(0,n.kt)("inlineCode",{parentName:"strong"},"pintaTarjetas(datos)"))," (que inyectan la tabla y las tarjetas a partir de los datos del array de datos de prueba), ",(0,n.kt)("strong",{parentName:"p"},"a\xf1adiendo un filtro")," que, si tenemos la variable 'misProyectos' como ",(0,n.kt)("inlineCode",{parentName:"p"},"true"),", filtre todos los proyectos por su ",(0,n.kt)("strong",{parentName:"p"},"user_id"),". Es decir, que cree ",(0,n.kt)("strong",{parentName:"p"},"un nuevo array donde solo se muestren los proyectos donde el user_id del proyecto coincide con el user_id del usuario logueado"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="proyectosVista.js"',title:'"proyectosVista.js"'},"    // ####################################################################\n    // *** SELECCI\xd3N DE VISTA EN FORMATO TABLA O TARJETAS ***\n    // ####################################################################\n    const pintaTabla = (proyectosFiltrados) => {\n      // Si tenemos seleccionada la opci\xf3n 'mis proyectos' filtramos los proyectos por user_id\n      if (misProyectos) {\n        proyectosFiltrados = datos.filter((proyecto) => proyecto.user_id === usuario.user_id)\n      }\n\n      let tbodyProyectos = ''\n      // Iteramos para cada proyecto del array 'proyectos'\n      proyectosFiltrados.forEach(proyecto => {\n       ...\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="proyectosVista.js"',title:'"proyectosVista.js"'},"\n    // ####################################################################\n    // *** FILTRO PARA BUSCADOR ***\n    // ####################################################################\n\n    const pintaTarjetas = (proyectosFiltrados) => {\n      // Si tenemos seleccionada la opci\xf3n 'mis proyectos' filtramos los proyectos por user_id\n      if (misProyectos) {\n        proyectosFiltrados = datos.filter((proyecto) => proyecto.user_id === usuario.user_id)\n        console.log(proyectos)\n      }\n      let tarjetasProyectos = ''\n      // Iteramos para cada proyecto del array 'proyectosFiltrados'\n      proyectosFiltrados.forEach(proyecto => {\n        ...\n      })\n      \n")),(0,n.kt)("p",null,"\xa1Esto ya deber\xeda estar funcionando de maravilla!"),(0,n.kt)("h2",{id:"botones-para-editar-borrar-y-visualizar-proyecto-un-proyecto"},"Botones para editar, borrar y visualizar proyecto un proyecto"),(0,n.kt)("p",null,"\xa1Ya queda menos! Ahora tenemos que ",(0,n.kt)("strong",{parentName:"p"},"detectar cuando pulsamos los botones de editar y borrar")," para ",(0,n.kt)("strong",{parentName:"p"},"extraer el id del proyecto")," que llevan grabado en el ",(0,n.kt)("strong",{parentName:"p"},"dataset")," y actuar en consecuencia: abriendo la vista de editar (a la que enviaremos el id como par\xe1metro) o borrando el proyecto de la base de datos (esto, de momento, lo simularemos con una console.log)."),(0,n.kt)("p",null,"Tambi\xe9n detectaremos cuando se pulsa la imagen del proyecto (o alguna celda 'td' si es la vista tabla) para mostrar la vista detalle del proyecto en cuesti\xf3n."),(0,n.kt)("p",null,"Vamos a dividir el c\xf3digo en tres bloques:"),(0,n.kt)("p",null,"Bloque 1: Botones de Edici\xf3n, Borrado y Visualizaci\xf3n de Detalle de Proyectos\nEste bloque est\xe1 encabezado por un comentario y se encarga de gestionar los clics en botones de edici\xf3n y borrado, as\xed como en elementos de visualizaci\xf3n de detalle de proyectos. Utiliza la delegaci\xf3n de eventos para manejar los clics en elementos dentro de la etiqueta ",(0,n.kt)("inlineCode",{parentName:"p"},"<main>")," del DOM."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"document.querySelector('main').addEventListener('click', (event) => {\n  // ...\n})\n")),(0,n.kt)("p",null,"Bloque 2: Manejo de Botones de Edici\xf3n y Borrado\nDentro del primer bloque, este sub-bloque se encarga de detectar si se ha hecho clic en botones de edici\xf3n o borrado. Dependiendo del bot\xf3n clicado, realiza acciones como mostrar un mensaje de alerta de borrado o redireccionar a una p\xe1gina de edici\xf3n."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"if (event.target.classList.contains('botonAdmin')) {\n  // ...\n  if (boton.classList.contains('botonEditar')) {\n    // Si se trata de editar\n    // ...\n  } else if (boton.classList.contains('botonBorrar')) {\n    // Si se trata de borrar\n    // ...\n  }\n}\n")),(0,n.kt)("p",null,"Dentro del primer bloque, este sub-bloque maneja la visualizaci\xf3n de detalles de proyectos cuando se hace clic en una celda de una tabla (",(0,n.kt)("inlineCode",{parentName:"p"},"<td>"),") o en un elemento con la clase verDetalle. Al hacer clic, se captura el ID del proyecto y se redirecciona a la p\xe1gina de detalle correspondiente."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"// Visualizar detalle del proyecto si clic sobre tr de vista tabla\nif (event.target.tagName === 'TD') {\n  // ...\n}\n\n// Si hacemos clic sobre la imagen de tabla o de vista tarjetas\nif (event.target.classList.contains('verDetalle')) {\n  // ...\n}\n")),(0,n.kt)("p",null,"Este ser\xeda el c\xf3digo:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="vistaProyectos.js"',title:'"vistaProyectos.js"'},"    // ####################################################################\n    // BOTONES DE EDICI\xd3N, BORRADO y VISUALIZACI\xd3N DE DETALLE DE PROYECTOS\n    // ####################################################################\n\n    // Detectamos clic sobre main (Usamos delegaci\xf3n de eventos porque la tabla y tarjetas se actualizan constantemente en el DOM)\n    document.querySelector('main').addEventListener('click', (event) => {\n      let id = ''\n      // Si hemos pulsado sobre uno de los botones DE EDICI\xd3N O BORRADO\n      if (event.target.classList.contains('botonAdmin')) {\n        const boton = event.target\n        // Capturamos el id de su dataset\n        const id = boton.dataset.id\n        if (boton.classList.contains('botonEditar')) {\n          // Si se trata de editar\n          console.log('Editar proyecto ' + id)\n\n          // Cargamos la vista para editar proyecto pasandole como par\xe1metro el id\n          window.location = `#/proyectoEditar/${id}`\n        } else if (boton.classList.contains('botonBorrar')) {\n          // Si se trata de borrar\n          alert('Borrar proyecto ' + id)\n\n          // *** AQU\xcd VA LA FUNCI\xd3N QUE BORRA DE LA BASE DE DATOS EL PROYECTO CORRESPONDIENTE AL ID ***\n        }\n      }\n      // Visualizar detalle del proyecto si click sobre tr de vista tabla\n      if (event.target.tagName === 'TD') {\n        console.log('clic en td')\n        id = event.target.parentNode.dataset.id\n        window.location = `#/proyectoDetalle/${id}`\n      }\n      // Si hacemos clic sobre la imagen de tabla o de vista tarjetas\n      if (event.target.classList.contains('verDetalle')) {\n        id = event.target.dataset.id\n        window.location = `#/proyectoDetalle/${id}`\n      }\n    })\n")),(0,n.kt)("admonition",{title:"Ten en cuenta que...",type:"note"},(0,n.kt)("p",{parentName:"admonition"},"Es posible que haya que a\xf1adir algunos ids o clases extra en el template para detectar los eventos.")),(0,n.kt)("h2",{id:"c\xf3digo-final-completo"},"C\xf3digo final completo"),(0,n.kt)("p",null,"Este ser\xeda el c\xf3digo completo de vistaProyecto.js:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="vistaProyecto.js"',title:'"vistaProyecto.js"'},'import { proyectos } from \'../bd/datosPrueba\'\nimport { ls } from \'../componentes/funciones\'\n\nexport default {\n  template: // html\n  `\n  <div class="container">\n  <h1 class="mt-5">Proyectos</h1>\n  <div class="row mt-5">\n    <div class="col-12">\n      \x3c!--nav-tabs--\x3e\n      <ul class="nav nav-tabs">\n        \x3c!--Etiqueta Todos los proyectos--\x3e\n        <li class="nav-item w-50">\n          <button \n            class="selectorFicha fichaProyectos nav-link w-100 active"\n          >\n            Todos los proyectos\n          </button>\n        </li>\n        \x3c!--Etiqueta Mis proyectos--\x3e\n        <li id="pestanyaMisProyectos" class="nav-item w-50">\n          <button \n            class="selectorFicha fichaMisProyectos nav-link w-100"\n          >\n            Mis proyectos\n          </button>\n        </li>\n      </ul>\n    </div>\n  </div>\n  <div class="border border-top-0 p-3">\n    <div class="row">\n      <div class="col-12 col-sm-4 mb-3">\n      \x3c!-- Boton para subir proyectos --\x3e\n        <a id="botonSubirProyecto" href="#/proyectoNuevo" class="btn btn-primary w-100 router-link">Subir proyecto</a>\n      </div>\n      <div class="d-flex col-12 col-sm-8 mb-3">\n        \x3c!-- Botones para alternar entre vista de tabla o de tarjetas --\x3e\n        <button class="vistaTabla btn btn-secondary me-2 bi bi-list">\n        </button>\n        <button class="vistaTarjetas btn btn-secondary me-2 bi bi-grid-3x3-gap ">\n        </button>\n        \x3c!-- Buscador --\x3e\n        <div class="input-group flex-nowrap">\n          <span class="input-group-text" id="addon-wrapping"\n            ><i class="bi bi-search"></i\n          ></span>\n          <input\n            id="inputBusqueda"\n            type="text"\n            class="form-control"\n            placeholder="Buscador"\n            aria-label="Username"\n            aria-describedby="addon-wrapping"\n          />\n          <span class="input-group-text" id="addon-wrapping"\n            ><i id="borrarBuscador" class="bi bi-x"></i\n          ></span>\n        </div>\n      </div>\n    </div>\n    \n    \x3c!-- Tabla de proyectos --\x3e\n    <div id="tabTabla" class="col-12 d-none d-xl-block" style="overflow-x: auto">\n      <table\n        class="table table-hover align-middle mt-3"\n        style="min-width: 1000px"\n      >\n        <thead>\n          <tr>\n            <th></th>\n            <th>\n              Nombre <span><i class="bi bi-caret-down"></i></span>\n            </th>\n            <th>\n              Descripci\xf3n <span><i class="bi bi-caret-up"></i></span>\n            </th>\n            <th>\n              Enlace <span><i class="bi bi-caret-up"></i></span>\n            </th>\n            <th>Repositorio</th>\n            <th>\n              Autor <span><i class="bi bi-caret-up"></i></span>\n            </th>\n            <th>\n              Fecha <span><i class="bi bi-caret-up"></i></span>\n            </th>\n            <th>\n              Estado <span><i class="bi bi-caret-up"></i></span>\n            </th>\n            <th></th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody id="tbodyProyectos">\n          \x3c!-- Aqui van los datos generados por la l\xf3gica --\x3e\n          <p>No tienes proyectos</p>\n        </tbody>\n      </table>\n    </div>\n\n    \x3c!-- Panel de tarjetas --\x3e\n    <div id="tabTarjetas" class="d-xl-none row">\n      \x3c!-- Aqui van los datos generados por la l\xf3gica --\x3e\n      <p>No tienes proyectos</p>\n    </div>\n  </div>\n</div>\n  `,\n  script: () => {\n    // **** AQUI DEBEMOS CAPTURAR LOS PROYECTOS DE LA BASE DE DATOS ****\n\n    // Capturamos proyectos y guardamos en variable para poder ser filtrada\n    const datos = proyectos\n\n    // ####################################################################\n    // *** FUNCI\xd3N PARA PINTAR TABLA A PARTIR DE ARRAY datos ***\n    // ####################################################################\n\n    const pintaTabla = (proyectosFiltrados) => {\n      // Si tenemos seleccionada la opci\xf3n \'mis proyectos\' filtramos los proyectos por user_id\n      if (misProyectos) {\n        proyectosFiltrados = datos.filter((proyecto) => proyecto.user_id === usuario.user_id)\n      }\n\n      let tbodyProyectos = \'\'\n      // Iteramos para cada proyecto del array \'proyectos\'\n      proyectosFiltrados.forEach(proyecto => {\n        // Generamos botones dependiendo de si el proyecto ha sido creado por el usuario logueado\n        let botones = \'\'\n        if (usuario.user_id === proyecto.user_id) {\n          botones =\n          `\n          <td><a\n            data-id = ${proyecto.id}\n            class="botonAdmin botonEditar d-none d-sm-inline btn btn-sm btn-outline-primary bi bi-pencil"\n          ></a></td>\n          <td><a\n            data-id = ${proyecto.id}\n            class="botonAdmin botonBorrar d-none d-sm-inline btn btn-sm btn-outline-danger bi bi-trash3"\n          ></a></td>\n          `\n        }\n        // sumamos un tr con los datos del proyecto de la iteraci\xf3n\n        tbodyProyectos += // html\n        `\n        <tr data-id="${proyecto.id}" class="verDetalle">\n          <td>\n            <div class="containerImagen">\n              <img \n                class="verDetalle"\n                data-id="${proyecto.id}"\n                width="200px" \n                src=${proyecto.imagen || \'images/imagenVacia.png\'} \n                alt="imagen proyecto" />\n            </div>\n          </td>\n          <td>${proyecto.nombre}</td>\n          <td>${proyecto.descripcion}</td>\n          <td><a href="${proyecto.enlace}" target="_blank"><i class="bi bi-link fs-4"></i></a></td>\n          <td><a href="${proyecto.repositorio}" target="_blank"><i class="bi bi-folder-symlink fs-4"></i></a></td>\n          <td>${proyecto.nombre_usuario} ${proyecto.apellidos_usuario}</td>\n          <td>${proyecto.created_at}</td>\n          <td>${proyecto.estado}</td>\n          <td>\n            \x3c!-- Botones de edici\xf3n y borrado --\x3e\n            ${botones}\n          </td>\n        </tr>   \n        `\n      })\n      // inyectamos el resultado en el tbody\n      document.querySelector(\'#tbodyProyectos\').innerHTML = tbodyProyectos\n    }\n\n    // ####################################################################\n    // Funci\xf3n para pintar tarjetas\n    // ####################################################################\n\n    const pintaTarjetas = (proyectosFiltrados) => {\n      // Si tenemos seleccionada la opci\xf3n \'mis proyectos\' filtramos los proyectos por user_id\n      if (misProyectos) {\n        proyectosFiltrados = datos.filter((proyecto) => proyecto.user_id === usuario.user_id)\n        console.log(proyectos)\n      }\n      let tarjetasProyectos = \'\'\n      // Iteramos para cada proyecto del array \'proyectosFiltrados\'\n      proyectosFiltrados.forEach(proyecto => {\n        // Generamos botones dependiendo de si el proyecto ha sido creado por el usuario logueado\n        let botones = \'\'\n        if (usuario.user_id === proyecto.user_id) {\n          botones =\n          `\n          <a\n            data-id = ${proyecto.id}\n            class="botonAdmin botonEditar d-none d-sm-inline btn btn-sm btn-outline-primary bi bi-pencil"\n          ></a>\n          <a\n            data-id = ${proyecto.id}\n            class="botonAdmin botonBorrar d-none d-sm-inline btn btn-sm btn-outline-danger bi bi-trash3"\n          ></a>\n          `\n        }\n        // sumamos un tr con los datos del proyecto\n        tarjetasProyectos += // html\n        `\n        \x3c!-- tarjeta  --\x3e\n        <div class="col-12 col-lg-6">\n          <div class="card mb-3">\n            <div class="row g-0">\n              <div\n                class="col-4 verDetalle"\n                data-id="${proyecto.id}"\n                style="\n                  background-image: url(${proyecto.imagen || \'images/imagenVacia.png\'});\n                  background-position: center;\n                  background-size: cover;\n                "\n              ></div>\n              <div class="col-8">\n                <div class="card-body">\n                  <h5 class="card-title">${proyecto.nombre}</h5>\n                  <p class="card-text">\n                    ${proyecto.descripcion}\n                  </p>\n                  <p class="small m-0 text-end text-italic">Autor: ${proyecto.nombre_usuario} ${proyecto.apellidos_usuario}</p>\n                  <p class="small text-end text-italic">Fecha: ${proyecto.created_at}</p>\n                  <a class="btn btn-sm btn-outline-primary" href="${proyecto.enlace}" target="_blank"><i class="bi bi-link"></i></a>\n                  <a class="btn btn-sm btn-outline-primary" href="${proyecto.repositorio}" target="_blank"><i class="bi bi-folder-symlink"></i></a>\n                  <button class="btn btn-sm btn-success">${proyecto.estado}</button>\n                  \x3c!-- Botones editar y borrar --\x3e\n                  ${botones}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>  \n        `\n      })\n      // inyectamos el resultado en tbody\n      document.querySelector(\'#tabTarjetas\').innerHTML = tarjetasProyectos\n    }\n\n    // *** Pintamos los datos en tabla y tarjetas ***\n    pintaTabla(datos)\n    pintaTarjetas(datos)\n\n    // ####################################################################\n    // *** SELECCI\xd3N DE VISTA EN FORMATO TABLA O TARJETAS ***\n    // ####################################################################\n\n    // Selecci\xf3n vista tabla\n    document.querySelector(\'.vistaTabla\').addEventListener(\'click\', (boton) => {\n      // Lineas originales del html para los tabs:\n      // <div class="col-12 d-none d-xl-block" style="overflow-x: auto">\n      // <div class="d-xl-none row">\n\n      // Pinta el boton de verde\n      boton.target.classList.add(\'btn-success\')\n\n      // Pinta el otro bot\xf3n de gris y elimina el verde\n      const botonTarjeta = document.querySelector(\'.vistaTarjetas\')\n      botonTarjeta.classList.remove(\'btn-success\')\n      botonTarjeta.classList.add(\'btn-secondary\')\n\n      // Muestra y oculta los tabs\n      document.querySelector(\'#tabTabla\').setAttribute(\'class\', \'col-12 d-block\')\n      document.querySelector(\'#tabTarjetas\').setAttribute(\'class\', \'d-none\')\n    })\n\n    // Selecci\xf3n vista tarjetas\n    document.querySelector(\'.vistaTarjetas\').addEventListener(\'click\', (boton) => {\n      console.log(\'vistaTarjetas\')\n\n      // Pinta el boton de verde\n      boton.target.classList.add(\'btn-success\')\n\n      // Pinta el otro bot\xf3n de gris y elimina el verde\n      const botonTabla = document.querySelector(\'.vistaTabla\')\n      botonTabla.classList.remove(\'btn-success\')\n      botonTabla.classList.add(\'btn-secondary\')\n\n      // Muestra y oculta los tabs\n      document.querySelector(\'#tabTabla\').setAttribute(\'class\', \'d-none\')\n      document.querySelector(\'#tabTarjetas\').setAttribute(\'class\', \'row\')\n    })\n\n    // ####################################################################\n    // *** FILTRO PARA BUSCADOR ***\n    // ####################################################################\n\n    // Capturamos el input de b\xfasqueda\n    const inputBusqueda = document.getElementById(\'inputBusqueda\')\n\n    // Agregamos un evento de escucha para el evento de entrada en el input de b\xfasqueda\n    inputBusqueda.addEventListener(\'input\', () => {\n      // Capturamos el texto de b\xfasqueda del input, convi\xe9rtelo a min\xfasculas y elimina espacios en blanco al principio y al final\n      const textoBusqueda = inputBusqueda.value.toLowerCase().trim()\n\n      // Filtramos los proyectos que coinciden con el texto de b\xfasqueda en cualquier campo\n      const proyectosFiltrados = datos.filter(proyecto => {\n        // Itera sobre las propiedades (campos) de cada proyecto\n        for (const key in proyecto) {\n          // Obtenemos el valor del campo actual\n          const valorCampo = proyecto[key]\n          // Verificamos si el valor del campo es una cadena y si contiene el texto de b\xfasqueda\n          if (typeof valorCampo === \'string\' && valorCampo.toLowerCase().includes(textoBusqueda)) {\n            // Si hay coincidencia, devuelve true para incluir el proyecto en la lista filtrada\n            return true\n          }\n        }\n        // Si no se encontr\xf3 coincidencia en ning\xfan campo, devuelve false para excluir el proyecto\n        return false\n      })\n      // Volvemos a pintar los datos con los proyectos filtrados por el buscador\n      pintaTabla(proyectosFiltrados)\n      pintaTarjetas(proyectosFiltrados)\n    })\n\n    // ####################################################################\n    // Borrar datos del input del buscador al hacer click en \'x\'\n    // ####################################################################\n\n    document.querySelector(\'#borrarBuscador\').addEventListener(\'click\', () => {\n      // Borramos contenido del buscador\n      inputBusqueda.value = \'\'\n      // Actualizamos array con todos los proyectos\n      // const proyectosFiltrados = datos\n      // Actualizamos los datos en el panel central\n      pintaTabla(datos)\n      pintaTarjetas(datos)\n    })\n\n    // ####################################################################\n    // Vista \'Todos los proyectos\' / \'Mis proyectos\'\n    // ####################################################################\n\n    // Definimos que por defecto se muestran \'mis proyectos\'\n    let misProyectos = false\n\n    // *** Detectamos si se cambia de proyectos a mis proyectos al hacer click en las pesta\xf1as ***\n    document.querySelector(\'.nav-tabs\').addEventListener(\'click\', (event) => {\n      // Si click en \'Mis proyectos\' cambiamos pesta\xf1a activa\n      if (event.target.classList.contains(\'fichaMisProyectos\')) {\n        document.querySelector(\'.fichaMisProyectos\').classList.add(\'active\')\n        document.querySelector(\'.fichaProyectos\').classList.remove(\'active\')\n        misProyectos = true\n      } else {\n        // Si click en \'Todos los proyectos\' cambiamos pesta\xf1a activa\n        document.querySelector(\'.fichaProyectos\').classList.add(\'active\')\n        document.querySelector(\'.fichaMisProyectos\').classList.remove(\'active\')\n        misProyectos = false\n      }\n      // Actualizamos los datos en el panel central\n      pintaTabla(datos)\n      pintaTarjetas(datos)\n    })\n\n    // ####################################################################\n    // BOTONES DE EDICI\xd3N, BORRADO y VISUALIZACI\xd3N DE DETALLE DE PROYECTOS\n    // ####################################################################\n\n    // Detectamos clic sobre main (Usamos delegaci\xf3n de eventos porque la tabla y tarjetas se actualizan constantemente en el DOM)\n    document.querySelector(\'main\').addEventListener(\'click\', (event) => {\n      let id = \'\'\n      // Si hemos pulsado sobre uno de los botones DE EDICI\xd3N O BORRADO\n      if (event.target.classList.contains(\'botonAdmin\')) {\n        const boton = event.target\n        // Capturamos el id de su dataset\n        const id = boton.dataset.id\n        if (boton.classList.contains(\'botonEditar\')) {\n          // Si se trata de editar\n          console.log(\'Editar proyecto \' + id)\n\n          // Cargamos la vista para editar proyecto pasandole como par\xe1metro el id\n          window.location = `#/proyectoEditar/${id}`\n        } else if (boton.classList.contains(\'botonBorrar\')) {\n          // Si se trata de borrar\n          alert(\'Borrar proyecto \' + id)\n\n          // *** AQU\xcd VA LA FUNCI\xd3N QUE BORRA DE LA BASE DE DATOS EL PROYECTO CORRESPONDIENTE AL ID ***\n        }\n      }\n      // Visualizar detalle del proyecto si click sobre tr de vista tabla\n      if (event.target.tagName === \'TD\') {\n        console.log(\'clic en td\')\n        id = event.target.parentNode.dataset.id\n        window.location = `#/proyectoDetalle/${id}`\n      }\n      // Si hacemos clic sobre la imagen de tabla o de vista tarjetas\n      if (event.target.classList.contains(\'verDetalle\')) {\n        id = event.target.dataset.id\n        window.location = `#/proyectoDetalle/${id}`\n      }\n    })\n\n    // ####################################################################\n    // Mostrar/ocultar bot\xf3n \'subir proyecto\'\n    // ####################################################################\n\n    // Capturamos los datos del usuario logueado\n    const usuario = ls.getUsuario()\n    // Ocultamos el bot\xf3n de subir proyecto si el rol es registrado\n    if (usuario.rol === \'registrado\') {\n      document.querySelector(\'#botonSubirProyecto\').classList.add(\'disabled\')\n    }\n  }\n}\n\n\n')))}u.isMDXComponent=!0},1046:(e,a,t)=>{t.d(a,{Z:()=>o});const o=t.p+"assets/images/filtro-36c29edf294cf81d1e32be5dd6503882.png"},8005:(e,a,t)=>{t.d(a,{Z:()=>o});const o=t.p+"assets/images/tabla-da2e0ee6dee1a3a7fdd1926b7b0b0721.png"},1441:(e,a,t)=>{t.d(a,{Z:()=>o});const o=t.p+"assets/images/tarjetas-3419ecf80ed074b7ef2147a2031405e1.png"}}]);