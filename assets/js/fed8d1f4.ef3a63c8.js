"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8667],{3905:(a,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>v});var t=n(7294);function o(a,e,n){return e in a?Object.defineProperty(a,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):a[e]=n,a}function r(a,e){var n=Object.keys(a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(a);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),n.push.apply(n,t)}return n}function s(a){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){o(a,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(n,e))}))}return a}function i(a,e){if(null==a)return{};var n,t,o=function(a,e){if(null==a)return{};var n,t,o={},r=Object.keys(a);for(t=0;t<r.length;t++)n=r[t],e.indexOf(n)>=0||(o[n]=a[n]);return o}(a,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(a);for(t=0;t<r.length;t++)n=r[t],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(a,n)&&(o[n]=a[n])}return o}var l=t.createContext({}),d=function(a){var e=t.useContext(l),n=e;return a&&(n="function"==typeof a?a(e):s(s({},e),a)),n},c=function(a){var e=d(a.components);return t.createElement(l.Provider,{value:e},a.children)},u="mdxType",m={inlineCode:"code",wrapper:function(a){var e=a.children;return t.createElement(t.Fragment,{},e)}},p=t.forwardRef((function(a,e){var n=a.components,o=a.mdxType,r=a.originalType,l=a.parentName,c=i(a,["components","mdxType","originalType","parentName"]),u=d(n),p=o,v=u["".concat(l,".").concat(p)]||u[p]||m[p]||r;return n?t.createElement(v,s(s({ref:e},c),{},{components:n})):t.createElement(v,s({ref:e},c))}));function v(a,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof a||o){var r=n.length,s=new Array(r);s[0]=p;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=a,i[u]="string"==typeof a?a:o,s[1]=i;for(var d=2;d<r;d++)s[d]=n[d];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},52:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var t=n(7462),o=(n(7294),n(3905));const r={title:"Vista admin"},s=void 0,i={unversionedId:"Version 1.0/SPRINT 3 - SPA/Dando funcionalidad a las vistas/Vista admin",id:"Version 1.0/SPRINT 3 - SPA/Dando funcionalidad a las vistas/Vista admin",title:"Vista admin",description:"Para la vista admin nos vamos a basar en la vista de proyectos ya que tiene una estructura muy parecida... Casi te dir\xeda que copiases proyectos.js y lo pegases en admin.js, eliminando lo que no no necesistas y modificando el resto.",source:"@site/docs/03-Version 1.0/SPRINT 3 - SPA/06-Dando funcionalidad a las vistas/03-Vista admin.md",sourceDirName:"03-Version 1.0/SPRINT 3 - SPA/06-Dando funcionalidad a las vistas",slug:"/Version 1.0/SPRINT 3 - SPA/Dando funcionalidad a las vistas/Vista admin",permalink:"/vanillaPill/docs/Version 1.0/SPRINT 3 - SPA/Dando funcionalidad a las vistas/Vista admin",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/03-Version 1.0/SPRINT 3 - SPA/06-Dando funcionalidad a las vistas/03-Vista admin.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Vista admin"},sidebar:"tutorialSidebar",previous:{title:"Vista proyectos",permalink:"/vanillaPill/docs/Version 1.0/SPRINT 3 - SPA/Dando funcionalidad a las vistas/Vista proyectos"},next:{title:"Componente EditarPerfil",permalink:"/vanillaPill/docs/Version 1.0/SPRINT 3 - SPA/Dando funcionalidad a las vistas/Componente EditarPerfil"}},l={},d=[{value:"Vamos con la inicializaci\xf3n y gesti\xf3n de los datos.",id:"vamos-con-la-inicializaci\xf3n-y-gesti\xf3n-de-los-datos",level:2},{value:"Funciones para Pintar Datos en Tablas",id:"funciones-para-pintar-datos-en-tablas",level:2},{value:"Filtro de B\xfasqueda",id:"filtro-de-b\xfasqueda",level:2},{value:"Funciones para Borrar usuario y Enviar datos modificados",id:"funciones-para-borrar-usuario-y-enviar-datos-modificados",level:2},{value:"Gesti\xf3n de Eventos para la tabla proyectos",id:"gesti\xf3n-de-eventos-para-la-tabla-proyectos",level:2},{value:"Gesti\xf3n de Eventos para la tabla usuarios",id:"gesti\xf3n-de-eventos-para-la-tabla-usuarios",level:2},{value:"Componente editarImagenPerfil",id:"componente-editarimagenperfil",level:2}],c={toc:d},u="wrapper";function m(a){let{components:e,...r}=a;return(0,o.kt)(u,(0,t.Z)({},c,r,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Para la vista admin nos vamos a basar en la vista de proyectos ya que tiene una estructura muy parecida... Casi te dir\xeda que copiases proyectos.js y lo pegases en admin.js, eliminando lo que no no necesistas y modificando el resto."),(0,o.kt)("p",null,"De todas formas vamos a escribir el c\xf3digo paso a paso:"),(0,o.kt)("p",null,"En primer lugar vamos a importar nuestra base de datos emulada y nuestra libreria ls para el acceso al localstorage:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="adminVista.js"',title:'"adminVista.js"'},"import { proyectos, perfiles } from '../bd/datosPrueba'\nimport { ls } from '../componentes/funciones'\n")),(0,o.kt)("h2",{id:"vamos-con-la-inicializaci\xf3n-y-gesti\xf3n-de-los-datos"},"Vamos con la inicializaci\xf3n y gesti\xf3n de los datos."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Primero vamos a capturar los datos de la base de datos que hemos emulado y crearemos una variable ",(0,o.kt)("inlineCode",{parentName:"li"},"selectUsuarios")," que inicializamos a true para definir que, por defecto, vamos a mostrar la pesta\xf1a de usuarios."),(0,o.kt)("li",{parentName:"ul"},"Luego vamos a detectar cuando pulsamos en las diferentes pesta\xf1as para mostrar el tab de proyectos o el de usuarios. Tambi\xe9n modificaremos el aspecto de las pesta\xf1as:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="adminVista.js"',title:'"adminVista.js"'},"// Capturamos los datos del usuario logueado\nconst usuario = ls.getUsuario()\n\n// **** AQUI DEBEMOS CAPTURAR LOS PROYECTOS DE LA BASE DE DATOS ****\n\n// Capturamos proyectos y guardamos en variable para poder ser filtrada\nconst datosProyectos = proyectos\nconst datosUsuarios = perfiles\n\n// Definimos que por defecto se muestran 'proyectos'\nlet selectUsuarios = true\n// *** Detectamos si se cambia de proyectos a usuarios al hacer click en las pesta\xf1as ***\ndocument.querySelector('.nav-tabs').addEventListener('click', (event) => {\n  if (event.target.classList.contains('fichaUsuarios')) {\n    // Si click en Usuarios cambiamos pesta\xf1a activa\n    document.querySelector('.fichaUsuarios').classList.add('active')\n    document.querySelector('.fichaProyectos').classList.remove('active')\n    selectUsuarios = true\n    console.log('tabusuarios')\n    document.querySelector('#tabUsuarios').classList.add('d-block')\n    document.querySelector('#tabUsuarios').classList.remove('d-none')\n    document.querySelector('#tabProyectos').classList.add('d-none')\n  } else {\n    // Si click en Proyectos cambiamos pesta\xf1a activa\n    document.querySelector('.fichaProyectos').classList.add('active')\n    document.querySelector('.fichaUsuarios').classList.remove('active')\n    selectUsuarios = false\n    console.log('tabProyectos')\n    document.querySelector('#tabProyectos').classList.add('d-block')\n    document.querySelector('#tabProyectos').classList.remove('d-none')\n    document.querySelector('#tabUsuarios').classList.add('d-none')\n  }\n  // Actualizamos los datos en el panel central\n  pintaProyectos(datosProyectos)\n  pintaUsuarios(datosUsuarios)\n})\n")),(0,o.kt)("h2",{id:"funciones-para-pintar-datos-en-tablas"},"Funciones para Pintar Datos en Tablas"),(0,o.kt)("p",null,"Esta funci\xf3n (pintaProyectos) se encarga de generar y mostrar la tabla de proyectos en la interfaz de usuario, igual que hac\xedamos en proyectos.js"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"La funci\xf3n recibe un array de proyectos filtrados como argumento (proyectosFiltrados)."),(0,o.kt)("li",{parentName:"ul"},"Se construye el HTML de la tabla de proyectos mediante concatenaci\xf3n de cadenas."),(0,o.kt)("li",{parentName:"ul"},"Para cada proyecto en proyectosFiltrados, se genera una fila de datos en la tabla."),(0,o.kt)("li",{parentName:"ul"},"Finalmente, el HTML resultante se inyecta en el elemento con el id tabProyectos.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="adminVista.js"',title:'"adminVista.js"'},"// *** FUNCI\xd3N PARA PINTAR TABLA PROYECTOS A PARTIR DE ARRAY datos ***\nconst pintaProyectos = (proyectosFiltrados) => {\n  let tablaProyectos = // html\n  `\n  \x3c!-- Tabla de proyectos --\x3e\n  <table\n    class=\"table table-hover align-middle mt-3\"\n    style=\"min-width: 1000px\"\n  >\n    <thead>\n      <tr>\n        \x3c!-- Encabezados de la tabla --\x3e\n      </tr>\n    </thead>\n    <tbody>\n  `\n  // Para cada proyecto en el array 'proyectosFiltrados'\n  proyectosFiltrados.forEach(proyecto => {\n    // Genera filas de datos de proyecto en la tabla\n  })\n  tablaProyectos += // html\n  `\n    </tbody>\n  </table>\n  `\n  // Inyecta el resultado en el contenedor con el id 'tabProyectos'\n  document.querySelector('#tabProyectos').innerHTML = tablaProyectos\n}\n")),(0,o.kt)("h2",{id:"filtro-de-b\xfasqueda"},"Filtro de B\xfasqueda"),(0,o.kt)("p",null,"Este bloque de c\xf3digo es identico al de proyectos.js:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="adminVista.js"',title:'"adminVista.js"'},"// *** FILTRO PARA BUSCADOR ***\n// Capturamos el input de b\xfasqueda\nconst inputBusqueda = document.getElementById('inputBusqueda')\n// Agregamos un evento de escucha para el evento de entrada en el input de b\xfasqueda\ninputBusqueda.addEventListener('input', () => {\n  // Capturamos el texto de b\xfasqueda del input, convi\xe9rtelo a min\xfasculas y elimina espacios en blanco al principio y al final\n  const textoBusqueda = inputBusqueda.value.toLowerCase().trim()\n  // Filtramos los proyectos que coinciden con el texto de b\xfasqueda en cualquier campo\n  let informacion = []\n  if (selectUsuarios) {\n    informacion = datosUsuarios\n  } else {\n    informacion = datosProyectos\n  }\n  const informacionFiltrada = informacion.filter(proyecto => {\n    // Itera sobre las propiedades (campos) de cada proyecto\n    for (const key in proyecto) {\n      // Obtenemos el valor del campo actual\n      const valorCampo = proyecto[key]\n      // Verificamos si el valor del campo es una cadena y si contiene el texto de b\xfasqueda\n      if (typeof valorCampo === 'string' && valorCampo.toLowerCase().includes(textoBusqueda)) {\n        // Si hay coincidencia, devuelve true para incluir el proyecto en la lista filtrada\n        return true\n      }\n    }\n    // Si no se encontr\xf3 coincidencia en ning\xfan campo, devuelve false para excluir el proyecto\n    return false\n  })\n  // Volvemos a pintar los datos con los proyectos o usuarios filtrados por el buscador\n  if (selectUsuarios) {\n    pintaUsuarios(informacionFiltrada)\n  } else {\n    pintaProyectos(informacionFiltrada)\n  }\n})\n// Borrar datos del input del buscador\ndocument.querySelector('#borrarBuscador').addEventListener('click', () => {\n  // Borramos contenido del buscador\n  document.getElementById('inputBusqueda').value = ''\n  // Actualizamos array con todos los proyectos\n  // const proyectosFiltrados = datos\n  // Actualizamos los datos en el panel central\n  pintaProyectos(datosProyectos)\n  pintaUsuarios(datosUsuarios)\n})\n")),(0,o.kt)("h2",{id:"funciones-para-borrar-usuario-y-enviar-datos-modificados"},"Funciones para Borrar usuario y Enviar datos modificados"),(0,o.kt)("p",null,"VAmos a programar la l\xf3gica para el env\xedo de datos si se ha hecho alguna modificaci\xf3n y la eliminaci\xf3n de usuarios."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Primero vamos a detectar cuando alguien escribe en uno de los campos de la tabla para mostrar informaci\xf3n de validaci\xf3n. Para ello vamos a agregamos un evento de escucha al formulario ('",(0,o.kt)("strong",{parentName:"li"},"change"),"') para comprobar si se ha validado correctamente. Si no, se muestra un mensaje de error."),(0,o.kt)("li",{parentName:"ul"},"La funci\xf3n enviaDatos se utiliza para recopilar datos de un formulario correspondiente a la edici\xf3n de usuarios y simular el env\xedo a una base de datos (a trav\xe9s de alertas y registros en la consola)."),(0,o.kt)("li",{parentName:"ul"},"La funci\xf3n borrarUsuario se utiliza para simular la eliminaci\xf3n de un usuario con un mensaje de alerta.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="adminVista.js"',title:'"adminVista.js"'},"// *** VALIDACION DE FORMULARIOS CON BOOTSTRAP ***\nformulario.addEventListener('change', (e) => {\n  // Comprobamos si el formulario no valida\n  if (!formulario.checkValidity()) {\n    console.log('No valida')\n    // Y a\xf1adimos la clase 'was-validate' para que se muestren los mensajes\n    formulario.classList.add('was-validated')\n  }\n})\n\n// Funci\xf3n para enviar datos a la base de datos\nfunction enviaDatos (id) {\n  // capturamos los datos del tr correspondiente al bot\xf3n pulsado\n  const proyectoEditado = {\n    imagen: document.querySelector('#urlImagen_' + id).value,\n    nombre: document.querySelector('#nombreUsuario_' + id).value,\n    apellidos: document.querySelector('#apellidosUsuario_' + id).value,\n    estado: document.querySelector('#estado_' + id).value,\n    email: document.querySelector('#email_' + id).value\n  }\n  alert(`Enviando a la base de datos el objeto con id = ${usuario.user_id}`)\n  console.log(`Enviando a la base de datos el objeto con id = ${usuario.user_id}`, proyectoEditado)\n}\n// Funci\xf3n para borrar registro de la base de datos\nfunction borrarUsuario (id) {\n  alert('Borrando usuario ' + id)\n}\n")),(0,o.kt)("h2",{id:"gesti\xf3n-de-eventos-para-la-tabla-proyectos"},"Gesti\xf3n de Eventos para la tabla proyectos"),(0,o.kt)("p",null,"Vamos con los eventos de esta vista de proyectos. "),(0,o.kt)("p",null,"Utilizamos de nuevo la t\xe9cnica de ",(0,o.kt)("strong",{parentName:"p"},"delegaci\xf3n de eventos")," (ya que estos datos se regeneran constantemente) para detectar clics en el elemento principal ('main') en lugar de asignar eventos a cada bot\xf3n individualmente."),(0,o.kt)("p",null,"Cuando se hace clic en un bot\xf3n con la clase '",(0,o.kt)("strong",{parentName:"p"},"botonAdmin"),"', se captura el bot\xf3n y se ",(0,o.kt)("strong",{parentName:"p"},"obtiene su ID desde el dataset.")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Si el bot\xf3n tambi\xe9n tiene la clase '",(0,o.kt)("strong",{parentName:"li"},"botonEditar"),"', se asume que se est\xe1 editando un proyecto y se realiza una acci\xf3n (como redirigir a la edici\xf3n del proyecto)."),(0,o.kt)("li",{parentName:"ul"},"Si el bot\xf3n tiene la clase '",(0,o.kt)("strong",{parentName:"li"},"botonBorrar"),"', se asume que se est\xe1 borrando un proyecto, aunque la acci\xf3n real no est\xe1 implementada en este c\xf3digo.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="adminVista.js"',title:'"adminVista.js"'},"// *** BOTONES DE EDICI\xd3N Y BORRADO DE PROYECTOS ***\n// Detectamos clic sobre main (Usamos delegaci\xf3n de eventos porque la tabla y tarjetas se actualizan constantemente en el DOM)\ndocument.querySelector('main').addEventListener('click', (event) => {\n  // Si hemos pulsado sobre uno de los botones\n  if (event.target.classList.contains('botonAdmin')) {\n    const boton = event.target\n    // Capturamos el id de su dataset\n    const id = boton.dataset.id\n    if (boton.classList.contains('botonEditar')) {\n      // Si se trata de editar\n      console.log('Editar proyecto ' + id)\n\n      // Cargamos la vista para editar proyecto pasando como par\xe1metro el id\n      window.location = `#/proyectoEditar/${id}`\n    }\n    if (boton.classList.contains('botonBorrar')) {\n      // Si se trata de borrar\n      console.log('Borrar proyecto ' + id)\n\n      // *** AQU\xcd VA LA FUNCI\xd3N QUE BORRA DE LA BASE DE DATOS EL PROYECTO CORRESPONDIENTE AL ID ***\n    }\n  }\n})\n")),(0,o.kt)("h2",{id:"gesti\xf3n-de-eventos-para-la-tabla-usuarios"},"Gesti\xf3n de Eventos para la tabla usuarios"),(0,o.kt)("p",null,"Para gestionar los eventos en esta tabla usaremos una vez m\xe1s la delegaci\xf3n de eventos, esta vez sobre el formulario que envuelve la tabla."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Si hacemos ",(0,o.kt)("strong",{parentName:"li"},"click en 'Actualizar'"),": En primer lugar vamos adaptar la l\xf3gica para la ",(0,o.kt)("strong",{parentName:"li"},"validaci\xf3n de los datos")," del formulario con bootstrap para mostrar mensajes si tratamos de enviar las modificaciones haciendo click sobre el bot\xf3n 'Actualizar'"),(0,o.kt)("li",{parentName:"ul"},"Si hacemos ",(0,o.kt)("strong",{parentName:"li"},"click en eliminar")," (bot\xf3n de la basura), capturaremos el bot\xf3n en cuesti\xf3n y, mediante ",(0,o.kt)("inlineCode",{parentName:"li"}," const tr = e.target.parentNode.parentNode")," capturaremos el ",(0,o.kt)("inlineCode",{parentName:"li"},"<tr></tr>")," que corresponde al usuario en cuesti\xf3n. De su dataset obtendremos el id de usuario para poder llamar a la funci\xf3n que borra el usuario. (Nosotros no actuaremos todav\xeda sobre la base de datos pero si que vamos a hacer ",(0,o.kt)("strong",{parentName:"li"},"desaparecer la fila")," con la clase '",(0,o.kt)("strong",{parentName:"li"},"d-none"),"')"),(0,o.kt)("li",{parentName:"ul"},"Si hacemos ",(0,o.kt)("strong",{parentName:"li"},"click en 'Editar la imagen'"),", cargaremos un ",(0,o.kt)("strong",{parentName:"li"},"componente nuevo")," (que tenemos que programar a\xfan), muy similar al de editar usuario, pero que permitir\xe1 cambiar a la vez que visualizamos, la imagen del perfil de ese usuario. A este componente le pasaremos, en su m\xe9todo script() los par\xe1metros necesarios para que el componente pueda cargar la informaci\xf3n y sepa a que usuario corresponde ",(0,o.kt)("inlineCode",{parentName:"li"},"editarImagenPerfil.script(urlAvatar, urlInputAvatar, id)"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="adminVista.js"',title:'"adminVista.js"'},"// *************** PARA EL TAB DE USUARIOS ********\n\n    // Capturamos el formulario para edici\xf3n de usuarios\n    const formulario = document.querySelector('#formAdminUsuarios')\n    // Gesti\xf3n de click sobre botones dentro del formulario\n    formulario.addEventListener('click', (e) => {\n      e.preventDefault()\n      e.stopPropagation()\n\n      // Si hacemos click sobre el botonActualizar\n      if (e.target.classList.contains('botonActualizar') && formulario.checkValidity()) {\n        const id = e.target.dataset.id\n        enviaDatos(id)\n      } else {\n        formulario.classList.add('was-validated')\n      }\n\n      // Si hacemos click sobre Borrar registro\n      if (e.target.classList.contains('botonEliminar')) {\n        const tr = e.target.parentNode.parentNode\n        // ocultar tr\n        tr.classList.add('d-none')\n        const id = e.target.dataset.id\n        borrarUsuario(id)\n      }\n\n      // Si hacemos click sobre Editar imagen avatar\n      if (e.target.classList.contains('botonEditarImagen')) {\n        // Capturamos datos para enviar al modal\n        const urlAvatar = e.target.dataset.urlavatar\n        const urlInputAvatar = e.target.dataset.urlinputavatar\n        const id = e.target.dataset.id\n        // Abrimos ventana de edici\xf3n de perfil (del componente editarImagenPerfil)\n        editarImagenPerfil.script(urlAvatar, urlInputAvatar, id)\n      }\n    })\n")),(0,o.kt)("h2",{id:"componente-editarimagenperfil"},"Componente editarImagenPerfil"),(0,o.kt)("p",null,"Y este ser\xeda el componente para editar la imagen del perfil:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="editarImagenPerfil.js"',title:'"editarImagenPerfil.js"'},'import adminVista from \'../vistas/adminVista\'\nexport const editarImagenPerfil = {\n  template: // html\n  `\n  \x3c!-- Ventana modaledici\xf3n perfil --\x3e\n  <div\n    class="modal fade"\n    id="modalEditarImagenPerfil"\n    tabindex="-1"\n    aria-labelledby="exampleModalLabel"\n    aria-hidden="true"\n  >\n    \x3c!-- Formulario de edici\xf3n de perfil --\x3e\n    <form novalidate action="">\n      <div class="modal-dialog">\n        <div class="modal-content">\n          <div class="modal-header">\n            <h1 class="modal-title fs-5" id="exampleModalLabel">\n              Edici\xf3n de perfil\n            </h1>\n            <button\n              type="button"\n              class="btn-close"\n              data-bs-dismiss="modal"\n              aria-label="Close"\n            ></button>\n          </div>\n          <div class="modal-body">\n            <div class="form border shadow-sm p-3">\n              <div class="m-1" style="max-width: 400px">\n                <div class="imgPerfil border shadow-sm p-3 mb-3">\n                  <div\n                    id="imagenUsuario"\n                    class="imagen mx-auto mb-1 rounded-circle"\n                    style="\n                      background-image: url(.images/avatar.svg);\n                      width: 200px;\n                      height: 200px;\n                      background-size: cover;\n                      background-position: center;\n                    "\n                  ></div>\n\n                  \x3c!-- Imagen de perfil --\x3e\n                  <label for="imagen" class="form-label mt-3">URL imagen:</label>\n                  <input\n                    id="urlImagenUsuario"\n                    type="url"\n                    class="form-control"\n                    value="http://imagenavatar.png"\n                  />\n                  <div class="invalid-feedback">La url no es correcta</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class="modal-footer">\n            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">\n              Cancelar\n            </button>\n            <button \n              id="botonActualizarImagen"\n              type="button" \n              class="btn btn-primary"\n            >\n              Guardar cambios\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n  `,\n  script: (urlAvatar, urlInputAvatar, user_id) => {\n    console.log(\'modal editar imagen perfil cargado:\', urlAvatar)\n    document.querySelector(\'#urlImagenUsuario\').value = urlAvatar\n    // Capturamos la url del input y actualizamos la imagen\n    const imagenUsuario = document.querySelector(\'#imagenUsuario\')\n    imagenUsuario.style.backgroundImage = `url(${urlAvatar})`\n\n    // modificaci\xf3n de imagen al cambiar input\n    document.querySelector(\'#urlImagenUsuario\').addEventListener(\'input\', () => {\n      urlAvatar = document.querySelector(\'#urlImagenUsuario\').value\n      imagenUsuario.style.backgroundImage = `url(${urlAvatar})`\n    })\n\n    // Boton enviar\n    document.querySelector(\'#botonActualizarImagen\').addEventListener(\'click\', () => {\n      document.querySelector(`#${urlInputAvatar}`).value = urlAvatar\n      \n      // ***** AQU\xcd HAY QUE ACTUALIZAR LA BASE DE DATOS CON LA IMAGEN\n      console.log(\'Actualizando base de datos: \'+user_id);\n      adminVista.script()\n    })\n  }\n}\n')),(0,o.kt)("p",null,"Nuestro componente para edici\xf3n de imagenes tendr\xeda esta pinta:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Modal imagen perfil",src:n(9979).Z,width:"1261",height:"692"})),(0,o.kt)("admonition",{title:"Commit",type:"danger"},(0,o.kt)("p",{parentName:"admonition"},"Y ya lo tenemos! Si te gust\xf3 no te olvides darle al like! Digo... hacer el commit correspondiente")))}m.isMDXComponent=!0},9979:(a,e,n)=>{n.d(e,{Z:()=>t});const t=n.p+"assets/images/modalimagenperfil-17747305ae0d15008fd3a3c9c4d202c4.png"}}]);