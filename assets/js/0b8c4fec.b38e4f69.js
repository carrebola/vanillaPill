"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7919],{3905:(e,a,n)=>{n.d(a,{Zo:()=>c,kt:()=>f});var r=n(7294);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,r,t=function(e,a){if(null==e)return{};var n,r,t={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var s=r.createContext({}),d=function(e){var a=r.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},c=function(e){var a=d(e.components);return r.createElement(s.Provider,{value:a},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},p=r.forwardRef((function(e,a){var n=e.components,t=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(n),p=t,f=u["".concat(s,".").concat(p)]||u[p]||m[p]||o;return n?r.createElement(f,i(i({ref:a},c),{},{components:n})):r.createElement(f,i({ref:a},c))}));function f(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l[u]="string"==typeof e?e:t,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3572:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=n(7462),t=(n(7294),n(3905));const o={Title:"Editar perfil"},i=void 0,l={unversionedId:"Version 1.0/SPRINT 3 - SPA/Dando funcionalidad a las vistas/Componente EditarPerfil",id:"Version 1.0/SPRINT 3 - SPA/Dando funcionalidad a las vistas/Componente EditarPerfil",title:"Componente EditarPerfil",description:"Para programar este componente lo que debemos hacer es capturar los datos del localstorage del usuario que tiene la sesi\xf3n abierta e inyectarlos dentro del propio template que, recordemos, es un formulario dentro de una venta modal.",source:"@site/docs/03-Version 1.0/SPRINT 3 - SPA/06-Dando funcionalidad a las vistas/04-Componente EditarPerfil.md",sourceDirName:"03-Version 1.0/SPRINT 3 - SPA/06-Dando funcionalidad a las vistas",slug:"/Version 1.0/SPRINT 3 - SPA/Dando funcionalidad a las vistas/Componente EditarPerfil",permalink:"/vanillaPill/docs/Version 1.0/SPRINT 3 - SPA/Dando funcionalidad a las vistas/Componente EditarPerfil",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/03-Version 1.0/SPRINT 3 - SPA/06-Dando funcionalidad a las vistas/04-Componente EditarPerfil.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{Title:"Editar perfil"},sidebar:"tutorialSidebar",previous:{title:"Vista admin",permalink:"/vanillaPill/docs/Version 1.0/SPRINT 3 - SPA/Dando funcionalidad a las vistas/Vista admin"},next:{title:"Vista para Nuevo proyecto, ver detalle y editar",permalink:"/vanillaPill/docs/Version 1.0/SPRINT 3 - SPA/Dando funcionalidad a las vistas/Nuevo proyecto, detalle y editar"}},s={},d=[],c={toc:d},u="wrapper";function m(e){let{components:a,...n}=e;return(0,t.kt)(u,(0,r.Z)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("p",null,"Para programar este componente lo que debemos hacer es capturar los datos del localstorage del usuario que tiene la sesi\xf3n abierta e inyectarlos dentro del propio template que, recordemos, es un formulario dentro de una venta modal."),(0,t.kt)("p",null,"Todo el c\xf3digo que usamos en la l\xf3gica pr\xe1cticamente es el mismo que hemos usado en las vistas anteriores."),(0,t.kt)("p",null,"Simplemente tenemos la validaci\xf3n de bootstrap y la funci\xf3n que captura los datos de los inputs y los envia, (todav\xeda de forma figurada) a la base de datos."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="editarPErfil.js"',title:'"editarPErfil.js"'},'import { ls } from \'./funciones\'\nexport const editarPerfil = {\n  template: // html\n  `\n  \x3c!-- Ventana modaledici\xf3n perfil --\x3e\n  <div\n    class="modal fade"\n    id="modalEditarPerfil"\n    tabindex="-1"\n    aria-labelledby="exampleModalLabel"\n    aria-hidden="true"\n  >\n    \x3c!-- Formulario de edici\xf3n de perfil --\x3e\n    <form novalidate id="formularioEditarPerfil" action="">\n      <div class="modal-dialog">\n        <div class="modal-content">\n          <div class="modal-header">\n            <h1 class="modal-title fs-5" id="exampleModalLabel">\n              Edici\xf3n de perfil\n            </h1>\n            <button\n              type="button"\n              class="btn-close"\n              data-bs-dismiss="modal"\n              aria-label="Close"\n            ></button>\n          </div>\n          <div class="modal-body">\n            <div class="form border shadow-sm p-3">\n              <div class="m-1" style="max-width: 400px">\n                <div class="imgPerfil border shadow-sm p-3 mb-3">\n                  <div\n                    class="imagen mx-auto mb-1 rounded-circle"\n                    style="\n                      background-image: url(${ls.getUsuario().avatar});\n                      width: 200px;\n                      height: 200px;\n                      background-size: cover;\n                      background-position: center;\n                    "\n                  ></div>\n\n                  \x3c!-- Imagen de perfil --\x3e\n                  <label for="imagen" class="form-label mt-3">URL imagen:</label>\n                  <input\n                    id="avatar"\n                    type="url"\n                    class="form-control"\n                    value="${ls.getUsuario().avatar}"\n                  />\n                  <div class="invalid-feedback">La url no es correcta</div>\n                </div>\n\n                <div class="">\n                  \x3c!-- Nombre --\x3e\n                  <label for="nombrePerfil" class="form-label">Nombre:</label>\n                  <input required id="nombrePerfil" type="text" class="form-control" value="${ls.getUsuario().nombre}" />\n                  <div class="invalid-feedback">El nombre es requerido</div>\n                  \x3c!-- Apellidos --\x3e\n                  <label for="apellidosPerfil" class="form-label">Apellidos:</label>\n                  <input id="apellidosPerfil" type="text" class="form-control" value = "${ls.getUsuario().apellidos}" />\n\n                  \x3c!-- Email --\x3e\n                  <label for="emailPerfil" class="form-label">Email:</label>\n                  <input required id="emailPerfil" type="email" class="form-control" value = "${ls.getUsuario().email}" />\n                  <div class="invalid-feedback">El formato no es correcto</div>\n\n                  \x3c!-- Contrase\xf1a --\x3e\n                  <label for="passPerfil" class="form-label mt-3">Nueva contrase\xf1a:</label>\n                  <input\n                    \n                    minlength="6"\n                    id="passPerfil"\n                    type="password"\n                    class="form-control"\n                  />\n                  <div class="invalid-feedback">\n                    La contrase\xf1a debe ser de 6 caracteres como m\xednimo\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class="modal-footer">\n            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">\n              Cancelar\n            </button>\n            <button id="enviarPerfilEditado" data-id = ${ls.getUsuario().user_id} type="submit" class="btn btn-primary">Guardar cambios</button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n  `,\n  script: () => {\n    console.log(\'script editar perfil cargado\')\n    // Validaci\xf3n bootstrap\n    // Capturamos el formulario en una variable\n    const formulario = document.querySelector(\'#formularioEditarPerfil\')\n    // Detectamos su evento submit (enviar)\n    formulario.addEventListener(\'submit\', (event) => {\n    // Comprobamos si el formulario no valida\n    // Detenemos el evento enviar (submit)\n      event.preventDefault()\n      event.stopPropagation()\n      if (!formulario.checkValidity()) {\n        // formulario no valida\n      } else {\n        //* ** ENVIAMOS DATOS A LA BASE DE DATOS */\n        enviaDatos()\n      }\n      // Y a\xf1adimos la clase \'was-validate\' para que se muestren los mensajes\n      formulario.classList.add(\'was-validated\')\n    })\n\n    // Funci\xf3n para enviar datos a la base de datos\n    function enviaDatos () {\n      const perfilEditado = {\n        avatar: document.querySelector(\'#avatar\').value,\n        nombre: document.querySelector(\'#nombrePerfil\').value,\n        apellidos: document.querySelector(\'#apellidosPerfil\').value,\n        email: document.querySelector(\'#emailPerfil\').value,\n        contrase\xf1a: document.querySelector(\'#passPerfil\').value\n\n      }\n      alert(`Enviando a la base de datos el objeto con id = ${ls.getUsuario().user_id}`)\n      console.log(`Enviando a la base de datos el objeto con user_id = ${ls.getUsuario().user_id}`, perfilEditado)\n    }\n  }\n}\n')))}m.isMDXComponent=!0}}]);