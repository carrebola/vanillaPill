"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[221],{3905:(e,t,o)=>{o.d(t,{Zo:()=>p,kt:()=>y});var r=o(7294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function n(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?n(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,r,a=function(e,t){if(null==e)return{};var o,r,a={},n=Object.keys(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var c=r.createContext({}),i=function(e){var t=r.useContext(c),o=t;return e&&(o="function"==typeof e?e(t):s(s({},t),e)),o},p=function(e){var t=i(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var o=e.components,a=e.mdxType,n=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=i(o),m=a,y=d["".concat(c,".").concat(m)]||d[m]||u[m]||n;return o?r.createElement(y,s(s({ref:t},p),{},{components:o})):r.createElement(y,s({ref:t},p))}));function y(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=o.length,s=new Array(n);s[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:a,s[1]=l;for(var i=2;i<n;i++)s[i]=o[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,o)}m.displayName="MDXCreateElement"},3551:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>n,metadata:()=>l,toc:()=>i});var r=o(7462),a=(o(7294),o(3905));const n={sidebar_position:180},s="Historia 16. CRUD Proyectos",l={unversionedId:"Version 1.0/Integraci\xf3n de Frontend Y Backend/h16",id:"Version 1.0/Integraci\xf3n de Frontend Y Backend/h16",title:"Historia 16. CRUD Proyectos",description:"Como usuario registrado quiero poder:",source:"@site/docs/03-Version 1.0/12-Integraci\xf3n de Frontend Y Backend/h16.md",sourceDirName:"03-Version 1.0/12-Integraci\xf3n de Frontend Y Backend",slug:"/Version 1.0/Integraci\xf3n de Frontend Y Backend/h16",permalink:"/vanillaPill/docs/Version 1.0/Integraci\xf3n de Frontend Y Backend/h16",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/03-Version 1.0/12-Integraci\xf3n de Frontend Y Backend/h16.md",tags:[],version:"current",sidebarPosition:180,frontMatter:{sidebar_position:180},sidebar:"tutorialSidebar",previous:{title:"Historia 15. Editar mi perfil",permalink:"/vanillaPill/docs/Version 1.0/Integraci\xf3n de Frontend Y Backend/h15"},next:{title:"h1",permalink:"/vanillaPill/docs/Versi\xf3n 2.0/h1"}},c={},i=[{value:"Crear nuevo proyecto",id:"crear-nuevo-proyecto",level:2},{value:"Ver lista de proyectos",id:"ver-lista-de-proyectos",level:2},{value:"Borrar un proyecto",id:"borrar-un-proyecto",level:2},{value:"Editar un proyecto",id:"editar-un-proyecto",level:2}],p={toc:i},d="wrapper";function u(e){let{components:t,...o}=e;return(0,a.kt)(d,(0,r.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"historia-16-crud-proyectos"},"Historia 16. CRUD Proyectos"),(0,a.kt)("p",null,"Como usuario registrado quiero poder: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"crear un proyecto nuevo"),(0,a.kt)("li",{parentName:"ul"},"borrar un proyecto"),(0,a.kt)("li",{parentName:"ul"},"ver una lista de todos los proyectos"),(0,a.kt)("li",{parentName:"ul"},"ver el detalle de un proyecto  "),(0,a.kt)("li",{parentName:"ul"},"actualizar los datos de un proyecto"),(0,a.kt)("li",{parentName:"ul"},"ver una lista de todos ",(0,a.kt)("strong",{parentName:"li"},"mis proyectos"))),(0,a.kt)("h2",{id:"crear-nuevo-proyecto"},"Crear nuevo proyecto"),(0,a.kt)("p",null,"En primer lugar necesitamos crear el archivo ",(0,a.kt)("em",{parentName:"p"},"nuevoProyectoVista.js")," en la carpeta vistas. Puede ser una buena idea clasificar las diferentes vistas en subcarpetas, por ejemplo ",(0,a.kt)("em",{parentName:"p"},"proyectos"),", ",(0,a.kt)("em",{parentName:"p"},"comentarios"),", ",(0,a.kt)("em",{parentName:"p"},"user"),", etc."),(0,a.kt)("p",null,"Este podr\xeda ser el template con el html: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="nuevoProyectoVista.js"',title:'"nuevoProyectoVista.js"'},'export default {\n  template: `\n  <div\n  class="container d-flex mt-5 justify-content-center">\n  <div class="col-12">\n      <h1 class="text-center p-2">Nuevo Proyecto</h1>\n      <form id="form_proyecto" class="p-3" novalidate>\n          <label class="mt-3 form-label" for="nombre">Nombre: </label>\n          <input\n            id="nombre" \n            type="text" \n            class="form-control" \n            value="" \n            placeholder ="Nombre del proyecto" \n            required \n          />\n          <div class="invalid-feedback">El nombre no es correcto</div>\n\n          <label class="mt-3 form-label" for="descripcion">Descripci\xf3n: </label>\n          <textarea \n            id="descripcion"\n            class="form-control" \n            value="" \n            required \n            />\n          </textarea>\n          <div class="invalid-feedback">Este campo no es correcto</div>\n\n          <label class="mt-3 form-label" for="enlace">Enlace a producci\xf3n</label>\n          <input\n              id="enlace"\n              type="enlace"\n              class="form-control"\n              value=""\n              placeholder = "http://miproyecto.com"\n              required\n          />\n          <div class="invalid-feedback">El link no es correcto</div>\n          <button type="submit" class="mt-5 btn btn-success">\n              Crear nuevo proyecto\n          </button>\n      </form>\n  </div>\n</div>\n    `,\n  script: ()=>{}\n}\n\n\n')),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Si en el archivo ",(0,a.kt)("strong",{parentName:"p"},"main.js")," le decimos que nos cargue esta vista por defecto (",(0,a.kt)("inlineCode",{parentName:"p"},"window.location = '#/nuevoProyecto'"),") podremos trabajar de manera m\xe1s fluida.")),(0,a.kt)("p",null,"Vamos ahora con la l\xf3gica.\nNecesitamos cargar las clases que usaremos para crear proyectos. Estas ser\xe1n ",(0,a.kt)("em",{parentName:"p"},"proyecto")," y ",(0,a.kt)("em",{parentName:"p"},"user"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { User } from '../../bd/user'\nimport { Proyecto } from '../../bd/proyecto'\n")),(0,a.kt)("p",null,"Ahora, como hicimos con el registro del perfil, necesitamos capturar el evento ",(0,a.kt)("em",{parentName:"p"},"submit")," del formulario para capturar los datos del formulario."),(0,a.kt)("p",null,"A continuaci\xf3n, (utilizando try/catch) capturaremos los datos del usuario que est\xe1 logueado (en concreto nos interesa el id). Recuerda que en la tabla ",(0,a.kt)("em",{parentName:"p"},"proyectos")," tenemos un campo llamado user_id que permite saber de quien es el proyecto."),(0,a.kt)("p",null,"Una vez tenemos el id del usuario tenemos que obtener los datos del formulario para poder registrar el nuevo proyecto. Por lo tanto creamos un objeto cuyas propiedades ser\xe1n los datos de la tabla , es decir ",(0,a.kt)("strong",{parentName:"p"},"nombre")," y ",(0,a.kt)("strong",{parentName:"p"},"descripcion")," y ",(0,a.kt)("strong",{parentName:"p"},"enlace"),". El ",(0,a.kt)("strong",{parentName:"p"},"user_id")," lo sacaremos del objeto user que hemos obtenido con ",(0,a.kt)("inlineCode",{parentName:"p"},"User.getUser()")),(0,a.kt)("p",null,"Ahora solo falta llamar al m\xe9todo ",(0,a.kt)("em",{parentName:"p"},"create")," de la clase ",(0,a.kt)("em",{parentName:"p"},"Proyecto")," para insertar un nuevo proyecto en la base de datos. ",(0,a.kt)("inlineCode",{parentName:"p"},"await Proyecto.create(proyecto)")),(0,a.kt)("p",null,"Finalmente, dejamos comentada la l\xednea ",(0,a.kt)("inlineCode",{parentName:"p"},"window.location.href = '/#/proyectos'")," . Recuerda que este es el m\xe9todo que usamos ahora para actulizar las vistas. Una vez tengamos la vista ",(0,a.kt)("em",{parentName:"p"},"proyectos")," creada descomentaremos esta l\xednea."),(0,a.kt)("p",null,"El c\xf3digo quedar\xeda as\xed:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="nuevoProyectoVista.js"',title:'"nuevoProyectoVista.js"'},'import { User } from \'../../bd/user\'\nimport { Proyecto } from \'../../bd/proyecto\'\nexport default {\n  template: `\n  <div\n  class="container d-flex mt-5 justify-content-center">\n  <div class="col-12">\n      <h1 class="text-center p-2">Nuevo Proyecto</h1>\n      <form id="form_proyecto" class="p-3" novalidate>\n          <label class="mt-3 form-label" for="nombre">Nombre: </label>\n          <input\n            id="nombre" \n            type="text" \n            class="form-control" \n            value="" \n            placeholder ="Nombre del proyecto" \n            required \n          />\n          <div class="invalid-feedback">El nombre no es correcto</div>\n\n          <label class="mt-3 form-label" for="descripcion">Descripci\xf3n: </label>\n          <textarea \n            id="descripcion"\n            class="form-control" \n            value="" \n            required \n            />\n          </textarea>\n          <div class="invalid-feedback">Este campo no es correcto</div>\n\n          <label class="mt-3 form-label" for="enlace">Enlace a producci\xf3n</label>\n          <input\n              id="enlace"\n              type="enlace"\n              class="form-control"\n              value=""\n              placeholder = "http://miproyecto.com"\n              required\n          />\n          <div class="invalid-feedback">El link no es correcto</div>\n          <button type="submit" class="mt-5 btn btn-success">\n              Crear nuevo proyecto\n          </button>\n      </form>\n  </div>\n</div>\n    `,\n  script: () => {\n    document.querySelector(\'#form_proyecto\').addEventListener(\'submit\', async function (e) {\n      e.preventDefault()\n      try {\n        const user = await User.getUser()\n        // Objeto con datos para proyecto\n        const proyecto = {\n          nombre: document.querySelector(\'#nombre\').value,\n          descripcion: document.querySelector(\'#descripcion\').value,\n          enlace: document.querySelector(\'#enlace\').value,\n          user_id: user.id // Tomamos el id del usuario logueado\n        }\n        await Proyecto.create(proyecto)\n        alert(\'Proyecto creado con \xe9xito\')\n        // Cargamos la p\xe1gina login\n        //window.location.href = \'/#/proyectos\'\n      } catch (error) {\n        console.log(error)\n        alert(\'Error al crear proyecto \' + error)\n      }\n    })\n  }\n}\n\n')),(0,a.kt)("p",null,"Si todo ha ido bien podemos ir creando proyectos y verificar que en supabase que el registro se ha realizado con \xe9xito."),(0,a.kt)("h2",{id:"ver-lista-de-proyectos"},"Ver lista de proyectos"),(0,a.kt)("p",null,"En este caso la idea es poder listar todos los proyectos de la base de datos."),(0,a.kt)("p",null,"Comenzamos por crear la vista:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="proyectosVista.js"',title:'"proyectosVista.js"'},'export default {\n  template: `\n  <main style="padding-top: 100px">\n  <div class="container">\n      <h1>Proyectos</h1>\n      <a href="/#/nuevoProyecto" id="nuevoProyecto" class="btn btn-success mt-3">Nuevo Proyecto</a>\n      <a href="/#/misProyectos" id="misProyectos" class="btn btn-warning mt-3 ms-2">Mis Proyectos</a>\n      <table id="tablaProyectos" class="table table-striped table-hover mt-5 align-middle">\n          <thead>\n              <tr>\n                  <th></th>\n                  <th>AUTOR</th>\n                  <th>NOMBRE</th>\n                  <th>DESCRIPCI\xd3N</th>\n                  <th>ENLACE</th>\n                  <th class="w-100"></th>\n              </tr>\n          </thead>\n          <tbody>\n                     \n              \n              \n          </tbody>\n      </table>\n  </div>\n</main>\n\n`,\n  script: async () => {\n    console.log(\'lista de proyectos\')\n  }\n}\n')),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Recuerda que si cambias en main.js la p\xe1gina principal por defecto a ",(0,a.kt)("em",{parentName:"p"},"proyectos")," podr\xe1s trabajar de manera m\xe1s fluida ")),(0,a.kt)("p",null,"Vamos ahora con la l\xf3gica.\nLo primero ser\xe1 capturar todos los proyectos de la tabla proyectos. Para ello utilizaremos la clase ",(0,a.kt)("inlineCode",{parentName:"p"},"proyectos")," (no olvides importarla).  "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"try {\n      // Capturamos todos los usuarios de la tabla perfiles\n      const proyectos = await Proyecto.getAll()\n      console.log('numero de proyectos en la base de datos: ', proyectos.length)\n} catch (error) {\n      alert('No se han podido cargar la tabla de usuarios ' + error)\n}\n")),(0,a.kt)("p",null,"Ahora que tenemos un array con todos los proyectos de nuestra base de datos solo tenemos que generar el elemento ",(0,a.kt)("inlineCode",{parentName:"p"},"tbody")," de nuestra tabla con los campos para cada registro y inyectarlo."),(0,a.kt)("p",null,"Para ello recorreremos el array mediante un ",(0,a.kt)("strong",{parentName:"p"},"for")," y para cada registro a\xf1adiremos una fila (",(0,a.kt)("inlineCode",{parentName:"p"},"tr"),") con los datos (",(0,a.kt)("inlineCode",{parentName:"p"},"td"),") de cada campo. Al final de cada fila a\xf1adiremos un icono para poder editar y borrar cada proyecto."),(0,a.kt)("p",null,"Observa que en cada icono insertamos (mediante un data-id) el id del proyecto. Esto nos permitir\xe1 capturar esta info cuando hagamos click sobre los iconos."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"F\xedjate que hemos utilizado una nueva estructura ",(0,a.kt)("strong",{parentName:"p"},"for")," para recorrer el array. ",(0,a.kt)("inlineCode",{parentName:"p"},"for (const proyecto of proyectos)"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="proyectos.js"',title:'"proyectos.js"'},'let tabla = \'\'\n\n      for (const proyecto of proyectos) {\n        tabla += `\n      <tr>\n        <td>\n          <img src="/assets/imagenes/proyectos/proyecto.png" width="100" alt="" data-id="${proyecto.id}" class="detalle"/>\n        </td>\n        <td>${proyecto.user_id}</td>\n        <td>${proyecto.nombre}</td>\n        <td class="w-100">${proyecto.descripcion}</td>\n        <td><a href="${proyecto.enlace}" target="_black">${proyecto.enlace}</a></td>\n        <td class="text-end">\n          <button\n            data-id="${proyecto.id}"\n            type="button"\n            class="btn text-danger detalle"\n          >\n          <img  data-id="${proyecto.id}" class="detalle w-100" src="/assets/iconos/icons8-acerca-de.svg" width="20" alt="" />\n          </button>\n          <button\n            data-id="${proyecto.id}"\n            type="button"\n            class="btn text-info editar"\n          >\n            <img src="/assets/iconos/icons8-editar.svg" width="20" alt="" class="editar" data-id="${proyecto.id}"/>\n          </button>\n\n          <button\n              data-id="${proyecto.id}"\n              type="button"\n              class="btn text-danger borrar"\n          >\n            <img  data-id="${proyecto.id}" class="borrar w-100" src="/assets/iconos/icons8-basura-llena.svg" width="20" alt="" />\n          </button>\n        </td>\n      </tr>\n      `\n      }\n      const tablaProyectosBody = document.querySelector(\'#tablaProyectos tbody\')\n      if (tablaProyectosBody) tablaProyectosBody.innerHTML = tabla\n')),(0,a.kt)("p",null,"Esto ya nos deber\xeda mostrar una lista con los proyectos de nuestra base de datos."),(0,a.kt)("h2",{id:"borrar-un-proyecto"},"Borrar un proyecto"),(0,a.kt)("p",null,"Para borrar un proyecto primero debemos seleccionarlo clicando en el icono de la basura del proyecto a borrar."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Para detectar el evento click sobre los iconos vamos a utilizar ",(0,a.kt)("strong",{parentName:"p"},"delegaci\xf3n de eventos"),". ")),(0,a.kt)("p",null,"Lo que hacemos realmente es: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Comprobar si el elemento sobre el que hemos hecho click es un icono (es decir, intentamos capturar el ",(0,a.kt)("strong",{parentName:"p"},"data-id")," y, si no es ",(0,a.kt)("em",{parentName:"p"},"undefined"),", significa que hemos clicado un icono). ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Ahora comprobamos si el icono sobre el que hemos clicado tiene la clase ",(0,a.kt)("strong",{parentName:"p"},"borrar")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-js"},"if (e.target.classList.contains('borrar'))\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Y si es as\xed capturarmos los datos del proyecto que queremos borrar y los guardamos en el objeto ",(0,a.kt)("strong",{parentName:"p"},"proyectoABorrar"),". As\xed podemos pedir que nos confirmen si realmente queremos borrar ESE proyecto en cuesti\xf3n."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const proyectoABorrar = await Proyecto.getById(id)\nconst seguro = confirm('\xbfEst\xe1 seguro que desea borrar el proyecto? Se eliminar\xe1n todos sus comentarios y notas ' + proyectoABorrar.nombre + ', ' + proyectoABorrar.nombre)\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Finalmente, si la confirmaci\xf3n es ",(0,a.kt)("em",{parentName:"p"},"true"),"  utilizamos el m\xe9todo ",(0,a.kt)("em",{parentName:"p"},"delete")," para borrar nuestro proyecto. A continuaci\xf3n recargamos la vista ",(0,a.kt)("em",{parentName:"p"},"proyectos"),"."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-js"},"  if (seguro) {\n    await Proyecto.delete(id)\n  }\n  window.location.href = '/#/proyectos'\n")))),(0,a.kt)("p",null,"Te muestro toda la l\xf3gica completa para borrar un proyecto:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="proyectos.js"',title:'"proyectos.js"'},"// Borrar y Editar usuario\n    const tablaProyectos = document.querySelector('#tablaProyectos')\n    if (tablaProyectos) {\n      //Detectamos click sobre la tabla entera\n      tablaProyectos.addEventListener('click', async (e) => {\n      // Si hemos hecho click sobre uno de los iconos capturaremos el id del proyecto\n        const id = e.target.dataset.id\n        // BORRAR PROYECTO (CUIDADO!!! HABR\xcdA QUE ELIMINAR TAMBIEN TODOSS LAS REFERENCIAS A ESTE PROYECTO, COMO LOS COMENTARIOS ASOCIADOS)\n        if (e.target.classList.contains('borrar')) {\n          try {\n            const proyectoABorrar = await Proyecto.getById(id)\n\n            const seguro = confirm('\xbfEst\xe1 seguro que desea borrar el proyecto? Se eliminar\xe1n todos sus comentarios y notas ' + proyectoABorrar.nombre + ', ' + proyectoABorrar.nombre)\n\n            if (seguro) {\n              await Proyecto.delete(id)\n            }\n            window.location.href = '/#/proyectos'\n          } catch (error) {\n            alert('No se han podido borrar el proyecto' + error)\n          }\n        }\n")),(0,a.kt)("h2",{id:"editar-un-proyecto"},"Editar un proyecto"))}u.isMDXComponent=!0}}]);