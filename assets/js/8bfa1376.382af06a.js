"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8817],{3905:(e,a,r)=>{r.d(a,{Zo:()=>c,kt:()=>g});var o=r(7294);function t(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function s(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,o)}return r}function n(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?s(Object(r),!0).forEach((function(a){t(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function i(e,a){if(null==e)return{};var r,o,t=function(e,a){if(null==e)return{};var r,o,t={},s=Object.keys(e);for(o=0;o<s.length;o++)r=s[o],a.indexOf(r)>=0||(t[r]=e[r]);return t}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)r=s[o],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var l=o.createContext({}),u=function(e){var a=o.useContext(l),r=a;return e&&(r="function"==typeof e?e(a):n(n({},a),e)),r},c=function(e){var a=u(e.components);return o.createElement(l.Provider,{value:a},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return o.createElement(o.Fragment,{},a)}},m=o.forwardRef((function(e,a){var r=e.components,t=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(r),m=t,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||s;return r?o.createElement(g,n(n({ref:a},c),{},{components:r})):o.createElement(g,n({ref:a},c))}));function g(e,a){var r=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var s=r.length,n=new Array(s);n[0]=m;var i={};for(var l in a)hasOwnProperty.call(a,l)&&(i[l]=a[l]);i.originalType=e,i[p]="string"==typeof e?e:t,n[1]=i;for(var u=2;u<s;u++)n[u]=r[u];return o.createElement.apply(null,n)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1871:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>l,contentTitle:()=>n,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var o=r(7462),t=(r(7294),r(3905));const s={sidebar_position:60},n="Historia 4: Usuarios en Supabase. Registro, Login/logout y detalle user. Pruebas II (API DOCS)",i={unversionedId:"PAPELERA ANTERIOR/otros supabase/h4",id:"PAPELERA ANTERIOR/otros supabase/h4",title:"Historia 4: Usuarios en Supabase. Registro, Login/logout y detalle user. Pruebas II (API DOCS)",description:"Tarea 1 - Gesti\xf3n de usuarios (Tabla users. Registro de usuarios)",source:"@site/docs/PAPELERA ANTERIOR/otros supabase/h4.md",sourceDirName:"PAPELERA ANTERIOR/otros supabase",slug:"/PAPELERA ANTERIOR/otros supabase/h4",permalink:"/vanillaPill/docs/PAPELERA ANTERIOR/otros supabase/h4",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/PAPELERA ANTERIOR/otros supabase/h4.md",tags:[],version:"current",sidebarPosition:60,frontMatter:{sidebar_position:60},sidebar:"tutorialSidebar",previous:{title:"Historia 3: Conexi\xf3n asincrona con el servicio backend de supabase. Pruebas I (API DOCS)",permalink:"/vanillaPill/docs/PAPELERA ANTERIOR/otros supabase/h3"},next:{title:"Historia 5: Supabase. Configuraci\xf3n de Triggers",permalink:"/vanillaPill/docs/PAPELERA ANTERIOR/otros supabase/h5"}},l={},u=[{value:"Tarea 1 - Gesti\xf3n de usuarios (Tabla users. Registro de usuarios)",id:"tarea-1---gesti\xf3n-de-usuarios-tabla-users-registro-de-usuarios",level:2},{value:"Tarea 2 - API para Login/Logout y detalle de usuario logeado",id:"tarea-2---api-para-loginlogout-y-detalle-de-usuario-logeado",level:2}],c={toc:u},p="wrapper";function d(e){let{components:a,...s}=e;return(0,t.kt)(p,(0,o.Z)({},c,s,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"historia-4-usuarios-en-supabase-registro-loginlogout-y-detalle-user-pruebas-ii-api-docs"},"Historia 4: Usuarios en Supabase. Registro, Login/logout y detalle user. Pruebas II (API DOCS)"),(0,t.kt)("h2",{id:"tarea-1---gesti\xf3n-de-usuarios-tabla-users-registro-de-usuarios"},"Tarea 1 - Gesti\xf3n de usuarios (Tabla users. Registro de usuarios)"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Para el sistema registro podemos utilizar diferentes m\xe9todos, a trav\xe9s de email y contrase\xf1a o usando proveedores como google, facebook, github, etc. Nosotros vamos a probar con email y contrase\xf1a."),(0,t.kt)("li",{parentName:"ul"},"Vamos al men\xfa izquierdo y en ",(0,t.kt)("strong",{parentName:"li"},"autentication->providers")," encontramos todosl los proveedores. Habilitaremos el de ",(0,t.kt)("strong",{parentName:"li"},"Email"),"."),(0,t.kt)("li",{parentName:"ul"},"En la API Docs vamos a ",(0,t.kt)("strong",{parentName:"li"},"User Management")," y copiamos el c\xf3digo para registrarnos")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="API Docs -> User Management"',title:'"API',Docs:!0,"->":!0,User:!0,'Management"':!0},"//USER SIGNUP\nlet { data, error } = await supabase.auth.signUp({\n  email: 'youremail@email.com',\n  password: 'adfaadsfadf44aafsd'\n})\n")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Copiamos el c\xf3gido en nuestra funci\xf3n y ponemos un email real para que nos llegue la invitaci\xf3n y que la podamos confirmar, y llamamos a la funci\xf3n.")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="pruebaSupabase.js" {4,5}',title:'"pruebaSupabase.js"',"{4,5}":!0},"const registro = async ()=>{\n  //USER SIGNUP\n  let { data, error } = await supabase.auth.signUp({\n    email: 'cadmin@fpllefia.com',\n    password: '123456'\n  })\n}\nregistro()\n\n")),(0,t.kt)("p",null,"Si actualizamos la tabla users veremos que se ha registrado un nuevo usuario pero est\xe1 pendiente de verificaci\xf3n"),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"tabla users",src:r(447).Z,width:"946",height:"263"})),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Ahora si comprobamos el correo electr\xf3nico veremos que nos ha llegado un email de ",(0,t.kt)("a",{parentName:"li",href:"mailto:noreply@mail.app.supabase.io"},"noreply@mail.app.supabase.io")," con un texto como este (Que nosotros podemos configurar). Si hacemos click en el enlace iremos a la p\xe1gina que hayamos configurado y el registro estar\xe1 validado.")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"Confirm your signup\nFollow this link to confirm your user:\n\nConfirm your mail\n")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Ahora en la tabla users veremos que el estado del user es ",(0,t.kt)("strong",{parentName:"li"},"registrado"))),(0,t.kt)("h2",{id:"tarea-2---api-para-loginlogout-y-detalle-de-usuario-logeado"},"Tarea 2 - API para Login/Logout y detalle de usuario logeado"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Vamos a iniciar una sesi\xf3n con nuestro usuario y contrase\xf1a y a mostrar por consola los datos del usuario logueado. Para ello volvemos a consultar la API Docs y copiamos el c\xf3gido de USER LOGIN, USER LOGOUT y GET USER. A continuaci\xf3n creamos nuestra funci\xf3n para iniciar sesion, cerrar sesi\xf3n y mostrar usuario logeado y las llamamos."),(0,t.kt)("li",{parentName:"ul"},"No olvides comentar la l\xednea de c\xf3digo que llama a la funci\xf3n registro() para evitar que se ejecute cada vez que actualizas el c\xf3digo ",(0,t.kt)("inlineCode",{parentName:"li"},"//registro()"))),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="pruebaSupabase.js"',title:'"pruebaSupabase.js"'},"        const login = async ()=>{\n        //USER LOGIN\n            let { data, error } = await supabase.auth.signInWithPassword({\n            email: 'carrebola@fpllefia.com',\n            password: '123456'\n            })\n        }\n        \n        const logout = async ()=>{\n            //USER LOGOUT\n            let { error } = await supabase.auth.signOut()\n        }\n        \n        const mostrarUsuarioLogeado = async ()=>{\n            //GET USER\n            const { data: { user } } = await supabase.auth.getUser()\n            console.log('usuario logueado', user)\n        }\n        \n        await mostrarUsuarioLogeado()\n        await login()\n        await mostrarUsuarioLogeado()\n        await logout()\n        await mostrarUsuarioLogeado()\n\n")),(0,t.kt)("p",null,"Hemos llamado a la funci\xf3n mostrarUsuarioLogeado() para mostrar los datos del usuario antes y despu\xe9s de iniciar sesi\xf3n y cerrar sesi\xf3n. En la consola podemos ver el resultado. "),(0,t.kt)("p",null,"Cuando no est\xe1 iniciada la sesi\xf3n la funci\xf3n mostrarUsuarioLogeado() devuelve null. Cuando la sesi\xf3n est\xe1 abierta podemos ver los detalles del user (id, email, etc.)"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"usuario logueado null\n\nusuario logueado {id: '3f88c1c7-cd17-4dd8-a760-ce301ba96e4b', aud: 'authenticated', role: 'authenticated', email: 'carrebola@fpllefia.com', email_confirmed_at: '2023-02-28T19:45:07.259524Z',\xa0\u2026}\n\nusuario logueado null\n")))}d.isMDXComponent=!0},447:(e,a,r)=>{r.d(a,{Z:()=>o});const o=r.p+"assets/images/tabla-usuarios-pendiente-8087fcb5204c354b7fcca239bc75d2f1.png"}}]);