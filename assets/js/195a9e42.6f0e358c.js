"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6281],{3905:(e,t,o)=>{o.d(t,{Zo:()=>d,kt:()=>y});var a=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,a)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function c(e,t){if(null==e)return{};var o,a,n=function(e,t){if(null==e)return{};var o,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)o=r[a],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)o=r[a],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var i=a.createContext({}),l=function(e){var t=a.useContext(i),o=t;return e&&(o="function"==typeof e?e(t):s(s({},t),e)),o},d=function(e){var t=l(e.components);return a.createElement(i.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var o=e.components,n=e.mdxType,r=e.originalType,i=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=l(o),m=n,y=p["".concat(i,".").concat(m)]||p[m]||u[m]||r;return o?a.createElement(y,s(s({ref:t},d),{},{components:o})):a.createElement(y,s({ref:t},d))}));function y(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=o.length,s=new Array(r);s[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[p]="string"==typeof e?e:n,s[1]=c;for(var l=2;l<r;l++)s[l]=o[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,o)}m.displayName="MDXCreateElement"},1471:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var a=o(7462),n=(o(7294),o(3905));const r={},s=void 0,c={unversionedId:"Version 1.0/SPRINT 5 - INTEGRACION FRONTEND Y BACKEND/Integraci\xf3n de Frontend Y Backend/Gesti\xf3n de proyectos",id:"Version 1.0/SPRINT 5 - INTEGRACION FRONTEND Y BACKEND/Integraci\xf3n de Frontend Y Backend/Gesti\xf3n de proyectos",title:"Gesti\xf3n de proyectos",description:"Vamos a actualizar la l\xf3gica para la gesti\xf3n de proyectos.",source:"@site/docs/03-Version 1.0/SPRINT 5 - INTEGRACION FRONTEND Y BACKEND/12-Integraci\xf3n de Frontend Y Backend/03-Gesti\xf3n de proyectos.md",sourceDirName:"03-Version 1.0/SPRINT 5 - INTEGRACION FRONTEND Y BACKEND/12-Integraci\xf3n de Frontend Y Backend",slug:"/Version 1.0/SPRINT 5 - INTEGRACION FRONTEND Y BACKEND/Integraci\xf3n de Frontend Y Backend/Gesti\xf3n de proyectos",permalink:"/vanillaPill/docs/Version 1.0/SPRINT 5 - INTEGRACION FRONTEND Y BACKEND/Integraci\xf3n de Frontend Y Backend/Gesti\xf3n de proyectos",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/03-Version 1.0/SPRINT 5 - INTEGRACION FRONTEND Y BACKEND/12-Integraci\xf3n de Frontend Y Backend/03-Gesti\xf3n de proyectos.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Login y registro",permalink:"/vanillaPill/docs/Version 1.0/SPRINT 5 - INTEGRACION FRONTEND Y BACKEND/Integraci\xf3n de Frontend Y Backend/Login y registro"},next:{title:"Historia 11. Primeros componentes vanillaJS: header y router",permalink:"/vanillaPill/docs/PAPELERA ANTERIOR/Hist8 - Implementaci\xf3n del proyecto basado en SPA/h11"}},i={},l=[{value:"ProyectosVista",id:"proyectosvista",level:2},{value:"ProyectoNuevoVista",id:"proyectonuevovista",level:2},{value:"Mis proyectos",id:"mis-proyectos",level:2}],d={toc:l},p="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Vamos a actualizar la l\xf3gica para la gesti\xf3n de proyectos."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Alt text",src:o(5694).Z,width:"1364",height:"525"})),(0,n.kt)("h2",{id:"proyectosvista"},"ProyectosVista"),(0,n.kt)("p",null,"De toda la l\xf3gica del script nos interesa solo estas l\xedneas:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="proyectosVista.js"',title:'"proyectosVista.js"'}," // Capturamos proyectos y guardamos en variable para poder ser filtrada\n    const datos = proyectos\n")),(0,n.kt)("p",null,"Lo \xfanico que tenemos que hacer es cargar la clase ",(0,n.kt)("inlineCode",{parentName:"p"},"proyecto")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"import { Proyecto } from '../bd/proyecto'\n")),(0,n.kt)("p",null,"y sustuir el array proyectos por nuestra consulta. "),(0,n.kt)("p",null,"El resultado se acerca a lo esperado aunque hay que solucionar algunas cosillas..."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Alt text",src:o(4798).Z,width:"1575",height:"639"})),(0,n.kt)("p",null,"Por ejemplo, la fecha sale en un formato donde se indica las horas, minutos, etc... Mejor quedarnos solo con el d\xeda, \xbfno?"),(0,n.kt)("p",null,"Para solucionarlo podemos: "),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Recortar el resultado por la 'T' y quedarnos la primera parte. "),(0,n.kt)("li",{parentName:"ol"},"Separar el a\xf1o, mes y dia por el '-' y reordenarlo utilizando '/'")),(0,n.kt)("p",null,"Podr\xedamos usar este c\xf3digo:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"const nuevaFecha = fecha.split('T')[0]\nconst fechaFormateada = `${nuevaFecha.split('-')[2]}/${nuevaFecha.split('-')[1]}7${nuevaFecha.split('-')[0]}`\n")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Otra manera podr\xeda ser la siguiente: "),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"${(new Date(fechaOriginal)).toISOString().split('T')[0]}\n"))),(0,n.kt)("p",null,"Y quedar\xeda as\xed:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"// Capturamos proyectos y guardamos en variable para poder ser filtrada\n    const datosBd = await Proyecto.getAll()\n    console.log('datos', datosBd)\n    const datos = datosBd.map((dato) => {\n      const fecha = dato.created_at\n      const nuevaFecha = fecha.split('T')[0]\n      const fechaFormateada = `${nuevaFecha.split('-')[2]}/${nuevaFecha.split('-')[1]}/${nuevaFecha.split('-')[0]}`\n      const datoFormateado = {\n        ...dato,\n        created_at: fechaFormateada\n      }\n      return datoFormateado\n    })\n")),(0,n.kt)("p",null,"Ahora tenemos el problema del autor. Este es m\xe1s serio ya que, si te fijas, nuestra consulta no nos devuelve el nombre del autor, tan solo su user_id."),(0,n.kt)("p",null,"Para solucionar esto debemos modificar el m\xe9todo que hace la consulta. Pero esto lo haremos m\xe1s adelante..."),(0,n.kt)("h2",{id:"proyectonuevovista"},"ProyectoNuevoVista"),(0,n.kt)("p",null,"En este caso debemos modficar la funci\xf3n enviaDatos(). Podr\xeda quedar algo as\xed:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="proyectoNuevoVista.js"',title:'"proyectoNuevoVista.js"'},"// Funci\xf3n para enviar datos a la base de datos\n    async function enviaDatos() {\n      try {\n        const proyectoEditado = {\n          // Asignaci\xf3n de valores a las propiedades del proyecto\n          imagen: document.querySelector('#urlImagen').value,\n          nombre: document.querySelector('#nombreJuego').value,\n          descripcion: document.querySelector('#descripcion').value,\n          created_at: document.querySelector('#fecha').value,\n          estado: document.querySelector('#estado').value,\n          enlace: document.querySelector('#enlace').value,\n          repositorio: document.querySelector('#repositorio').value\n        }\n        const proyectoCreado = await Proyecto.create(proyectoEditado)\n        alert('Proyecto creado con \xe9xito', proyectoCreado.nombre)\n        console.log('Enviando a la base de datos ', proyectoCreado)\n        window.location = '#/proyectos'\n      } catch (error) {\n        alert('Error al crear el proyecto', error)\n      }\n    }\n")),(0,n.kt)("p",null,"Si analizas con detalles su funcionamiento ver\xe1s que, hemos modificado la propiedad ",(0,n.kt)("strong",{parentName:"p"},"fecha")," por la propiedad ",(0,n.kt)("strong",{parentName:"p"},"created_at"),", que es el nombre del campo que tenemos en la tabla ",(0,n.kt)("inlineCode",{parentName:"p"},"proyectos")," de nuestra base de datos."),(0,n.kt)("p",null,"Otra cosa a tener en cuenta es que, ",(0,n.kt)("strong",{parentName:"p"},"\xa1no hemos a\xf1adido el user_id!"),", por lo tanto no podemos saber quien ha creado el proyecto."),(0,n.kt)("p",null,"Esto tiene f\xe1cil soluci\xf3n. Solo tenemos que usar el m\xe9todo getUser() de la clase User."),(0,n.kt)("p",null,"Al final, la cosa quedar\xeda as\xed: "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="proyectoNuevoVista.js"',title:'"proyectoNuevoVista.js"'},"// Funci\xf3n para enviar datos a la base de datos\n    async function enviaDatos() {\n      try {\n        const user = await User.getUser()\n        const userId = user.id\n\n        const proyectoEditado = {\n          // Asignaci\xf3n de valores a las propiedades del proyecto\n          imagen: document.querySelector('#urlImagen').value,\n          nombre: document.querySelector('#nombreJuego').value,\n          descripcion: document.querySelector('#descripcion').value,\n          created_at: document.querySelector('#fecha').value,\n          estado: document.querySelector('#estado').value,\n          enlace: document.querySelector('#enlace').value,\n          repositorio: document.querySelector('#repositorio').value,\n          user_id: userId\n        }\n        const proyectoCreado = await Proyecto.create(proyectoEditado)\n        alert('Proyecto creado con \xe9xito', proyectoCreado.nombre)\n        console.log('Enviando a la base de datos ', proyectoCreado)\n        window.location = '#/proyectos'\n      } catch (error) {\n        alert('Error al crear el proyecto', error)\n      }\n    }\n")),(0,n.kt)("h2",{id:"mis-proyectos"},"Mis proyectos"),(0,n.kt)("p",null,"Ahora que podemos crear proyectos vamos a regresar a la vista ",(0,n.kt)("inlineCode",{parentName:"p"},"proyetosVista.js")," para modificar la l\xf3gica que se encarga de mostrar los proyectos que ha creado el usuario que tiene la sesi\xf3n abierta."),(0,n.kt)("p",null,"Para ello haremos lo mismo, utilizaremos el User.getUser() para obtener el user_id del usuario logueado. El c\xf3digo quedar\xeda de la siguiente manera:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="proyectosVista.js"',title:'"proyectosVista.js"'},"script: async () => {\n    // **** AQUI DEBEMOS CAPTURAR LOS PROYECTOS DE LA BASE DE DATOS ****\n\n    // Capturamos proyectos y guardamos en variable para poder ser filtrada\n    const datosBd = await Proyecto.getAll()\n    console.log('datos', datosBd)\n    const user = await User.getUser()\n    const userId = user.id\n    console.log('userId',userId);\n    const datos = datosBd.map((dato) => {\n      const fecha = dato.created_at\n      const nuevaFecha = fecha.split('T')[0]\n      const fechaFormateada = `${nuevaFecha.split('-')[2]}/${nuevaFecha.split('-')[1]}/${nuevaFecha.split('-')[0]}`\n      const datoFormateado = {\n        ...dato,\n        created_at: fechaFormateada\n      }\n      return datoFormateado\n    })\n\n    let misProyectos = false\n    // Capturamos los datos del usuario logueado\n    const usuario = ls.getUsuario()\n    console.log(usuario);\n\n    // ####################################################################\n    // *** FUNCI\xd3N PARA PINTAR TABLA A PARTIR DE ARRAY datos ***\n    // ####################################################################\n\n    const pintaTabla = (proyectosFiltrados) => {\n      // Si tenemos seleccionada la opci\xf3n 'mis proyectos' filtramos los proyectos por user_id\n      if (misProyectos) {\n        proyectosFiltrados = proyectosFiltrados.filter((proyecto) => proyecto.user_id === userId)\n      }\n\n      let tbodyProyectos = ''\n      // Iteramos para cada proyecto del array 'proyectos'\n      proyectosFiltrados.forEach(proyecto => {\n        // Generamos botones dependiendo de si el proyecto ha sido creado por el usuario logueado\n        let botones = ''\n        if (userId === proyecto.user_id) {\n          botones =\n            `\n          <td><a\n            data-id = ${proyecto.id}\n            class=\"botonAdmin botonEditar d-none d-sm-inline btn btn-sm btn-outline-primary bi bi-pencil\"\n          ></a></td>\n          <td><a\n            data-id = ${proyecto.id}\n            class=\"botonAdmin botonBorrar d-none d-sm-inline btn btn-sm btn-outline-danger bi bi-trash3\"\n          ></a></td>\n          `\n        }\n        // sumamos un tr con los datos del proyecto de la iteraci\xf3n\n        tbodyProyectos += // html\n          `\n        <tr data-id=\"${proyecto.id}\" class=\"verDetalle\">\n          <td>\n            <div class=\"containerImagen\">\n              <img \n                class=\"verDetalle\"\n                data-id=\"${proyecto.id}\"\n                width=\"200px\" \n                src=${proyecto.imagen || 'images/imagenVacia.png'} \n                alt=\"imagen proyecto\" />\n            </div>\n          </td>\n          <td>${proyecto.nombre}</td>\n          <td>${proyecto.descripcion}</td>\n          <td><a href=\"${proyecto.enlace}\" target=\"_blank\"><i class=\"bi bi-link fs-4\"></i></a></td>\n          <td><a href=\"${proyecto.repositorio}\" target=\"_blank\"><i class=\"bi bi-folder-symlink fs-4\"></i></a></td>\n          <td>${proyecto.nombre_usuario} ${proyecto.apellidos_usuario}</td>\n          <td>${proyecto.created_at}</td>\n          <td>${proyecto.estado}</td>\n          <td>\n            \x3c!-- Botones de edici\xf3n y borrado --\x3e\n            ${botones}\n          </td>\n        </tr>   \n        `\n      })\n      // inyectamos el resultado en el tbody\n      document.querySelector('#tbodyProyectos').innerHTML = tbodyProyectos\n    }\n\n    // ####################################################################\n    // Funci\xf3n para pintar tarjetas\n    // ####################################################################\n\n    const pintaTarjetas = (proyectosFiltrados) => {\n      // Si tenemos seleccionada la opci\xf3n 'mis proyectos' filtramos los proyectos por user_id\n      if (misProyectos) {\n        proyectosFiltrados = proyectosFiltrados.filter((proyecto) => proyecto.user_id === userId)\n        console.log('proyectosUserId', proyectosFiltrados)\n      }\n      let tarjetasProyectos = ''\n      // Iteramos para cada proyecto del array 'proyectosFiltrados'\n      proyectosFiltrados.forEach(proyecto => {\n        // Generamos botones dependiendo de si el proyecto ha sido creado por el usuario logueado\n        let botones = ''\n        if (usuario.user_id === proyecto.user_id) {\n          botones =\n            `\n          <a\n            data-id = ${proyecto.id}\n            class=\"botonAdmin botonEditar d-none d-sm-inline btn btn-sm btn-outline-primary bi bi-pencil\"\n          ></a>\n          <a\n            data-id = ${proyecto.id}\n            class=\"botonAdmin botonBorrar d-none d-sm-inline btn btn-sm btn-outline-danger bi bi-trash3\"\n          ></a>\n          `\n        }\n        // sumamos un tr con los datos del proyecto\n        tarjetasProyectos += // html\n          `\n        \x3c!-- tarjeta  --\x3e\n        <div class=\"col-12 col-lg-6\">\n          <div class=\"card mb-3\">\n            <div class=\"row g-0\">\n              <div\n                class=\"col-4 verDetalle\"\n                data-id=\"${proyecto.id}\"\n                style=\"\n                  background-image: url(${proyecto.imagen || 'images/imagenVacia.png'});\n                  background-position: center;\n                  background-size: cover;\n                \"\n              ></div>\n              <div class=\"col-8\">\n                <div class=\"card-body\">\n                  <h5 class=\"card-title\">${proyecto.nombre}</h5>\n                  <p class=\"card-text\">\n                    ${proyecto.descripcion}\n                  </p>\n                  <p class=\"small m-0 text-end text-italic\">Autor: ${proyecto.nombre_usuario} ${proyecto.apellidos_usuario}</p>\n                  <p class=\"small text-end text-italic\">Fecha: ${proyecto.created_at}</p>\n                  <a class=\"btn btn-sm btn-outline-primary\" href=\"${proyecto.enlace}\" target=\"_blank\"><i class=\"bi bi-link\"></i></a>\n                  <a class=\"btn btn-sm btn-outline-primary\" href=\"${proyecto.repositorio}\" target=\"_blank\"><i class=\"bi bi-folder-symlink\"></i></a>\n                  <button class=\"btn btn-sm btn-success\">${proyecto.estado}</button>\n                  \x3c!-- Botones editar y borrar --\x3e\n                  ${botones}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>  \n        `\n      })\n      // inyectamos el resultado en tbody\n      document.querySelector('#tabTarjetas').innerHTML = tarjetasProyectos\n    }\n\n    // *** Pintamos los datos en tabla y tarjetas ***\n    pintaTabla(datos)\n    pintaTarjetas(datos)\n\n    // ####################################################################\n    // *** SELECCI\xd3N DE VISTA EN FORMATO TABLA O TARJETAS ***\n    // ####################################################################\n\n    // Selecci\xf3n vista tabla\n    document.querySelector('.vistaTabla').addEventListener('click', (boton) => {\n      // Lineas originales del html para los tabs:\n      // <div class=\"col-12 d-none d-xl-block\" style=\"overflow-x: auto\">\n      // <div class=\"d-xl-none row\">\n\n      // Pinta el boton de verde\n      boton.target.classList.add('btn-success')\n\n      // Pinta el otro bot\xf3n de gris y elimina el verde\n      const botonTarjeta = document.querySelector('.vistaTarjetas')\n      botonTarjeta.classList.remove('btn-success')\n      botonTarjeta.classList.add('btn-secondary')\n\n      // Muestra y oculta los tabs\n      document.querySelector('#tabTabla').setAttribute('class', 'col-12 d-block')\n      document.querySelector('#tabTarjetas').setAttribute('class', 'd-none')\n    })\n\n    // Selecci\xf3n vista tarjetas\n    document.querySelector('.vistaTarjetas').addEventListener('click', (boton) => {\n      console.log('vistaTarjetas')\n\n      // Pinta el boton de verde\n      boton.target.classList.add('btn-success')\n\n      // Pinta el otro bot\xf3n de gris y elimina el verde\n      const botonTabla = document.querySelector('.vistaTabla')\n      botonTabla.classList.remove('btn-success')\n      botonTabla.classList.add('btn-secondary')\n\n      // Muestra y oculta los tabs\n      document.querySelector('#tabTabla').setAttribute('class', 'd-none')\n      document.querySelector('#tabTarjetas').setAttribute('class', 'row')\n    })\n\n    // ####################################################################\n    // *** FILTRO PARA BUSCADOR ***\n    // ####################################################################\n\n    // Capturamos el input de b\xfasqueda\n    const inputBusqueda = document.getElementById('inputBusqueda')\n\n    // Agregamos un evento de escucha para el evento de entrada en el input de b\xfasqueda\n    inputBusqueda.addEventListener('input', () => {\n      // Capturamos el texto de b\xfasqueda del input, convi\xe9rtelo a min\xfasculas y elimina espacios en blanco al principio y al final\n      const textoBusqueda = inputBusqueda.value.toLowerCase().trim()\n\n      // Filtramos los proyectos que coinciden con el texto de b\xfasqueda en cualquier campo\n      const proyectosFiltrados = datos.filter(proyecto => {\n        // Itera sobre las propiedades (campos) de cada proyecto\n        for (const key in proyecto) {\n          // Obtenemos el valor del campo actual\n          const valorCampo = proyecto[key]\n          // Verificamos si el valor del campo es una cadena y si contiene el texto de b\xfasqueda\n          if (typeof valorCampo === 'string' && valorCampo.toLowerCase().includes(textoBusqueda)) {\n            // Si hay coincidencia, devuelve true para incluir el proyecto en la lista filtrada\n            return true\n          }\n        }\n        // Si no se encontr\xf3 coincidencia en ning\xfan campo, devuelve false para excluir el proyecto\n        return false\n      })\n      // Volvemos a pintar los datos con los proyectos filtrados por el buscador\n      pintaTabla(proyectosFiltrados)\n      pintaTarjetas(proyectosFiltrados)\n    })\n\n    // ####################################################################\n    // Borrar datos del input del buscador al hacer click en 'x'\n    // ####################################################################\n\n    document.querySelector('#borrarBuscador').addEventListener('click', () => {\n      // Borramos contenido del buscador\n      inputBusqueda.value = ''\n      // Actualizamos array con todos los proyectos\n      // const proyectosFiltrados = datos\n      // Actualizamos los datos en el panel central\n      pintaTabla(datos)\n      pintaTarjetas(datos)\n    })\n\n    // ####################################################################\n    // Vista 'Todos los proyectos' / 'Mis proyectos'\n    // ####################################################################\n\n    // *** Detectamos si se cambia de proyectos a mis proyectos al hacer click en las pesta\xf1as ***\n    document.querySelector('.nav-tabs').addEventListener('click', (event) => {\n      // Si click en 'Mis proyectos' cambiamos pesta\xf1a activa\n      if (event.target.classList.contains('fichaMisProyectos')) {\n        document.querySelector('.fichaMisProyectos').classList.add('active')\n        document.querySelector('.fichaProyectos').classList.remove('active')\n        misProyectos = true\n      } else {\n        // Si click en 'Todos los proyectos' cambiamos pesta\xf1a activa\n        document.querySelector('.fichaProyectos').classList.add('active')\n        document.querySelector('.fichaMisProyectos').classList.remove('active')\n        misProyectos = false\n      }\n      // Actualizamos los datos en el panel central\n      pintaTabla(datos)\n      pintaTarjetas(datos)\n    })\n\n    // ####################################################################\n    // BOTONES DE EDICI\xd3N, BORRADO y VISUALIZACI\xd3N DE DETALLE DE PROYECTOS\n    // ####################################################################\n\n    // Detectamos clic sobre main (Usamos delegaci\xf3n de eventos porque la tabla y tarjetas se actualizan constantemente en el DOM)\n    document.querySelector('main').addEventListener('click', (event) => {\n      let id = ''\n      // Si hemos pulsado sobre uno de los botones DE EDICI\xd3N O BORRADO\n      if (event.target.classList.contains('botonAdmin')) {\n        const boton = event.target\n        // Capturamos el id de su dataset\n        const id = boton.dataset.id\n        if (boton.classList.contains('botonEditar')) {\n          // Si se trata de editar\n          console.log('Editar proyecto ' + id)\n\n          // Cargamos la vista para editar proyecto pasandole como par\xe1metro el id\n          window.location = `#/proyectoEditar/${id}`\n        } else if (boton.classList.contains('botonBorrar')) {\n          // Si se trata de borrar\n          alert('Borrar proyecto ' + id)\n\n          // *** AQU\xcd VA LA FUNCI\xd3N QUE BORRA DE LA BASE DE DATOS EL PROYECTO CORRESPONDIENTE AL ID ***\n        }\n      }\n      // Visualizar detalle del proyecto si click sobre tr de vista tabla\n      if (event.target.tagName === 'TD') {\n        console.log('clic en td')\n        id = event.target.parentNode.dataset.id\n        window.location = `#/proyectoDetalle/${id}`\n      }\n      // Si hacemos clic sobre la imagen de tabla o de vista tarjetas\n      if (event.target.classList.contains('verDetalle')) {\n        id = event.target.dataset.id\n        window.location = `#/proyectoDetalle/${id}`\n      }\n    })\n\n    // ####################################################################\n    // Mostrar/ocultar bot\xf3n 'subir proyecto'\n    // ####################################################################\n\n    // Ocultamos el bot\xf3n de subir proyecto si el rol es registrado\n    if (usuario.rol === 'registrado') {\n      document.querySelector('#botonSubirProyecto').classList.add('disabled')\n    }\n  }\n")),(0,n.kt)("admonition",{title:'title="\u270d\ufe0f TAREA: Modificar resto de vistas de proyecto"',type:"warning"},(0,n.kt)("p",{parentName:"admonition"},"Es tu turno. Modifica las vistas ",(0,n.kt)("inlineCode",{parentName:"p"},"proyecrtoEditarVista.js")," y ",(0,n.kt)("inlineCode",{parentName:"p"},"proyectoDetalleVista.js"))))}u.isMDXComponent=!0},4798:(e,t,o)=>{o.d(t,{Z:()=>a});const a=o.p+"assets/images/image-10-bce183a0c39a99b7b9553780629b470a.png"},5694:(e,t,o)=>{o.d(t,{Z:()=>a});const a=o.p+"assets/images/image-9-0dd95d37cfb86a7e270525b8b297ff0e.png"}}]);