"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8454],{3905:(e,r,n)=>{n.d(r,{Zo:()=>p,kt:()=>m});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=t.createContext({}),c=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):s(s({},r),e)),n},p=function(e){var r=c(e.components);return t.createElement(l.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},f=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),f=a,m=u["".concat(l,".").concat(f)]||u[f]||d[f]||o;return n?t.createElement(m,s(s({ref:r},p),{},{components:n})):t.createElement(m,s({ref:r},p))}));function m(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=f;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i[u]="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1731:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var t=n(7462),a=(n(7294),n(3905));const o={Title:"Implementaci\xf3n del ORM"},s=void 0,i={unversionedId:"PAPELERA ANTERIOR/ORM",id:"PAPELERA ANTERIOR/ORM",title:"ORM",description:"Para crear la clase proyectos debemos hacer los mismo pero sustituyendo el nombre de la clase, tabla y propiedades por las correspondientes a la tabla proyectos.",source:"@site/docs/PAPELERA ANTERIOR/ORM.md",sourceDirName:"PAPELERA ANTERIOR",slug:"/PAPELERA ANTERIOR/ORM",permalink:"/vanillaPill/docs/PAPELERA ANTERIOR/ORM",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/PAPELERA ANTERIOR/ORM.md",tags:[],version:"current",frontMatter:{Title:"Implementaci\xf3n del ORM"},sidebar:"tutorialSidebar",previous:{title:"Historia 8. Configuraci\xf3n del entorno de desarrollo para nuestro proyecto. ESLint",permalink:"/vanillaPill/docs/PAPELERA ANTERIOR/h8"},next:{title:"Historia 3: Conexi\xf3n asincrona con el servicio backend de supabase. Pruebas I (API DOCS)",permalink:"/vanillaPill/docs/PAPELERA ANTERIOR/otros supabase/h3"}},l={},c=[],p={toc:c},u="wrapper";function d(e){let{components:r,...n}=e;return(0,a.kt)(u,(0,t.Z)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="Clase perfiles"',title:'"Clase','perfiles"':!0},"\nimport { supabase } from './supabase.js';\n\nexport class Perfiles {\n  constructor({\n    id = null,\n    created_at = null,\n    user_id = null,\n    nombre = null,\n    apellidos = null,\n    avatar = null,\n    estado = null,\n    rol = null,\n  }) {\n    this.id = id;\n    this.created_at = created_at\n    this.user_id = user_id\n    this.nombre = nombre\n    this.apellidos = apellidos\n    this.avatar = avatar\n    this.estado = estado\n    this.rol = rol\n  }\n\n  static async getAll() {\n    const { data: perfiles, error } = await supabase\n      .from('perfiles')\n      .select('*')\n      .order('created_at', { ascending: false })\n\n    if (error) {\n      throw new Error(error.message)\n    }\n\n    return perfiles.map((perfil) => new Perfil(perfil))\n  }\n\n  static async getById(id) {\n    const { data: perfil, error } = await supabase\n      .from('perfiles')\n      .select('*')\n      .eq('id', id)\n      .single();\n\n    if (error) {\n      throw new Error(error.message)\n    }\n\n    return new Perfil(perfil)\n  }\n\n  static async getByUserId(id) {\n    const { data: perfil, error } = await supabase\n      .from('perfiles')\n      .select('*')\n      .eq('user_id', id)\n      .single();\n\n    if (error) {\n      throw new Error(error.message)\n    }\n\n    return new Perfil(perfil)\n  }\n\n  static async create(perfilData) {\n    const { error } = await supabase\n      .from('perfiles')\n      .insert(perfilData)\n      .select();\n\n    if (error) {\n      throw new Error(error.message)\n    }\n\n    return true;\n  }\n\n  static async update(id, newData) {\n    const { error } = await supabase\n      .from('perfiles')\n      .update(newData)\n      .eq('id', id)\n\n    if (error) {\n      throw new Error(error.message)\n    }\n\n    return true\n  }\n}\n\n")),(0,a.kt)("p",null,"Para crear la clase ",(0,a.kt)("strong",{parentName:"p"},"proyectos")," debemos hacer los mismo pero sustituyendo el nombre de la clase, tabla y propiedades por las correspondientes a la tabla proyectos."),(0,a.kt)("admonition",{title:"\xa1ES TU TURNO!",type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"Crea la clase proyectos.")))}d.isMDXComponent=!0}}]);