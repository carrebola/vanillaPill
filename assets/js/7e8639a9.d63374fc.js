"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5128],{3905:(e,a,n)=>{n.d(a,{Zo:()=>u,kt:()=>g});var o=n(7294);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,o,t=function(e,a){if(null==e)return{};var n,o,t={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var l=o.createContext({}),d=function(e){var a=o.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):s(s({},a),e)),n},u=function(e){var a=d(e.components);return o.createElement(l.Provider,{value:a},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return o.createElement(o.Fragment,{},a)}},c=o.forwardRef((function(e,a){var n=e.components,t=e.mdxType,r=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=d(n),c=t,g=m["".concat(l,".").concat(c)]||m[c]||p[c]||r;return n?o.createElement(g,s(s({ref:a},u),{},{components:n})):o.createElement(g,s({ref:a},u))}));function g(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var r=n.length,s=new Array(r);s[0]=c;var i={};for(var l in a)hasOwnProperty.call(a,l)&&(i[l]=a[l]);i.originalType=e,i[m]="string"==typeof e?e:t,s[1]=i;for(var d=2;d<r;d++)s[d]=n[d];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5170:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var o=n(7462),t=(n(7294),n(3905));const r={sidebar_position:130},s="Historia 11. Primeros componentes vanillaJS: header y router",i={unversionedId:"h11",id:"h11",title:"Historia 11. Primeros componentes vanillaJS: header y router",description:"Antes de comenzar vamos a trabajar sobre una rama nueva que llamaremos vistas.",source:"@site/docs/h11.md",sourceDirName:".",slug:"/h11",permalink:"/vanillaPill/docs/h11",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/h11.md",tags:[],version:"current",sidebarPosition:130,frontMatter:{sidebar_position:130},sidebar:"tutorialSidebar",previous:{title:"Historia 10. Testing de las clases",permalink:"/vanillaPill/docs/h10"},next:{title:"Historia 12. Primeras vistas: Login, Registro, Administraci\xf3n de usuarios",permalink:"/vanillaPill/docs/h12"}},l={},d=[{value:"Componente Header",id:"componente-header",level:2},{value:"formEditarUsuario",id:"formeditarusuario",level:2},{value:"Componente Router",id:"componente-router",level:2},{value:"Propiedad rutas",id:"propiedad-rutas",level:3},{value:"Funcionamiento del enrutador",id:"funcionamiento-del-enrutador",level:3},{value:"M\xe9todo observadorRutas()",id:"m\xe9todo-observadorrutas",level:3},{value:"M\xe9todo router()",id:"m\xe9todo-router",level:3},{value:"Versi\xf3n 2.0 de header",id:"versi\xf3n-20-de-header",level:2},{value:"Componente menuSuperior.js",id:"componente-menusuperiorjs",level:2},{value:"Componente menuUsuario",id:"componente-menuusuario",level:2}],u={toc:d},m="wrapper";function p(e){let{components:a,...n}=e;return(0,t.kt)(m,(0,o.Z)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"historia-11-primeros-componentes-vanillajs-header-y-router"},"Historia 11. Primeros componentes vanillaJS: header y router"),(0,t.kt)("p",null,"Antes de comenzar vamos a trabajar sobre una rama nueva que llamaremos ",(0,t.kt)("strong",{parentName:"p"},"vistas"),"."),(0,t.kt)("h2",{id:"componente-header"},"Componente Header"),(0,t.kt)("p",null,"Cuando comenzamos a construir este proyecto creamos un componente b\xe1sico ",(0,t.kt)("strong",{parentName:"p"},"header")," con la siguiente estructura que inyectamos en la etiqueta ",(0,t.kt)("inlineCode",{parentName:"p"},"<header>")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="header.js"',title:'"header.js"'},"export const header = {\n  template: 'header',\n  script: ()=>{\n    console.log('header)\n  }\n}\n")),(0,t.kt)("p",null,"Para construir nuestro proyecto vamos a partir de los ",(0,t.kt)("strong",{parentName:"p"},"prototipos en html")," que hemos creado en en historias anteriores.\nLo primero ser\xe1 actualizar la propiedad ",(0,t.kt)("strong",{parentName:"p"},"template")," de este componente con el c\xf3digo correspondiente al header de nuestro prototipo html. "),(0,t.kt)("p",null,"Este componente estar\xe1 formado por una barra de navegaci\xf3n b\xe1sica responsive basada en ",(0,t.kt)("strong",{parentName:"p"},"navbar de bootstrap"),".\nEste navbar, a su vez, tendr\xe1:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Un ",(0,t.kt)("strong",{parentName:"li"},"logo")," que nos llevar\xe1 a la p\xe1gina home"),(0,t.kt)("li",{parentName:"ul"},"Un ",(0,t.kt)("strong",{parentName:"li"},"men\xfa superior")," (que ser\xe1 diferente en funci\xf3n del usuario que tenga la sesi\xf3 abierta) "),(0,t.kt)("li",{parentName:"ul"},"Una ",(0,t.kt)("strong",{parentName:"li"},"imagen tipo avatar")," (del usuario logueado) para acceder al ",(0,t.kt)("strong",{parentName:"li"},"men\xfa del usuario"),", que tambi\xe9n ser\xe1 diferente en funci\xf3n del rol del usuario registrado. ")),(0,t.kt)("p",null,"Por el momento vamos a crear un header b\xe1sico. M\xe1s adelante le a\xf1adiremos la l\xf3gica para que detecte el usuario con la sesi\xf3 abierta y actualice las opciones de men\xfa.\nPero antes necesitamos crear la carpeta ",(0,t.kt)("inlineCode",{parentName:"p"},"src/assets")," para almacenar las imagenes del logotipo (",(0,t.kt)("strong",{parentName:"p"},"logo_vanilla.svg"),") y el avatar del usuario cuando la sesi\xf3n est\xe1 cerrada (",(0,t.kt)("strong",{parentName:"p"},"avatar.svg"),")."),(0,t.kt)("p",null,"Nuestro componente header quedar\xe1 as\xed:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="header.js"',title:'"header.js"'},'export const header = {\n  template: `\n  \n\x3c!-- Navbar  --\x3e\n<nav class="navbar navbar-expand-sm bg-light fixed-top">\n  <div class="container-fluid">\n    <a class="navbar-brand d-flex align-items-center" href="/">\n      <img\n        src="/assets/logo_vanilla.svg"\n        alt="Logo"\n        width="30"\n        height="30"\n        class="d-inline-block align-text-top me-2"\n      />\n      <span class=""></span>\n      Vanilla Games\n    </a>\n    \n    <button\n      class="navbar-toggler ms-auto\n      "\n      type="button"\n      data-bs-toggle="collapse"\n      data-bs-target="#navbarNavDropdown"\n      aria-controls="navbarNavDropdown"\n      aria-expanded="false"\n      aria-label="Toggle navigation"\n    >\n      <span class="navbar-toggler-icon"></span>\n    </button>\n    <div class="collapse navbar-collapse" id="navbarNavDropdown">   \n      <ul class="navbar-nav">   \n        <li class="nav-item">\n          <a class="nav-link" href="item1.html">Item 1</a>\n        </li>\n        <li class="nav-item">\n          <a class="nav-link" href="item2.html">Item 2</a>\n        </li>\n        <li><hr /></li>\n        <li class="nav-item">\n          <a class="nav-link" href="item3.html">Item 3</a>\n        </li>\n      </ul>\n      \n    </div>\n    \x3c!-- login --\x3e\n    <ul class="navbar nav me-5">\n      <li class="nav-item dropdown">\n        <a\n          class="nav-link dropdown-toggle"\n          href="#"\n          role="button"\n          data-bs-toggle="dropdown"\n          aria-expanded="false"\n        >\n          <div class="avatarLogin d-inline-block">\n            <img\n              src="/assets/avatar.svg"\n              alt="Logo"\n              width="30"\n              height="30"\n              class="d-inline-block align-text-top"\n            />\n          </div>\n        </a>\n        <ul class="dropdown-menu">\n          <li>\n            <a class="dropdown-item" href="login.html">Login</a>\n          </li>\n          <li>\n            <a class="dropdown-item" href="registro.html">Registrate</a>\n          </li>\n          <li>\n            <a\n              data-bs-toggle="modal"\n              data-bs-target="#editar"\n              class="dropdown-item"\n              href="editarPerfil.html"\n              >Editar perfil</a\n            >\n          </li>\n          <div class="dropdown-divider"></div>\n          <li>\n            <a class="dropdown-item" href="adminUsuarios.html">Admin Usuarios</a>\n          </li>\n        </ul>\n    </ul> \n  </div>\n</nav>\n')),(0,t.kt)("p",null,"Vamos a a\xf1adir ahora al header una ",(0,t.kt)("strong",{parentName:"p"},"ventana modal")," que nos permitir\xe1 editar el perfil del usuario logueado cuando hacemos click sobre la opci\xf3n de men\xfa correspondiente."),(0,t.kt)("p",null,"Para ello vamos a crear un componente ",(0,t.kt)("inlineCode",{parentName:"p"},"formEditarUsuario.js")," que guardaremos en la carpeta ",(0,t.kt)("inlineCode",{parentName:"p"},"componentes")),(0,t.kt)("h2",{id:"formeditarusuario"},"formEditarUsuario"),(0,t.kt)("p",null,"Este componente tendr\xe1 la misma estructura que el anterior, una propiedad template para el c\xf3digo html correspondiente al formulario, y un m\xe9todo script() que incluir\xe1 toda la l\xf3gica (validaci\xf3n y conexi\xf3n con la base de datos), y que programaremos m\xe1s adelante."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="formEditarUsuario.js"',title:'"formEditarUsuario.js"'},'export const formEditarUsuario = {\n  template: `\n    \n\x3c!-- Modal --\x3e\n<div class="modal fade" id="editar">\n<div class="modal-dialog" role="document">\n    <div class="modal-content">\n    <div class="modal-header">\n        <h5 class="modal-title">Editar usuario</h5>\n        <button\n        type="button"\n        class="btn-close"\n        data-bs-dismiss="modal"\n        aria-label="Close"\n        >\n        <span aria-hidden="true"></span>\n        </button>\n    </div>\n    <form class="p-3">\n      <div class="modal-body">\n        \n        <label class="mt-3 form-label" for="nick">Nombre: </label>\n        <input id="nombre" type="text" class="form-control" value="" />\n\n        <label class="mt-3 form-label" for="apellidos">Apellidos: </label>\n        <input id="apellidos" type="text" class="form-control" value="" />\n\n        <label class="mt-3 form-label" for="email">Email</label>\n        <input\n            id="email"\n            type="email"\n            class="form-control"\n            value="email@gmail.com"\n        />\n\n        <label class="mt-3 form-label" for="contrase\xf1a">Contrase\xf1a: </label>\n        <input id="contrase\xf1a" type="password" class="form-control" value="123456" />\n      </div>\n      <div class="modal-footer">\n        <button type="button" class="btn btn-primary">\n        Guardar cambios\n        </button>\n        <button\n        type="button"\n        class="btn btn-secondary"\n        data-bs-dismiss="modal"\n        >\n        Cerrar\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n</div>\n  `\n}\n')),(0,t.kt)("p",null,"Ahora solo falta inyectar este componente en el c\xf3digo html del componente header. Para ello importamos en ",(0,t.kt)("inlineCode",{parentName:"p"},"header.js"),"el componente con ",(0,t.kt)("inlineCode",{parentName:"p"},"import { formEditarUsuario } from './formEditarUsuario'")," e insertamos su template al final del c\xf3digo html de nuestro componente header: "),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="header.js"',title:'"header.js"'},"  ...\n\n    </div>\n  </nav>\n\n  //Modals\n  ${formEditarUsuario.template}\n`\n}\n")),(0,t.kt)("h2",{id:"componente-router"},"Componente Router"),(0,t.kt)("p",null,"Vamos a crear el c\xf3digo neceario para la implementaci\xf3n de un ",(0,t.kt)("strong",{parentName:"p"},"sistema de enrutamiento para una SPA")," (Single Page Application) en vanilla JavaScript."),(0,t.kt)("p",null,"En primer lugar vamos crear un archivo ",(0,t.kt)("inlineCode",{parentName:"p"},"router.js")," con un un objeto llamado ",(0,t.kt)("inlineCode",{parentName:"p"},"enrutador"),". Este objeto tendr\xe1 una propiedad ",(0,t.kt)("inlineCode",{parentName:"p"},"rutas")," y dos m\xe9todos ",(0,t.kt)("inlineCode",{parentName:"p"},"router")," y ",(0,t.kt)("inlineCode",{parentName:"p"},"observadorRutas"),".\nEn la propiedad rutas guardaremos las vistas, el m\xe9todo router se encargar\xe1 de actualizar nuestra p\xe1gina, y el m\xe9todo observadorRutas() detectar\xe1 cuando se produzca un cambio en la barra de navegaci\xf3n para proceder a actualizar la vista."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"export const enrutador = {\n  rutas: {},\n  router: ()=>{}\n  observadorRutas: ()=>{}\n}\n")),(0,t.kt)("h3",{id:"propiedad-rutas"},"Propiedad rutas"),(0,t.kt)("p",null,"La propiedad ",(0,t.kt)("strong",{parentName:"p"},"rutas"),"  a su vez ser\xe1 un objeto, el cual tendr\xe1 una serie de propiedades, una por cada vista. El nombre de las propiedades ser\xe1 el nombre de cada vista, y estas contendr\xe1n ",(0,t.kt)("strong",{parentName:"p"},"el componente importado"),". Por ejemplo, para la vista ",(0,t.kt)("strong",{parentName:"p"},"home")," tendremos: ",(0,t.kt)("inlineCode",{parentName:"p"},"home: import('../vistas/homeVista.js')")),(0,t.kt)("p",null,"Por lo tanto, conforme vayamos creando nuevas vistas las iremos a\xf1adiendo aqu\xed."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="router.js"',title:'"router.js"'},"// Objeto con todas las rutas y su vista asociada\nrutas: {\n    home: import('../vistas/homeVista.js'),\n    // Usuarios\n    adminUsuarios: import('../vistas/admin/adminVista.js'),\n    registro: import('../vistas/registroVista.js'),\n    login: import('../vistas/loginVista.js'),\n    // Proyectos\n    proyectos: import('../vistas/proyectos/proyectosVista.js'),\n    nuevoProyecto: import('../vistas/proyectos/nuevoProyectoVista.js'),\n    editarProyecto: import('../vistas/proyectos/editarProyectoVista.js'),\n    detalleProyecto: import('../vistas/proyectos/detalleProyectoVista.js'),\n    misProyectos: import('../vistas/proyectos/misProyectosVista.js')\n  },\n")),(0,t.kt)("h3",{id:"funcionamiento-del-enrutador"},"Funcionamiento del enrutador"),(0,t.kt)("p",null,"Nuestro sistema de navegaci\xf3n se basar\xe1 en modificar la url utilizando el simbolo ",(0,t.kt)("strong",{parentName:"p"},"#"),". As\xed, cuando queramos navegar a la vista ",(0,t.kt)("strong",{parentName:"p"},"proyectos")," utilizaremos la url ",(0,t.kt)("inlineCode",{parentName:"p"},"www.miproyecto/#/proyectos"),". En realidad no cargaremos nuevas p\xe1ginas, sino que actualizaremos el contenido de la etiqueta ",(0,t.kt)("inlineCode",{parentName:"p"},"<main>"),". "),(0,t.kt)("p",null,"Nuestro sistema de navegaci\xf3n se basar\xe1 en la siguiente metodolog\xeda:"),(0,t.kt)("h3",{id:"m\xe9todo-observadorrutas"},"M\xe9todo observadorRutas()"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"Lanzaremos el m\xe9todo observadorRutas()`en main.js para que detecte cuando eventos:"),(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("strong",{parentName:"li"},"Detectaremos el evento click")," en el cuerpo de nuestro documento\n",(0,t.kt)("inlineCode",{parentName:"li"},"document.body.addEventListener('click', (event)=>{...})")),(0,t.kt)("li",{parentName:"ol"},"Obtendremos el elemento sobre el que se ha hecho click y comprobaremos que se trata de una etiqueta ",(0,t.kt)("inlineCode",{parentName:"li"},"<a>")," ",(0,t.kt)("pre",{parentName:"li"},(0,t.kt)("code",{parentName:"pre",className:"language-js"},"const link = event.target\n  if (link.tagName === 'A') {\n    event.preventDefault()\n"))),(0,t.kt)("li",{parentName:"ol"},"Extraeremos el contenido del atributo ",(0,t.kt)("strong",{parentName:"li"},"href")," (el cual contendr\xe1 el nombre de la vista a cargar)\n",(0,t.kt)("inlineCode",{parentName:"li"},"const href = link.getAttribute('href') ")),(0,t.kt)("li",{parentName:"ol"},"Y actualizaremos la barra de navegaci\xf3n del navegador incluyendo la url en el historial de navegaci\xf3n\n",(0,t.kt)("inlineCode",{parentName:"li"},"window.history.pushState({ path: href }, '', href)")," "),(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("strong",{parentName:"li"},"Detectaremos el evento cambio en la barra de navegaci\xf3n")," "),(0,t.kt)("li",{parentName:"ol"},"Llamaremos al m\xe9todo router() para actualizar la vista",(0,t.kt)("pre",{parentName:"li"},(0,t.kt)("code",{parentName:"pre",className:"language-js"},"window.addEventListener('popstate', (e) => {\n  enrutador.router()\n}) \n")))),(0,t.kt)("hr",null),(0,t.kt)("p",null,"  ",(0,t.kt)("em",{parentName:"p"},"(El m\xe9todo ",(0,t.kt)("strong",{parentName:"em"},"pushState()")," permite agregar un nuevo estado a la pila del historial del navegador. Esto significa que una nueva entrada de historial se agrega a la pila y la URL del navegador se actualiza sin recargar la p\xe1gina.)")),(0,t.kt)("hr",null),(0,t.kt)("p",null,"Para navegar a trav\xe9s de las vistas sin tener que recargar la p\xe1gina utilizaremos el hash ",(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("inlineCode",{parentName:"strong"},"#")),". Por ejemplo, para navegar a la p\xe1gina home la url ser\xeda ",(0,t.kt)("inlineCode",{parentName:"p"},"www.mihost.com/#/home")),(0,t.kt)("h3",{id:"m\xe9todo-router"},"M\xe9todo router()"),(0,t.kt)("p",null,"Ahora vamos a crear el m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"router()"),". Esta ser\xe1 el que maneje el enrutamiento en la aplicaci\xf3n. "),(0,t.kt)("p",null,"Esta funci\xf3n se dispara cada vez que se produce un cambio en la url del navegador.\nDentro del m\xe9todo router() se obtiene el hash de la ruta modificada mediante ",(0,t.kt)("inlineCode",{parentName:"p"},"window.location.hash"),".\nDespu\xe9s, se utiliza este hash resultante para obtener la vista correspondiente del objeto rutas."),(0,t.kt)("p",null,"Con esta l\xf3gica podemos detectar: "),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"cuando se pulsa sobre un enlace (etiqueta ",(0,t.kt)("inlineCode",{parentName:"li"},"<a>"),"), "),(0,t.kt)("li",{parentName:"ul"},"cuando se navega por el historial o "),(0,t.kt)("li",{parentName:"ul"},"cuando se introduce directamente una url en la barra de navegaci\xf3n para poder cargar la vista correspondiente")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"    // Capturamos el hash # que ha cambiado en la url\n    const pathCompleto = window.location.hash\n    // Separamos la ruta del posible parametro que reciba\n    const path = pathCompleto.split('/')[1]\n    const parametro = pathCompleto.split('/')[2]\n")),(0,t.kt)("p",null,"Si la vista existe, se obtiene el objeto de la vista mediante la propiedad ",(0,t.kt)("strong",{parentName:"p"},"default")," de la promesa. "),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"    const componenteVista = await enrutador.rutas[path]\n")),(0,t.kt)("hr",null),(0,t.kt)("p",null,"  ",(0,t.kt)("em",{parentName:"p"},"(Fijate que para acceder a una propiedad del objeto ",(0,t.kt)("strong",{parentName:"em"},"rutas")," no usamos el punto sino los corchetes ",(0,t.kt)("strong",{parentName:"em"},"["),"path",(0,t.kt)("strong",{parentName:"em"},"]"),". De esta manera podemos ",(0,t.kt)("strong",{parentName:"em"},"acceder a una propiedad utilizando una variable")," que contiene el nombre de la propiedad, en lugar del propio nombre de la propiedad)")),(0,t.kt)("hr",null),(0,t.kt)("p",null,"Luego, se inyecta la vista en el elemento main del documento HTML utilizando la propiedad ",(0,t.kt)("strong",{parentName:"p"},"innerHTML")," de document.querySelector('main'). Por \xfaltimo, se ejecuta el ",(0,t.kt)("strong",{parentName:"p"},"script")," de la vista si lo hay."),(0,t.kt)("p",null,"As\xed quedar\xeda el m\xe9todo router: "),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="router"',title:'"router"'},"// M\xe9todo que obtiene la ruta del navegador\n  router: async () => {\n    // Capturamos el hash # que ha cambiado en la url\n    const pathCompleto = window.location.hash\n    // Separamos la ruta del posible parametro que reciba\n    const path = pathCompleto.split('/')[1]\n    const parametro = pathCompleto.split('/')[2]\n\n    // capturamos el componente con ese nombre de la vista\n    // (Usamos las sintaxix objeto[propiedad]) porque el nombre de la propiedad lo tenemos en una variable.)\n    const componenteVista = await enrutador.rutas[path]\n    // Si existe la vista la podremos cargar\n    if (componenteVista) {\n      try {\n        // Obtenemos el objeto del componente (que fu\xe9 exportado como default)\n        const vista = await componenteVista.default\n        // inyectamos vista y ejecutamos su script\n        document.querySelector('main').innerHTML = vista.template\n        // A los script les pasamos el parametro que hemos extraido de la ruta. As\xed podemos pasar, por ejemplo, el id de un proyecto\n        vista.script(parametro)\n      } catch (error) {\n        // Si se produce un error cargamos la vista 404\n        console.log(error)\n      }\n    }\n  },\n")),(0,t.kt)("p",null,"El c\xf3digo completo de nuestro objeto enrutador.js quedar\xeda as\xed:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="enrutador.js"',title:'"enrutador.js"'},"  \nexport const enrutador = {\n\n  // Objeto (diccionario) con todas las rutas y su vista asociada\n  rutas: {\n    home: import('../vistas/homeVista.js'),\n    // Usuarios\n    adminUsuarios: import('../vistas/admin/adminVista.js'),\n    registro: import('../vistas/registroVista.js'),\n    login: import('../vistas/loginVista.js'),\n    // Proyectos\n    proyectos: import('../vistas/proyectos/proyectosVista.js'),\n    nuevoProyecto: import('../vistas/proyectos/nuevoProyectoVista.js'),\n    editarProyecto: import('../vistas/proyectos/editarProyectoVista.js'),\n    detalleProyecto: import('../vistas/proyectos/detalleProyectoVista.js'),\n    misProyectos: import('../vistas/proyectos/misProyectosVista.js'),\n    // Enunciados\n    enunciados: import('../vistas/enunciados/enunciadosVista.js'),\n    nuevoEnunciado: import('../vistas/enunciados/nuevoEnunciadoVista.js'),\n    editarEnunciado: import('../vistas/enunciados/editarEnunciadoVista.js'),\n    detalleEnunciado: import('../vistas/enunciados/detalleEnunciadoVista.js'),\n    misEnunciados: import('../vistas/enunciados/misEnunciadosVista.js'),\n    // Rubricas\n    rubricas: import('../vistas/rubricas/rubricasVista.js'),\n    nuevoRubrica: import('../vistas/rubricas/nuevoRubricaVista.js'),\n    editarRubrica: import('../vistas/rubricas/editarRubricaVista.js'),\n    detalleRubrica: import('../vistas/rubricas/detalleRubricaVista.js'),\n    misRubricas: import('../vistas/rubricas/misRubricasVista.js')\n  },\n\n  // M\xe9todo que obtiene la ruta del navegador\n  router: async () => {\n    // Capturamos el hash # que ha cambiado en la url\n    const pathCompleto = window.location.hash\n    // Separamos la ruta del posible parametro que reciba\n    const path = pathCompleto.split('/')[1]\n    const parametro = pathCompleto.split('/')[2]\n\n    // capturamos el componente con ese nombre de la vista\n    // (Usamos las sintaxix objeto[propiedad]) porque el nombre de la propiedad lo tenemos en una variable.)\n    const componenteVista = await enrutador.rutas[path]\n    // Si existe la vista la podremos cargar\n    if (componenteVista) {\n      try {\n        // Obtenemos el objeto del componente (que fu\xe9 exportado como default)\n        const vista = await componenteVista.default\n        // inyectamos vista y ejecutamos su script\n        document.querySelector('main').innerHTML = vista.template\n        // A los script les pasamos el parametro que hemos extraido de la ruta. As\xed podemos pasar, por ejemplo, el id de un proyecto\n        vista.script(parametro)\n      } catch (error) {\n        // Si se produce un error cargamos la vista 404\n        console.log(error)\n      }\n    }\n  },\n\n  // Capturamos los eventos\n  observadorRutas: () => {\n    document.body.addEventListener('click', event => {\n      // Evitamos que se cargue la p\xe1gina\n\n      const link = event.target\n      if (link.tagName === 'A') {\n        event.preventDefault()\n        // Obtenemos la ruta del enlace sin el .html\n        const href = link.getAttribute('href')\n        // A\xf1adimos la nueva ruta al historial\n\n        // (El m\xe9todo pushState() permite agregar un nuevo estado a la pila del historial del navegador. Esto significa que una nueva entrada de historial se agrega a la pila y la URL del navegador se actualiza sin recargar la p\xe1gina.)\n        window.history.pushState({ path: href }, '', href)\n        // y ejecutamos el router de nuevo para que detecte los cambios con el evento popstate\n        enrutador.router()\n      }\n    })\n\n    // Detectamos cuando alguien navega por el historial con los botones avanzar y retroceder del navegador.\n    window.addEventListener('popstate', (e) => {\n      console.log('evento popstate - Te est\xe1s moviendo por el historial')\n      enrutador.router()\n    })\n  }\n}\n\n")),(0,t.kt)("p",null,"Ahora solo faltar\xeda a\xf1adir a la p\xe1gina principal ",(0,t.kt)("inlineCode",{parentName:"p"},"main.js")," una llamada al m\xe9todo observadorRutas() de nuestro objeto para que escuche los posibles eventos."),(0,t.kt)("p",null,"Tambien vamos a eliminar la inyecci\xf3n manual que hac\xedamos sobre la etiqueta main para usar ",(0,t.kt)("inlineCode",{parentName:"p"},"windows.location = '#/home'")," y asociar as\xed la vista home a la raiz de la app."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="main.js" {17,19}',title:'"main.js"',"{17,19}":!0},"// Import our custom CSS\nimport './scss/styles.scss'\n// Import all of Bootstrap's JS\nimport * as bootstrap from 'bootstrap'\n\n// Importamos componentes header y footer\nimport { header } from './componentes/header'\nimport { footer } from './componentes/footer'\n\n// Importamos la Funci\xf3n para detectar eventos al cargar las vistas\nimport { enrutador } from './componentes/enrutador'\n\ndocument.querySelector('#header').innerHTML = header.template\nheader.script()\ndocument.querySelector('#footer').innerHTML = footer.template\n\nenrutador.observadorRutas()\n// Cargamos la p\xe1gina home\nwindow.location = '#/home'\n")),(0,t.kt)("h2",{id:"versi\xf3n-20-de-header"},"Versi\xf3n 2.0 de header"),(0,t.kt)("p",null,"Para mejorar nuestro header vamos a dividir el componente header  en tres componentes, el ",(0,t.kt)("strong",{parentName:"p"},"header.js")," que contendr\xe1 el html que no cambia nunca, y dos componentes m\xe1s: ",(0,t.kt)("strong",{parentName:"p"},"menuSuperior.js")," y ",(0,t.kt)("strong",{parentName:"p"},"menuUsuario.js")," que inyectaremos en header."),(0,t.kt)("p",null,"Estos componentes contendr\xe1n el c\xf3digo correspondiente a los men\xfas, que ser\xe1 diferente, dependiendo del usuario que est\xe9 logueado."),(0,t.kt)("p",null,"Tambi\xe9n vamos a a\xf1adir la l\xf3gica necesaria para detectar si hay una sesi\xf3n abierta y capturar los datos del usuario (su perfil).Entonces llamaremos a los m\xe9todos ",(0,t.kt)("inlineCode",{parentName:"p"},"script()")," de los componentes men\xfa. \xc9Stos, dependiendo del rol del usuario, mostrar\xe1n los items correspondientes. "),(0,t.kt)("p",null,"F\xedjate que aqu\xed ya usamos la clase User para capturar el usuario que tiene la sesi\xf3n abierta. "),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"const usuarioLogueado = await User.getUser() \n")),(0,t.kt)("p",null,"Si hay sesi\xf3n abierta capturamos los datos de perfil de este usuario (donde tenemos el rol como propiedad) y se lo pasamos a los componentes de men\xfa."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"        const perfilLogueado = await Perfil.getByUserId(usuarioLogueado.id)\n        // cargamos el men\xfa superior y usuario para su rol\n        menuSuperior.script(perfilLogueado)\n        menuUsuario.script(perfilLogueado)\n")),(0,t.kt)("p",null,"Esta ser\xeda la l\xf3gico de header:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title:"header.js"','title:"header.js"':!0},"template : '...',\nscript: async () => {\n    try {\n      // Capturamos los datos del usuario logueado\n      const usuarioLogueado = await User.getUser()\n      if (usuarioLogueado) {\n        const perfilLogueado = await Perfil.getByUserId(usuarioLogueado.id)\n        // cargamos el men\xfa superior y usuario para su rol\n        menuSuperior.script(perfilLogueado)\n        menuUsuario.script(perfilLogueado)\n      } else {\n        menuSuperior.script('anonimo')\n        menuUsuario.script('anonimo')\n      }\n    } catch (error) {\n      // alert('No he podido cargar el usuario logueado')\n    }\n  }\n")),(0,t.kt)("p",null,"Y aqu\xed te dejo todo el c\xf3digo del componente header actualizado: "),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="header.js"',title:'"header.js"'},'import { formEditarPerfil } from \'./formEditarPerfil\'\nimport { User } from \'../bd/user\'\nimport { Perfil } from \'../bd/perfil\'\nimport { menuSuperior } from \'./menuSuperior\'\nimport { menuUsuario } from \'./menuUsuario\'\n\nexport const header = {\n  template: `\n  \n\x3c!-- Navbar  --\x3e\n<nav class="navbar navbar-expand-sm bg-light fixed-top">\n  <div class="container-fluid">\n    <a class="navbar-brand d-flex align-items-center" href="#/home">\n      <img\n        src="/assets/logo_vanilla.svg"\n        alt="Logo"\n        width="30"\n        height="30"\n        class="d-inline-block align-text-top me-2"\n      />\n      <span class=""></span>\n      Vanilla Games\n    </a>\n    \n    <button\n      class="navbar-toggler ms-auto\n      "\n      type="button"\n      data-bs-toggle="collapse"\n      data-bs-target="#navbarNavDropdown"\n      aria-controls="navbarNavDropdown"\n      aria-expanded="false"\n      aria-label="Toggle navigation"\n    >\n    <span class="navbar-toggler-icon"></span>\n    </button>\n    \x3c!-- Men\xfa superior --\x3e\n    ${menuSuperior.template}\n    \x3c!-- Menu usuario --\x3e\n    ${menuUsuario.template}\n  </div>\n</nav>\n\n//Modals\n${formEditarPerfil.template}\n  `,\n  script: async () => {\n    try {\n      // Capturamos los datos del usuario logueado\n      const usuarioLogueado = await User.getUser()\n      if (usuarioLogueado) {\n        const perfilLogueado = await Perfil.getByUserId(usuarioLogueado.id)\n        // cargamos el men\xfa superior y usuario para su rol\n        menuSuperior.script(perfilLogueado)\n        menuUsuario.script(perfilLogueado)\n      } else {\n        menuSuperior.script(\'anonimo\')\n        menuUsuario.script(\'anonimo\')\n      }\n    } catch (error) {\n      // alert(\'No he podido cargar el usuario logueado\')\n    }\n  }\n}\n')),(0,t.kt)("h2",{id:"componente-menusuperiorjs"},"Componente menuSuperior.js"),(0,t.kt)("p",null,"El componente ",(0,t.kt)("strong",{parentName:"p"},"menuSuperior")," estar\xe1 formado por un componente de bootstrap navbar.\nEn la l\xf3gica del componente encontramos una propiedad que guarda los diferentes items ",(0,t.kt)("inlineCode",{parentName:"p"},"<li>")," en funci\xf3n del rol del usuario logueado. Esta propiedad nos permite inyectar en los men\xfas correspondientes el c\xf3digo que corresponda"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"// Insertamos los items del men\xfa seg\xfan el rol\n    document.querySelector('#menuSuperior').innerHTML = items[rol]\n")),(0,t.kt)("p",null,"Este es el c\xf3digo del componente menuSuperior.js:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="menuSuperior.js"',title:'"menuSuperior.js"'},'export const menuSuperior = {\n  template: `\n  <div class="collapse navbar-collapse" id="navbarNavDropdown">\n      <ul id="menuSuperior" class="navbar-nav">\n        <li class="nav-item">\n        <a class="nav-link" href="#/proyectos">Proyectos</a>\n        </li>\n        \n      </ul>\n    </div>\n  `,\n  script: (perfilLogueado) => {\n    const items = {\n      anonimo: `\n      <li class="nav-item">\n        <a class="nav-link" href="#/proyectos">Proyectos</a>\n      </li>\n      <li class="nav-item">\n        <a class="nav-link" href="#/recursos">Recursos</a>\n      </li>\n      `,\n      registrado: `\n      <li class="nav-item">\n        <a class="nav-link" href="#/proyectos">Proyectos</a>\n      </li>\n      <li class="nav-item">\n        <a class="nav-link" href="#/recursos">Recursos</a>\n      </li>\n      <li><hr /></li>\n      <li class="nav-item">\n        <a class="nav-link" href="#/adminUsuarios">Admin</a>\n      </li>\n      `,\n      alumno: `\n      <li class="nav-item">\n        <a class="nav-link" href="#/proyectos">Proyectos</a>\n      </li>\n      <li class="nav-item">\n        <a class="nav-link" href="#/recursos">Recursos</a>\n      </li>\n      <li><hr /></li>\n      <li class="nav-item">\n        <a class="nav-link" href="#/adminUsuarios">Admin</a>\n      </li>\n      `,\n      profesor: `\n      <li class="nav-item">\n        <a class="nav-link" href="#/proyectos">Proyectos</a>\n      </li>\n      <li class="nav-item">\n        <a class="nav-link" href="#/recursos">Recursos</a>\n      </li>\n      <li><hr /></li>\n      <li class="nav-item">\n        <a class="nav-link" href="#/adminUsuarios">Admin</a>\n      </li>\n      `,\n      admin: `\n      <li class="nav-item">\n        <a class="nav-link" href="#/proyectos">Proyectos</a>\n      </li>\n      <li class="nav-item">\n        <a class="nav-link" href="#/recursos">Recursos</a>\n      </li>\n      <li><hr /></li>\n      <li class="nav-item">\n        <a class="nav-link" href="#/adminUsuarios">Admin</a>\n      </li>\n      `\n    }\n    if (perfilLogueado !== \'anonimo\') {\n      const rol = perfilLogueado.rol\n      // Insertamos los items del men\xfa seg\xfan el rol\n      document.querySelector(\'#menuSuperior\').innerHTML = items[rol]\n    } else {\n      document.querySelector(\'#menuSuperior\').innerHTML = items[\'anonimo\']\n    }\n  }\n}\n\n\n')),(0,t.kt)("h2",{id:"componente-menuusuario"},"Componente menuUsuario"),(0,t.kt)("p",null,"Este componente ser\xe1 similar al anterior, solo que, adem\xe1s de las opciones de men\xfa, se encarga de inyectar la imagen del usuario logueado y su mail y rol, adem\xe1s de implementar el logout mediante la clase ",(0,t.kt)("strong",{parentName:"p"},"User")," "),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"  document.querySelector('.liLogout').addEventListener('click', async (e) => {\n    e.preventDefault()\n    // Cerramos sesi\xf3n utilizando el m\xe9todo de logout de nuestra clase User\n    await User.logout()\n    header.script()\n    // Cargamos la p\xe1gina home\n    window.location.href = '/#/home'\n  })\n")),(0,t.kt)("p",null,"Aqu\xed tienes el c\xf3digo completo:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="menuUsuario.js"',title:'"menuUsuario.js"'},'import { User } from \'../bd/user\'\nimport { header } from \'./header\'\nexport const menuUsuario = {\n  template: `\n  <ul class="navbar nav me-5">\n      <li class="nav-item dropdown">\n        <a\n          class="nav-link dropdown-toggle"        \n          role="button"\n          data-bs-toggle="dropdown"\n          aria-expanded="false"\n        >\n          <div class="avatarLogin d-inline-block">\n          <span id="emailUsuarioLogueado" class="pe-3 text-dark"></span>\n            <img\n              id="imgAvatar"\n              src="/assets/avatar.svg"\n              alt="Logo"\n              width="30"\n              height="30"\n              class="d-inline-block align-text-top"\n            />\n          </div>\n        </a>\n        \n        \x3c!-- Men\xfa usuario --\x3e\n        <ul id="menuUsuario" class="dropdown-menu">\n          <li class="text-center" id="rolUsuarioLogueado">\n            an\xf3nimo\n          </li>\n          <li>\n            <a class="liLogin dropdown-item" href="#/login">Login</a>\n          </li>\n          \n          <li>\n            <a class="liRegistro dropdown-item" href="#/registro">Registrate</a>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  `,\n  script: (perfilLogueado) => {\n    const items = {\n      anonimo: `\n        <li class="text-center" id="rolUsuarioLogueado">\n            an\xf3nimo\n        </li>\n        <li>\n        <a class="liLogin dropdown-item" href="#/login">Login</a>\n        </li>\n        <li>\n          <a class="liRegistro dropdown-item" href="#/registro">Registrate</a>\n        </li>\n        \n      `,\n      registrado: `\n      <li class="text-center" id="rolUsuarioLogueado">\n        an\xf3nimo\n      </li>\n      <li>\n        <a\n          id="editarPerfil"\n          data-bs-toggle="modal"\n          data-bs-target="#editar"\n          class="dropdown-item"\n          href="#/editarPerfil"\n          >Editar perfil</a\n        >\n      </li>      \n      <li><a class="liLogout dropdown-item" href="">Logout</a></li>\n      `,\n      alumno: `\n      <li class="text-center" id="rolUsuarioLogueado">\n        an\xf3nimo\n      </li>\n      <li>\n        <a\n          id="editarPerfil"\n          data-bs-toggle="modal"\n          data-bs-target="#editar"\n          class="dropdown-item"\n          href="#/editarPerfil"\n          >Editar perfil</a\n        >\n      </li>\n      <li>\n        <a class="liMisProyectos dropdown-item d-none" href="#/misProyectos">Mis Proyectos</a>\n      </li>\n      <div class="dropdown-divider"></div>\n      <li><a class="liLogout d-none dropdown-item" href="">Logout</a></li>\n      `,\n      profesor: `\n      <li class="text-center" id="rolUsuarioLogueado">\n        an\xf3nimo\n      </li>\n      <li>\n        <a class="liRegistro dropdown-item" href="#/registro">Registrate</a>\n      </li>\n      <li>\n        <a\n          id="editarPerfil"\n          data-bs-toggle="modal"\n          data-bs-target="#editar"\n          class="dropdown-item"\n          href="#/editarPerfil"\n          >Editar perfil</a\n        >\n      </li>\n      <div class="dropdown-divider"></div>\n      <li>\n        <a class="liMisProyectos dropdown-item d-none" href="#/misProyectos">Mis Proyectos</a>\n      </li>\n      <li>\n        <a class="dropdown-item" href="#/adminUsuarios">Admin Usuarios</a>\n      </li>\n      <li>\n        <a class="dropdown-item" href="#/enunciados">Enunciados</a>\n      </li>\n      <li>\n        <a class="dropdown-item" href="#/rubricas">Rubricas</a>\n      </li>\n      <li><a class="liLogout d-none dropdown-item" href="">Logout</a></li>\n      `,\n      admin: `\n      <li class="text-center" id="rolUsuarioLogueado">\n        an\xf3nimo\n      </li>\n      <li>\n        <a\n          id="editarPerfil"\n          data-bs-toggle="modal"\n          data-bs-target="#editar"\n          class="dropdown-item"\n          href="#/editarPerfil"\n          >Editar perfil</a\n        >\n      </li>\n      <div class="dropdown-divider"></div>\n      <li>\n        <a class="dropdown-item" href="#/adminUsuarios">Admin Usuarios</a>\n      </li>\n      <li>\n        <a class="dropdown-item" href="#/enunciados">Enunciados</a>\n      </li>\n      <li>\n        <a class="dropdown-item" href="#/rubricas">Rubricas</a>\n      </li>\n      <li><a class="liLogout dropdown-item" href="">Logout</a></li>\n      `\n    }\n    console.log(perfilLogueado)\n    let rol = \'anonimo\'\n    if (perfilLogueado.rol) rol = perfilLogueado.rol\n    console.log(\'cargando menu\', rol)\n\n    // Insertamos los items del men\xfa seg\xfan el rol\n    document.querySelector(\'#menuUsuario\').innerHTML = items[rol]\n\n    if (rol !== \'anonimo\') {\n      // Leemos la url de la imagen que est\xe1 en la carpeta user_id del storage de supabase\n      const imgAvatar = perfilLogueado.avatar\n      // Insertamos la foto del avatar\n      document.querySelector(\'#imgAvatar\').src = imgAvatar\n      // Insertamos el email del usuario\n      document.querySelector(\'#emailUsuarioLogueado\').innerHTML = perfilLogueado.email\n      // Insertamos el rol\n      document.querySelector(\'#rolUsuarioLogueado\').innerHTML = perfilLogueado.rol\n\n      document.querySelector(\'.liLogout\').addEventListener(\'click\', async (e) => {\n        e.preventDefault()\n        // Cerramos sesi\xf3n utilizando el m\xe9todo de logout de nuestra clase User\n        await User.logout()\n        header.script()\n        // Cargamos la p\xe1gina home\n        window.location.href = \'/#/home\'\n      })\n    }\n    else{\n      const imgAvatar = \'/assets/avatar.svg\'\n      // Insertamos la foto del avatar\n      document.querySelector(\'#imgAvatar\').src = imgAvatar\n      // Insertamos el email del usuario\n      document.querySelector(\'#emailUsuarioLogueado\').innerHTML = \'\'\n    }\n\n    // Gestionamos click en editar perfil\n    document.querySelector(\'#editarPerfil\').addEventListener(\'click\', (e) => {\n      e.preventDefault()\n      // formEditarPerfil.script()\n    })\n  }\n}\n\n\n')))}p.isMDXComponent=!0}}]);