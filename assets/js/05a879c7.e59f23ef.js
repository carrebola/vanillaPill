"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8104],{3905:(e,a,n)=>{n.d(a,{Zo:()=>u,kt:()=>b});var s=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function t(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);a&&(s=s.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,s)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?t(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):t(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,s,r=function(e,a){if(null==e)return{};var n,s,r={},t=Object.keys(e);for(s=0;s<t.length;s++)n=t[s],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(s=0;s<t.length;s++)n=t[s],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=s.createContext({}),p=function(e){var a=s.useContext(i),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},u=function(e){var a=p(e.components);return s.createElement(i.Provider,{value:a},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return s.createElement(s.Fragment,{},a)}},m=s.forwardRef((function(e,a){var n=e.components,r=e.mdxType,t=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,b=c["".concat(i,".").concat(m)]||c[m]||d[m]||t;return n?s.createElement(b,o(o({ref:a},u),{},{components:n})):s.createElement(b,o({ref:a},u))}));function b(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var t=n.length,o=new Array(t);o[0]=m;var l={};for(var i in a)hasOwnProperty.call(a,i)&&(l[i]=a[i]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<t;p++)o[p]=n[p];return s.createElement.apply(null,o)}return s.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5410:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>o,default:()=>d,frontMatter:()=>t,metadata:()=>l,toc:()=>p});var s=n(7462),r=(n(7294),n(3905));const t={sidebar_position:50},o="Historia 3: Conexi\xf3n asincrona con el servicio backend de supabase. Pruebas I (API DOCS)",l={unversionedId:"PAPELERA ANTERIOR/otros supabase/h3",id:"PAPELERA ANTERIOR/otros supabase/h3",title:"Historia 3: Conexi\xf3n asincrona con el servicio backend de supabase. Pruebas I (API DOCS)",description:"Tarea 1 - Rama de pruebas",source:"@site/docs/PAPELERA ANTERIOR/otros supabase/h3.md",sourceDirName:"PAPELERA ANTERIOR/otros supabase",slug:"/PAPELERA ANTERIOR/otros supabase/h3",permalink:"/vanillaPill/docs/PAPELERA ANTERIOR/otros supabase/h3",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/PAPELERA ANTERIOR/otros supabase/h3.md",tags:[],version:"current",sidebarPosition:50,frontMatter:{sidebar_position:50},sidebar:"tutorialSidebar",previous:{title:"ORM",permalink:"/vanillaPill/docs/PAPELERA ANTERIOR/ORM"},next:{title:"Historia 4: Usuarios en Supabase. Registro, Login/logout y detalle user. Pruebas II (API DOCS)",permalink:"/vanillaPill/docs/PAPELERA ANTERIOR/otros supabase/h4"}},i={},p=[{value:"Tarea 1 - Rama de pruebas",id:"tarea-1---rama-de-pruebas",level:2},{value:"Tarea 2 - Conexi\xf3n con la base de datos",id:"tarea-2---conexi\xf3n-con-la-base-de-datos",level:2},{value:"Tarea 3 - Prueba de consulta usando la api de js. (Leer perfiles. Agregar perfil)",id:"tarea-3---prueba-de-consulta-usando-la-api-de-js-leer-perfiles-agregar-perfil",level:2},{value:"Tarea 4 - Invocando funciones de postgreeSQL desde JS. (LeerProyectosDetalle)",id:"tarea-4---invocando-funciones-de-postgreesql-desde-js-leerproyectosdetalle",level:2}],u={toc:p},c="wrapper";function d(e){let{components:a,...n}=e;return(0,r.kt)(c,(0,s.Z)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"historia-3-conexi\xf3n-asincrona-con-el-servicio-backend-de-supabase-pruebas-i-api-docs"},"Historia 3: Conexi\xf3n asincrona con el servicio backend de supabase. Pruebas I (API DOCS)"),(0,r.kt)("h2",{id:"tarea-1---rama-de-pruebas"},"Tarea 1 - Rama de pruebas"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"En primer lugar vamos a crear una rama de pruebas con github ",(0,r.kt)("inlineCode",{parentName:"li"},"pruebasSupabase")),(0,r.kt)("li",{parentName:"ul"},"Creamos una nueva vista llamada pruebaSupabase.js con template y script")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="pruebaSupabase.js"',title:'"pruebaSupabase.js"'},"export const pruebaSupabase = {\n    template: `<h1>Pruebas Supabase</h1>`,\n    script: ()=>{\n      console.log('Cargamos vista pruebas supabase')\n    }\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"En main.js cargamos esta vista y ejecutarmos el script para que se cargue la l\xf3gica de la vista.No te olvides de importar el componente")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="main.js"',title:'"main.js"'},"import { pruebaSupabase } from './vistas/pruebaSupabase';\n\ndocument.querySelector('main').innerHTML = pruebaSupabase.template\npruebaSupabase.script()\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Volvemos a la vista para hacer las pruebas de conexi\xf3n con supabase")),(0,r.kt)("h2",{id:"tarea-2---conexi\xf3n-con-la-base-de-datos"},"Tarea 2 - Conexi\xf3n con la base de datos"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Siguiendo los pasos de la documentaci\xf3n de supabase instalamos supabase con ",(0,r.kt)("inlineCode",{parentName:"li"},"npm install --save @supabase/supabase-js")),(0,r.kt)("li",{parentName:"ul"},"Copiamos el c\xf3digo para realizar la conexi\xf3n:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="pruebasSupabase.js"',title:'"pruebasSupabase.js"'},"import { createClient } from '@supabase/supabase-js'\n\nexport const pruebaSupabase = {\n    template: `<h1>Pruebas Supabase</h1>`,\n    script: ()=>{\n        console.log('purebas supabase');\n        const supabaseUrl = 'https://ptnlczuiuaotrscavujw.supabase.co'\n        const supabaseKey = 'eXXXXXXXXXXXXXXXXXXXXXXXJ9.eyJpc3MiOiJzdXBhXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXn1N8T0Uj9DkNjIecs'\n        const supabase = createClient(supabaseUrl, supabaseKey)\n        console.log(supabase);\n    }\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Mediante ",(0,r.kt)("inlineCode",{parentName:"p"},"procress.env.UPABASE_KEY"),"intentamos capturar la key guardada en la variable SUPABASE_KEY del servidor.\nComo en este caso no lo hemos desplegado todav\xeda en ningun servidor, a\xf1adiremos la key en este mismo c\xf3digo.\nRecuerda que la key la puedes encontrar en la configuraci\xf3n del proyecto.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Si todo ha ido bien la conexi\xf3n es correcta podr\xe1s ver los datos en la consola."))),(0,r.kt)("h2",{id:"tarea-3---prueba-de-consulta-usando-la-api-de-js-leer-perfiles-agregar-perfil"},"Tarea 3 - Prueba de consulta usando la api de js. (Leer perfiles. Agregar perfil)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Vamos a mostrar los datos de una tabla utilizando la api que nos suministra supabase.\nEn API Docs selecciona la tabla perfiles y busca el c\xf3digo para leer todos los registros:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"//READ ALL ROWS\nlet { data: perfiles, error } = await supabase\n  .from('perfiles')\n  .select('*')\n")),(0,r.kt)("p",null,"Recuerda que todo este c\xf3digo es asincron por lo que es necesario poner ",(0,r.kt)("inlineCode",{parentName:"p"},"await"),"delante de las asignaciones para que el proceso espere a que se resuelva la promesa antes de continuar con la siguiente sentencia.\nPara poder utilizar ",(0,r.kt)("inlineCode",{parentName:"p"},"await"),"en el c\xf3digo necesitamos que \xe9ste est\xe9 dentro de una funci\xf3n asignada como ",(0,r.kt)("inlineCode",{parentName:"p"},"async"),".\nPor lo tanto nuestro script quedar\xeda de las siguiente manera: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="pruebaSupabased.js"',title:'"pruebaSupabased.js"'},"import { createClient } from '@supabase/supabase-js'\n\nexport const pruebaSupabase = {\n    template: `<h1>Pruebas Supabase</h1>`,\n    script: async ()=>{\n        console.log('purebas supabase');\n        //Creando la conexi\xf3n con supabase\n        const supabaseUrl = 'https://ptnlczuiuaotrscavujw.supabase.co'\n        const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB0bmxjenVpdWFvdHJzY2F2dWp3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2NzcxNzY2MTAsImV4cCI6MTk5Mjc1MjYxMH0.CaOtS_kudjpUTJlnV4VfNU_5tZn1N8T0Uj9DkNjIecs'\n        const supabase = createClient(supabaseUrl, supabaseKey)\n        //console.log(supabase);\n\n        //Consulta a la tabla perfiles\n        const verTodosLosPerfiles = async ()=>{\n        \n                let { data: perfiles, error } = await supabase\n                .from('perfiles')\n                .select('*')\n                return perfiles\n                \n        }\n        let datos = await verTodosLosPerfiles(); \n        console.log(datos);\n        \n    }\n}\n")),(0,r.kt)("p",null,"Lo copiamos en el script de la aplicaci\xf3n, y mostramos los datos por la consola. Ver\xedamos un resultado parecido a este:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="console.log"',title:'"console.log"'},"(5) [{\u2026}, {\u2026}, {\u2026}, {\u2026}, {\u2026}]\n0\n: \n{id: 1, created_at: '2023-02-23T18:44:45.301437+00:00', nombre: 'Carlos', user_id: '2612fe82-aec8-485c-aa8c-e9032631c2bf'}\n1\n\n[[Prototype]]\n: \nArray(0)\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Vamos ahora a registrar un nuevo perfil. El proceso ser\xe1 el mismo. Buscamos el script en la documentaci\xf3n de la api")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"//INSERT A ROW\nconst { data, error } = await supabase\n  .from('perfiles')\n  .insert([\n    { some_column: 'someValue', other_column: 'otherValue' },\n  ])\n")),(0,r.kt)("p",null,"Y lo modificamos para que se inserte un nuevo perfil con el campo 'nombre' con el valor 'ejemplo'.\nA continuaci\xf3n volvemos a llamar a la funci\xf3n que nos muestra la tabla perfiles para comprobar que se ha a\xf1adido un nuevo usuario.\nEl c\xf3digo quedar\xeda as\xed: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="pruebaSupabase.js"',title:'"pruebaSupabase.js"'},"import { createClient } from '@supabase/supabase-js'\n\nexport const pruebaSupabase = {\n    template: `<h1>Pruebas Supabase</h1>`,\n    script: async ()=>{\n        console.log('purebas supabase');\n        //Creando la conexi\xf3n con supabase\n        const supabaseUrl = 'https://ptnlczuiuaotrscavujw.supabase.co'\n        const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB0bmxjenVpdWFvdHJzY2F2dWp3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2NzcxNzY2MTAsImV4cCI6MTk5Mjc1MjYxMH0.CaOtS_kudjpUTJlnV4VfNU_5tZn1N8T0Uj9DkNjIecs'\n        const supabase = createClient(supabaseUrl, supabaseKey)\n        //console.log(supabase);\n\n        //Consulta a la tabla perfiles\n        const verTodosLosPerfiles = async ()=>{\n        \n                let { data: perfiles, error } = await supabase\n                .from('perfiles')\n                .select('*')\n                return perfiles\n                \n        }\n        let datos = await verTodosLosPerfiles(); \n        console.log(datos);\n        \n\n        //Agregar un nuevo perfil\n        const agregarPerfil = async ()=>{\n            //INSERT A ROW\n            const { data, error } = await supabase\n            .from('perfiles')\n            .insert([\n                { nombre: 'ejemplo'},\n            ])\n        }\n        await agregarPerfil()\n        datos = await verTodosLosPerfiles(); \n        console.log(datos);\n    }\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="console.log"',title:'"console.log"'},"(5) [{\u2026}, {\u2026}, {\u2026}, {\u2026}, {\u2026}]\n0\n: \n{id: 1, created_at: '2023-02-23T18:44:45.301437+00:00', nombre: 'Carlos', user_id: '2612fe82-aec8-485c-aa8c-e9032631c2bf'}\n1\n: \n{id: 2, created_at: '2023-02-28T16:02:08.22954+00:00', nombre: 'ejemplo', user_id: null}\n2\n: \n{id: 3, created_at: '2023-02-28T16:02:37.811498+00:00', nombre: 'ejemplo', user_id: null}\n3\n\n[[Prototype]]\n: \nArray(0)\n")),(0,r.kt)("h2",{id:"tarea-4---invocando-funciones-de-postgreesql-desde-js-leerproyectosdetalle"},"Tarea 4 - Invocando funciones de postgreeSQL desde JS. (LeerProyectosDetalle)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Vamos a utilizar ahora una funci\xf3n de postgreSQL, en concreto la funci\xf3n `proyectosdetalle' que creamos en la primera sesi\xf3n. Recordemos que esta es una consulta compleja ya que implica varias tablas.\nPara ello vamos a API Docs y hacemos click sobre nuestra funci\xf3n que encontraremos en la lista de funciones 'Stored Procedures' y copiamos el c\xf3digo javascript que aparece en la parte superior derecha y lo pegamos en nuestra funci\xf3n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="API Docs supabase"',title:'"API',Docs:!0,'supabase"':!0},"//INVOKE FUNCTION\nconst leerProyectosDetalle = async ()=>{\n  let { data, error } = await supabase\n  .rpc('proyectosdetalle')\n\n  if (error) console.error(error)\n  else console.log(data)\n}\nleerProyectosDetalle()\n")),(0,r.kt)("p",null,"si todo ha ido bien tendremos en consola el resultado de la consula:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="console.log"',title:'"console.log"'},"0\n: \n{nombre_usuario: 'Carlos', nombre_proyecto: 'Practica 1', explicacion: 'Practica con supabase y un frontEnd en vanillaJS'}\n1\n: \n{nombre_usuario: 'Carlos', nombre_proyecto: 'Pr\xe1ctica 2', explicacion: 'Practica con git'}\n2\n: \n{nombre_usuario: 'ejemplo', nombre_proyecto: 'Practica 1', explicacion: 'Practica con supabase y un frontEnd en vanillaJS'}\n")))}d.isMDXComponent=!0}}]);