"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5236],{3905:(e,s,o)=>{o.d(s,{Zo:()=>u,kt:()=>f});var i=o(7294);function a(e,s,o){return s in e?Object.defineProperty(e,s,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[s]=o,e}function n(e,s){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);s&&(i=i.filter((function(s){return Object.getOwnPropertyDescriptor(e,s).enumerable}))),o.push.apply(o,i)}return o}function r(e){for(var s=1;s<arguments.length;s++){var o=null!=arguments[s]?arguments[s]:{};s%2?n(Object(o),!0).forEach((function(s){a(e,s,o[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(s){Object.defineProperty(e,s,Object.getOwnPropertyDescriptor(o,s))}))}return e}function t(e,s){if(null==e)return{};var o,i,a=function(e,s){if(null==e)return{};var o,i,a={},n=Object.keys(e);for(i=0;i<n.length;i++)o=n[i],s.indexOf(o)>=0||(a[o]=e[o]);return a}(e,s);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)o=n[i],s.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var c=i.createContext({}),l=function(e){var s=i.useContext(c),o=s;return e&&(o="function"==typeof e?e(s):r(r({},s),e)),o},u=function(e){var s=l(e.components);return i.createElement(c.Provider,{value:s},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var s=e.children;return i.createElement(i.Fragment,{},s)}},m=i.forwardRef((function(e,s){var o=e.components,a=e.mdxType,n=e.originalType,c=e.parentName,u=t(e,["components","mdxType","originalType","parentName"]),d=l(o),m=a,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||n;return o?i.createElement(f,r(r({ref:s},u),{},{components:o})):i.createElement(f,r({ref:s},u))}));function f(e,s){var o=arguments,a=s&&s.mdxType;if("string"==typeof e||a){var n=o.length,r=new Array(n);r[0]=m;var t={};for(var c in s)hasOwnProperty.call(s,c)&&(t[c]=s[c]);t.originalType=e,t[d]="string"==typeof e?e:a,r[1]=t;for(var l=2;l<n;l++)r[l]=o[l];return i.createElement.apply(null,r)}return i.createElement.apply(null,o)}m.displayName="MDXCreateElement"},3050:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>n,metadata:()=>t,toc:()=>l});var i=o(7462),a=(o(7294),o(3905));const n={},r="Definici\xf3n de requisitos: \xbfQu\xe9 es y c\xf3mo aplicarlo? | Gu\xeda completa",t={unversionedId:"Recursos/Definici\xf3n de requisitos",id:"Recursos/Definici\xf3n de requisitos",title:"Definici\xf3n de requisitos: \xbfQu\xe9 es y c\xf3mo aplicarlo? | Gu\xeda completa",description:"Introducci\xf3n:",source:"@site/docs/Recursos/Definici\xf3n de requisitos.md",sourceDirName:"Recursos",slug:"/Recursos/Definici\xf3n de requisitos",permalink:"/vanillaPill/docs/Recursos/Definici\xf3n de requisitos",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Recursos/Definici\xf3n de requisitos.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MI CHULETA:",permalink:"/vanillaPill/docs/Recursos/chuleta"}},c={},l=[],u={toc:l},d="wrapper";function p(e){let{components:s,...o}=e;return(0,a.kt)(d,(0,i.Z)({},u,o,{components:s,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"definici\xf3n-de-requisitos-qu\xe9-es-y-c\xf3mo-aplicarlo--gu\xeda-completa"},"Definici\xf3n de requisitos: \xbfQu\xe9 es y c\xf3mo aplicarlo? | Gu\xeda completa"),(0,a.kt)("p",null,"Introducci\xf3n:\nPara entregar un proyecto exitoso, es esencial que los requisitos est\xe9n definidos de manera correcta y precisa. Sin embargo, definir los requisitos puede ser complicado: si lo hace mal, su proyecto sufrir\xe1 retrasos en el cronograma, desperdicio de recursos o insatisfacci\xf3n del cliente. En esta gu\xeda, veremos cu\xe1l es la definici\xf3n de requisitos y c\xf3mo puede aplicarla en sus propios proyectos. \xa1Empecemos!"),(0,a.kt)("p",null,"\xbfQu\xe9 son los requerimientos?\nLos requisitos de un proyecto de software son las funciones, caracter\xedsticas y restricciones que debe cumplir el producto final. En otras palabras, los requisitos definen qu\xe9 debe hacer el software, c\xf3mo debe verse y las condiciones que deben cumplirse para que se considere exitoso."),(0,a.kt)("p",null,"Recopilaci\xf3n de requisitos es fundamental para poder crear un producto que satisfaga las necesidades del consumidor o clienta. Es importante tener en cuenta que los requisitos pueden cambiar a lo largo del curso de un proyecto, por lo que es importante contar con un mecanismo para rastrear y administrar estos cambios."),(0,a.kt)("p",null,"Tipos de requisitos:\nEn t\xe9rminos generales, hay dos tipos de requisitos:"),(0,a.kt)("p",null,"Requisitos del sistema \u2013 Los requisitos del sistema se pueden llamar la versi\xf3n ampliada de los requisitos del usuario. Los requisitos del sistema act\xfaan como punto de partida para cualquier nuevo dise\xf1o de sistema. Estos requisitos son una descripci\xf3n detallada de los requisitos del usuario que el sistema debe satisfacer.\nRequisitos de usuario \u2013 El requisito del usuario es una combinaci\xf3n de requisitos funcionales y no funcionales. Estos requisitos de usuario deben dise\xf1arse de tal manera que sean f\xe1cilmente comprensibles para los usuarios que no tienen ning\xfan tipo de conocimiento t\xe9cnico. Por lo tanto, deben estar escritos en lenguaje natural utilizando tablas, formularios y diagramas simples. Adem\xe1s, aseg\xfarese de que el documento no tenga detalles sobre el dise\xf1o del sistema, el software o las anotaciones formales.\nRequisitos funcionales vs no funcionales:\nRequisitos funcionales , como su nombre indica, describen las funciones del sistema a dise\xf1ar. Es una descripci\xf3n de lo que ser\xe1 el sistema y c\xf3mo funcionar\xe1 para satisfacer las necesidades del usuario. Proporcionan una descripci\xf3n clara de c\xf3mo se supone que el sistema debe responder a un comando en particular, las caracter\xedsticas y lo que esperan los usuarios. "),(0,a.kt)("p",null,"Requerimientos no funcionales Explicar las limitaciones y restricciones del sistema a dise\xf1ar. Estos requisitos no tienen ning\xfan impacto en la funcionalidad de la aplicaci\xf3n. Adem\xe1s, existe una pr\xe1ctica com\xfan de subclasificar los requisitos no funcionales en varias categor\xedas, como:"),(0,a.kt)("p",null,"Interfaz de usuario\nConfiabilidad\nLa Seguridad\nRendimiento\nMantenimiento\nEst\xe1ndares\nSubclasificar los requisitos no funcionales es una buena pr\xe1ctica. Ayuda a la hora de crear una lista de verificaci\xf3n de los requisitos que se deben cumplir en el sistema a dise\xf1ar. "),(0,a.kt)("p",null,"Los requisitos no funcionales son tan importantes como los requisitos funcionales. Si los requisitos funcionales especifican lo que debe hacer un sistema, los requisitos no funcionales describen c\xf3mo lo har\xe1 el sistema. Por ejemplo, la nueva aplicaci\xf3n nos proporcionar\xe1 la lista final de todos los usuarios conectados. Eso es parte de los requisitos funcionales. Si el requisito dice que el sistema solo funcionar\xeda en un sistema Windows y Linux, eso ser\xeda parte de los requisitos no funcionales. "),(0,a.kt)("p",null,"La \xfanica diferencia entre los dos es que el sistema no puede funcionar sin satisfacer todos los requisitos funcionales. Por otro lado, el sistema le dar\xe1 el resultado deseado incluso cuando no satisfaga los requisitos no funcionales. "),(0,a.kt)("p",null,"Definici\xf3n de requisitos:\nEl aspecto m\xe1s significativo de cualquier proyecto es su documento de requisitos. Los conceptos err\xf3neos, las incorrecciones o los excesos en los criterios redundar\xe1n necesariamente en retrasos en el cronograma, p\xe9rdida de recursos e insatisfacci\xf3n del consumidor."),(0,a.kt)("p",null,"El an\xe1lisis de requisitos debe comenzar con las necesidades del negocio o de la organizaci\xf3n y convertirlas en necesidades del proyecto. Si cumplir con los est\xe1ndares establecidos ser\xeda excesivamente costoso o llevar\xeda una cantidad de tiempo excesiva, es posible que los requisitos del proyecto deban comprometerse, reducirse o reducirse en las negociaciones con los clientes o patrocinadores."),(0,a.kt)("p",null,"\xbfC\xf3mo definir los requisitos?\nExisten diferentes formas de definici\xf3n de requisitos, pero todas comparten algunos pasos comunes:"),(0,a.kt)("p",null,"Identificar a los stakeholders y sus necesidades.\nDefinir el alcance del proyecto.\nProyecto de requisitos funcionales y no funcionales\nPriorizar los requisitos\nValidar los requisitos con las partes interesadas\nEchemos un vistazo m\xe1s de cerca a cada uno de estos pasos."),(0,a.kt)("p",null,"Identificaci\xf3n de los stakeholders y sus necesidades. es la primer paso en el proceso de definici\xf3n de requisitos. Las partes interesadas son individuos o grupos que tienen un inter\xe9s personal en el proyecto. Pueden ser internos (p. ej., empleados de la empresa) o externos (p. ej., clientes, proveedores, reguladores). Es importante identificar a todas las partes interesadas y sus necesidades desde el principio del proyecto, ya que su aporte ser\xe1 crucial para definir los requisitos."),(0,a.kt)("p",null,"El segundo paso es definir el alcance del proyecto. El alcance define los l\xedmites del proyecto e incluye todo lo que se entregar\xe1 como parte del mismo. Definir el alcance desde el principio ayuda a evitar el avance del alcance, que es cuando se agregan caracter\xedsticas o funcionalidades adicionales al proyecto m\xe1s all\xe1 de lo acordado originalmente."),(0,a.kt)("p",null,'El tercer paso es proyecto de requisitos funcionales y no funcionales. Los requisitos funcionales son aquellos que describen lo que debe hacer el software, como "El software debe poder iniciar sesi\xf3n para los usuarios". Los requisitos no funcionales son aquellos que describen c\xf3mo deber\xeda funcionar el software, como "El software deber\xeda ser receptivo". Es importante redactar ambos tipos de requisitos, ya que ambos sirven para diferentes prop\xf3sitos.'),(0,a.kt)("p",null,"El cuarto paso es priorizar los requisitos. Esto ayuda a garantizar que los requisitos m\xe1s importantes se aborden primero en caso de que haya recursos o tiempo limitados. Los requisitos se pueden priorizar utilizando varios m\xe9todos, como MoSCoW (debe tener, deber\xeda tener, podr\xeda tener, tendr\xeda) o Kano (debe tener, deleitar tener)."),(0,a.kt)("p",null,"El quinto y \xfaltimo paso es validar los requisitos con las partes interesadas. Esto ayuda a garantizar que los requisitos reflejen con precisi\xf3n las necesidades de las partes interesadas. La validaci\xf3n se puede realizar a trav\xe9s de varios m\xe9todos, como entrevistas, grupos focales o encuestas."),(0,a.kt)("p",null,"Conclusi\xf3n:\nDefinir los requisitos es un paso crucial en cualquier proyecto. Al seguir los pasos descritos anteriormente, puede asegurarse de que todas las partes interesadas tengan satisfechas sus necesidades y que el proyecto se mantenga encaminado. Al comprender cu\xe1les son sus requisitos, puede asegurarse de obtener el software adecuado para sus necesidades. El procedimiento de 5 pasos que describimos deber\xeda ayudarlo a recopilar la informaci\xf3n que "),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Ref: ",(0,a.kt)("a",{parentName:"em",href:"https://visuresolutions.com/es/blog/requirements-definition/"},"https://visuresolutions.com/es/blog/requirements-definition/"))))}p.isMDXComponent=!0}}]);