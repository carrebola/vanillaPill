"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5128],{3905:(e,a,n)=>{n.d(a,{Zo:()=>d,kt:()=>v});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=t.createContext({}),c=function(e){var a=t.useContext(i),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},d=function(e){var a=c(e.components);return t.createElement(i.Provider,{value:a},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,v=p["".concat(i,".").concat(m)]||p[m]||u[m]||o;return n?t.createElement(v,l(l({ref:a},d),{},{components:n})):t.createElement(v,l({ref:a},d))}));function v(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var s={};for(var i in a)hasOwnProperty.call(a,i)&&(s[i]=a[i]);s.originalType=e,s[p]="string"==typeof e?e:r,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5170:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var t=n(7462),r=(n(7294),n(3905));const o={sidebar_position:130},l="Historia 11. Primeros componentes vanillaJS: header y router",s={unversionedId:"h11",id:"h11",title:"Historia 11. Primeros componentes vanillaJS: header y router",description:"Antes de comenzar vamos a trabajar sobre una rama nueva que llamaremos vistas.",source:"@site/docs/h11.md",sourceDirName:".",slug:"/h11",permalink:"/vanillaPill/docs/h11",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/h11.md",tags:[],version:"current",sidebarPosition:130,frontMatter:{sidebar_position:130},sidebar:"tutorialSidebar",previous:{title:"Historia 10. Testing de las clases",permalink:"/vanillaPill/docs/h10"},next:{title:"Historia 12. Primeras vistas: Login, Registro, Administraci\xf3n de usuarios",permalink:"/vanillaPill/docs/h12"}},i={},c=[{value:"Componente Header",id:"componente-header",level:2},{value:"formEditarUsuario",id:"formeditarusuario",level:2},{value:"Componente Router",id:"componente-router",level:2}],d={toc:c},p="wrapper";function u(e){let{components:a,...n}=e;return(0,r.kt)(p,(0,t.Z)({},d,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"historia-11-primeros-componentes-vanillajs-header-y-router"},"Historia 11. Primeros componentes vanillaJS: header y router"),(0,r.kt)("p",null,"Antes de comenzar vamos a trabajar sobre una rama nueva que llamaremos ",(0,r.kt)("strong",{parentName:"p"},"vistas"),"."),(0,r.kt)("h2",{id:"componente-header"},"Componente Header"),(0,r.kt)("p",null,"Al principio del proyecto creamos un componente ",(0,r.kt)("strong",{parentName:"p"},"header")," b\xe1sico con la siguiente estructura:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="header.js"',title:'"header.js"'},"export const header = {\n  template: 'header',\n  script: ()=>{\n    console.log('header)\n  }\n}\n")),(0,r.kt)("p",null,"Vamos a actualizar la propiedad template con el c\xf3digo correspondiente al header de nuestro prototipo html. "),(0,r.kt)("p",null,"Este componente contendr\xe1 una barra de navegaci\xf3n b\xe1sica responsive basada en navbar de bootstrap. Tambi\xe9n tendremos un icono para acceder al men\xfa del usuario con las opciones:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"login/logout"),(0,r.kt)("li",{parentName:"ul"},"registro"),(0,r.kt)("li",{parentName:"ul"},"administraci\xf3n de usuarios")),(0,r.kt)("p",null,"M\xe1s adelante actualizaremos el header para adaptarlo a las nuevas funcionalidades."),(0,r.kt)("p",null,"Pero antes necesitamos crear la carpeta ",(0,r.kt)("inlineCode",{parentName:"p"},"src/assets")," para almacenar las imagenes del logotipo (",(0,r.kt)("strong",{parentName:"p"},"logo_vanilla.svg"),") y el avatar del usuario cuando la sesi\xf3n est\xe1 cerrada (",(0,r.kt)("strong",{parentName:"p"},"avatar.svg"),")."),(0,r.kt)("p",null,"Nuestro componente header quedar\xe1 as\xed:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="header.js"',title:'"header.js"'},'export const header = {\n  template: `\n  \n\x3c!-- Navbar  --\x3e\n<nav class="navbar navbar-expand-sm bg-light fixed-top">\n  <div class="container-fluid">\n    <a class="navbar-brand d-flex align-items-center" href="/">\n      <img\n        src="/assets/logo_vanilla.svg"\n        alt="Logo"\n        width="30"\n        height="30"\n        class="d-inline-block align-text-top me-2"\n      />\n      <span class=""></span>\n      Vanilla Games\n    </a>\n    \n    <button\n      class="navbar-toggler ms-auto\n      "\n      type="button"\n      data-bs-toggle="collapse"\n      data-bs-target="#navbarNavDropdown"\n      aria-controls="navbarNavDropdown"\n      aria-expanded="false"\n      aria-label="Toggle navigation"\n    >\n      <span class="navbar-toggler-icon"></span>\n    </button>\n    <div class="collapse navbar-collapse" id="navbarNavDropdown">   \n      <ul class="navbar-nav">   \n        <li class="nav-item">\n          <a class="nav-link" href="item1.html">Item 1</a>\n        </li>\n        <li class="nav-item">\n          <a class="nav-link" href="item2.html">Item 2</a>\n        </li>\n        <li><hr /></li>\n        \n        <li class="nav-item">\n          <a class="nav-link" href="item3.html">Item 3</a>\n        </li>\n        \n      </li>\n      </ul>\n      \n    </div>\n    \x3c!-- login --\x3e\n    <ul class="navbar nav me-5">\n      <li class="nav-item dropdown">\n        <a\n          class="nav-link dropdown-toggle"\n          href="#"\n          role="button"\n          data-bs-toggle="dropdown"\n          aria-expanded="false"\n        >\n          <div class="avatarLogin d-inline-block">\n            <img\n              src="/assets/avatar.svg"\n              alt="Logo"\n              width="30"\n              height="30"\n              class="d-inline-block align-text-top"\n            />\n          </div>\n        </a>\n        <ul class="dropdown-menu">\n          <li><a class="dropdown-item" href="login.html">Login</a></li>\n          <li>\n            <a class="dropdown-item" href="registro.html">Registrate</a>\n          </li>\n          <li>\n            <a\n              data-bs-toggle="modal"\n              data-bs-target="#editar"\n              class="dropdown-item"\n              href="editarPerfil.html"\n              >Editar perfil</a\n            >\n          </li>\n          <div class="dropdown-divider"></div>\n          <li>\n            <a class="dropdown-item" href="adminUsuarios.html">Admin Usuarios</a>\n          </li>\n        </ul>\n    </ul> \n  </div>\n</nav>\n')),(0,r.kt)("p",null,"Vamos a a\xf1adir ahora al header una ventana modal que nos permitir\xe1 editar el perfil del usuario logueado cuando hacemos click sobre la opci\xf3n de men\xfa correspondiente."),(0,r.kt)("p",null,"Para ello vamos a crear un componente ",(0,r.kt)("inlineCode",{parentName:"p"},"formEditarUsuario.js")),(0,r.kt)("h2",{id:"formeditarusuario"},"formEditarUsuario"),(0,r.kt)("p",null,"Este componente tendr\xe1 la misma estructura que el anterior, una propiedad template para el codigo html correspondiente al formulario, y un m\xe9todo script que incluir\xe1 toda la l\xf3gica (validaci\xf3n y conexi\xf3n con la base de datos), y que programaremos m\xe1s adelante."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="formEditarUsuario.js"',title:'"formEditarUsuario.js"'},'export const formEditarUsuario = {\n  template: `\n    \n\x3c!-- Modal --\x3e\n<div class="modal fade" id="editar">\n<div class="modal-dialog" role="document">\n    <div class="modal-content">\n    <div class="modal-header">\n        <h5 class="modal-title">Editar usuario</h5>\n        <button\n        type="button"\n        class="btn-close"\n        data-bs-dismiss="modal"\n        aria-label="Close"\n        >\n        <span aria-hidden="true"></span>\n        </button>\n    </div>\n    <div class="modal-body">\n        <form class="p-3">\n        <label class="mt-3 form-label" for="nick">Nombre: </label>\n        <input id="nombre" type="text" class="form-control" value="" />\n\n        <label class="mt-3 form-label" for="apellidos">Apellidos: </label>\n        <input id="apellidos" type="text" class="form-control" value="" />\n\n        <label class="mt-3 form-label" for="email">Email</label>\n        <input\n            id="email"\n            type="email"\n            class="form-control"\n            value="email@gmail.com"\n        />\n\n        <label class="mt-3 form-label" for="contrase\xf1a">Contrase\xf1a: </label>\n        <input id="contrase\xf1a" type="password" class="form-control" value="123456" />\n        </form>\n    </div>\n    <div class="modal-footer">\n        <button type="button" class="btn btn-primary">\n        Guardar cambios\n        </button>\n        <button\n        type="button"\n        class="btn btn-secondary"\n        data-bs-dismiss="modal"\n        >\n        Cerrar\n        </button>\n    </div>\n    </div>\n</div>\n</div>\n  `\n}\n')),(0,r.kt)("p",null,"Ahora solo falta inyectar este componente en el c\xf3digo html del componente header. Para ello importamos en ",(0,r.kt)("inlineCode",{parentName:"p"},"header.js"),"el componente con ",(0,r.kt)("inlineCode",{parentName:"p"},"import { formEditarUsuario } from './formEditarUsuario'")," "),(0,r.kt)("p",null,"y insertamos su template al final del c\xf3digo html de nuestro componente header: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="header.js"',title:'"header.js"'},"  ...\n\n    </div>\n  </nav>\n\n  //Modals\n  ${formEditarUsuario.template}\n`\n}\n")),(0,r.kt)("h2",{id:"componente-router"},"Componente Router"),(0,r.kt)("p",null,"Vamos a crear el c\xf3digo neceario para la implementaci\xf3n de un sistema de enrutamiento para una SPA (Single Page Application) en vanilla JavaScript."),(0,r.kt)("p",null,"En primer lugar vamos a definir un objeto llamado rutas que contiene una lista de todas las rutas de la aplicaci\xf3n y la vista correspondiente a cada una de ellas. "),(0,r.kt)("p",null,"Cada ruta est\xe1 representada por una cadena que indica la direcci\xf3n de la ruta, y el valor asociado a cada ruta es una promesa que se resolver\xe1 con el objeto de la vista correspondiente. "),(0,r.kt)("p",null,"Las vistas se importan din\xe1micamente usando el m\xe9todo import()."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="router.js"',title:'"router.js"'},"// Objeto con todas las rutas y su vista asociada\nconst rutas = {\n  '#/home': import('../vistas/homeVista.js'),\n  '#/adminUsuarios': import('../vistas/adminVista.js'),\n  '#/registro': import('../vistas/registroVista.js'),\n  '#/login': import('../vistas/loginVista.js')\n}\n")),(0,r.kt)("p",null,"Ahora creamos la funci\xf3n principal ",(0,r.kt)("inlineCode",{parentName:"p"},"router"),". Esta ser\xe1 la que maneje el enrutamiento en la aplicaci\xf3n. "),(0,r.kt)("p",null,"Esta funci\xf3n se dispara cada vez que se produce un cambio en la ruta. "),(0,r.kt)("p",null,"Para navegar a trav\xe9s de las vistas sin tener que recargar la p\xe1gina utilizaremos el hash ",(0,r.kt)("inlineCode",{parentName:"p"},"#")," de manera que la p\xe1gina home tendria la ruta ",(0,r.kt)("a",{parentName:"p",href:"http://www.mihost.com/#/home"},"www.mihost.com/#/home")),(0,r.kt)("p",null,"Dentro de la funci\xf3n router() se obtiene el hash de la ruta modificada mediante ",(0,r.kt)("inlineCode",{parentName:"p"},"window.location.hash"),". "),(0,r.kt)("p",null,"Despu\xe9s, se utiliza este hash resultante para obtener la vista correspondiente del objeto rutas."),(0,r.kt)("p",null,"Si la vista existe, se obtiene el objeto de la vista mediante la propiedad ",(0,r.kt)("strong",{parentName:"p"},"default")," de la promesa. "),(0,r.kt)("p",null,"Luego, se inyecta la vista en el elemento main del documento HTML utilizando la propiedad ",(0,r.kt)("strong",{parentName:"p"},"innerHTML")," de document.querySelector('main'). Por \xfaltimo, se ejecuta el ",(0,r.kt)("strong",{parentName:"p"},"script")," de la vista si lo hay."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="router"',title:'"router"'},"// Funci\xf3n que obtiene la ruta del navegador\nconst router = async () => {\n  // Capturamos el hash # que ha cambiado en la url\n  const path = window.location.hash\n\n  // capturamos el componente con ese nombre de la vista\n  const componenteVista = await rutas[path]\n  // Si existe la vista la podremos cargar\n  try {\n    // Obtenemos el objeto del componente\n    const vista = await componenteVista.default\n    // inyectamos vista y ejecutamos su script\n    document.querySelector('main').innerHTML = vista.template\n    // vista.script()\n  } catch (error) {\n    // Si se produce un error cargamos la vista 404\n    console.log(error)\n  }\n}\n")),(0,r.kt)("p",null,"La funci\xf3n ",(0,r.kt)("strong",{parentName:"p"},"observadorRutas")," es una funci\xf3n que se encarga de escuchar los eventos de enrutamiento en la aplicaci\xf3n. "),(0,r.kt)("p",null,"En esta funci\xf3n, se capturan los eventos de clic en los enlaces, y se evita que se cargue la p\xe1gina utilizando el m\xe9todo preventDefault(). "),(0,r.kt)("p",null,"Luego, se obtiene la ruta del enlace utilizando el m\xe9todo ",(0,r.kt)("strong",{parentName:"p"},"getAttribute('href')"),". Se utiliza la funci\xf3n ",(0,r.kt)("strong",{parentName:"p"},"pushState()")," del objeto ",(0,r.kt)("strong",{parentName:"p"},"history")," para agregar la nueva ruta al historial del navegador sin recargar la p\xe1gina. "),(0,r.kt)("p",null,"Finalmente, se llama a la funci\xf3n ",(0,r.kt)("strong",{parentName:"p"},"router()")," para cargar la nueva vista correspondiente a la ruta."),(0,r.kt)("p",null,"La funci\xf3n ",(0,r.kt)("strong",{parentName:"p"},"observadorRutas()")," tambi\xe9n escucha los eventos ",(0,r.kt)("strong",{parentName:"p"},"hashchange"),", ",(0,r.kt)("strong",{parentName:"p"},"popstate")," y ",(0,r.kt)("strong",{parentName:"p"},"load")," en la ventana del navegador para detectar cambios en la url: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"hashchange detecta cambios en el hash de navegador"),(0,r.kt)("li",{parentName:"ul"},"popstate detecta cuando nos movemos a trav\xe9s de las flechas del navegador"),(0,r.kt)("li",{parentName:"ul"},"load detecta cuando se carga una p\xe1gina nueva\nTodas estos eventos llaman a la funci\xf3n router()")),(0,r.kt)("p",null,"Con esta l\xf3gica podemos detectar: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"cuando se pulsa sobre un enlace (etiqueta ",(0,r.kt)("inlineCode",{parentName:"li"},"<a>"),"), "),(0,r.kt)("li",{parentName:"ul"},"cuando se navega por el historial o "),(0,r.kt)("li",{parentName:"ul"},"cuando se introduce directamente una url en la barra de navegaci\xf3n\npara poder cargar la vista correspondiente")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="router.js"',title:'"router.js"'},"// Capturamos los eventos\nexport const observadorRutas = () => {\n  // Capturamos eventos de los enlaces\n  const links = document.querySelectorAll('a')\n  links.forEach(link => {\n    link.addEventListener('click', event => {\n      // Evitamos que se cargue la p\xe1gina\n      event.preventDefault()\n      // Obtenemos la ruta del enlace sin el .html\n      const href = link.getAttribute('href')\n      // A\xf1adimos la nueva ruta al historial\n      history.pushState({ path: href }, '', href)\n      router()\n    })\n  })\n\n  // Detectamos los cambios en barra de navegaci\xf3n\n  window.addEventListener('hashchange', () => {\n    console.log('hashchange')\n    router()\n  })\n\n  window.addEventListener('popstate', () => {\n    console.log('popstate')\n    router()\n  })\n  window.addEventListener('load', () => {\n    console.log('load')\n    router()\n  })\n}\n")),(0,r.kt)("p",null,"Ahora solo faltar\xeda a\xf1adir a la p\xe1gina principal ",(0,r.kt)("inlineCode",{parentName:"p"},"main.js")," una llamada a la funci\xf3n observadorRutas() para que escuche los posibles eventos."),(0,r.kt)("p",null,"Tambien vamos a eliminar la inyecci\xf3n manual que hac\xedamos sobre la etiqueta main para usar ",(0,r.kt)("inlineCode",{parentName:"p"},"windows.location = '#/home'")," y asociar as\xed la vista home a la raiz de la app."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="main.js"',title:'"main.js"'},"// Import our custom CSS\nimport './scss/styles.scss'\n// Import all of Bootstrap's JS\nimport * as bootstrap from 'bootstrap'\n\n// Importamos componentes header y footer\nimport { header } from './componentes/header'\nimport { footer } from './componentes/footer'\n\n// Importamos la Funci\xf3n para detectar eventos al cargar las vistas\nimport { observadorRutas } from './componentes/router'\n\n//Inyectamos los componentes header y footer\ndocument.querySelector('#header').innerHTML = header.template\ndocument.querySelector('#footer').innerHTML = footer.template\n\nobservadorRutas()\n\n// Cargamos la p\xe1gina home\nwindow.location = '#/home'\n")))}u.isMDXComponent=!0}}]);